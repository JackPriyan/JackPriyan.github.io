{"version":3,"sources":["components/autocomplete.js","components/languageswitcher.js","components/navbar.js","utils/ScrollToTop.js","App.js","i18n/index.js","serviceWorker.js","index.js","constants.js","utils/commonfunctions.js"],"names":["engine","Bloodhound","initialize","local","STATE_CODES_ARRAY","queryTokenizer","tokenizers","whitespace","datumTokenizer","obj","districtEngine","limit","indexRemote","remote","url","transform","response","districts","Object","keys","map","stateName","districtData","districtName","push","district","state","essentialsEngine","resources","useStyles","makeStyles","theme","overrides","MuiInputBase","root","color","padding","spacing","paddingLeft","transition","transitions","create","width","breakpoints","up","inputRoot","inputInput","MuiAutocomplete","input","underline","borderBottom","ComboBox","classes","t","useTranslation","useState","setValue","React","inputValue","setInputValue","options","setOptions","handleSearch","useCallback","searchInput","console","log","results","search","datums","result","index","stateObj","name","type","route","code","slice","districtObj","STATE_CODES_REVERSE","essentialsObj","nameoftheorganisation","category","website","contact","description","descriptionandorserviceprovided","city","phonenumber","useEffect","suggestions","Autocomplete","id","getOptionLabel","option","onChange","event","newValue","onInputChange","newInputValue","style","renderInput","params","TextField","InputProps","disableUnderline","placeholder","variant","LanguageSwitcher","useLocalStorage","language","setLanguage","i18n","changeLanguage","anchorEl","setAnchorEl","handleClose","className","aria-controls","aria-haspopup","onClick","currentTarget","locales","Menu","keepMounted","open","Boolean","onClose","entries","key","MenuItem","display","height","appBar","zIndex","drawer","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","toolbar","alignItems","justifyContent","mixins","toolbarHeight","content","flexGrow","position","borderRadius","shape","backgroundColor","fade","palette","common","white","searchIcon","pointerEvents","sectionDesktop","sectionMobile","Navbar","pages","darkMode","setDarkMode","useTheme","setOpen","expand","setIsThemeSet","useLockBodyScroll","CssBaseline","AppBar","clsx","Toolbar","IconButton","aria-label","edge","Typography","noWrap","grow","Drawer","paper","direction","Divider","List","ListItem","button","text","path","icon","Home","People","Equalizer","Contacts","Help","item","Link","href","textDecoration","ListItemIcon","ListItemText","primary","window","innerWidth","prevMode","WbSunny","Brightness2","ScrollToTop","pathname","useLocation","scrollTo","lazy","DeepDive","FAQ","Demographics","State","Essentials","schemaMarkup","alternateName","image","App","pageLink","view","displayName","animationDelayForNavbar","showInNavbar","isThemeSet","useEffectOnce","matchMedia","matches","document","querySelector","classList","add","remove","Helmet","JSON","stringify","fallback","render","location","Fragment","page","exact","match","stateCode","to","use","Backend","LanguageDetector","initReactI18next","init","debug","isDevelopmentOrTest","lng","fallbackLng","keySeparator","backend","loadPath","addPath","saveMissing","interpolation","escapeValue","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","STATE_ROW_STATISTICS","DISTRICT_ROW_STATISTICS","MAP_TYPES","COUNTRY","STATE","DISTRICT","MAP_STATISTICS","TOTAL","PER_MILLION","ZONE","HOTSPOTS","MAP_VIEWS","STATES","DISTRICTS","MAPS_DIR","MAP_META","India","geoDataFile","mapType","graphObjectStates","graphObjectDistricts","Assam","Bihar","Chandigarh","Chhattisgarh","Delhi","Karnataka","Kerala","Goa","Gujarat","Haryana","Jharkhand","Ladakh","Lakshadweep","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Odisha","Puducherry","Punjab","Rajasthan","Sikkim","Telangana","Tripura","Uttarakhand","STATE_CODES","AP","AR","AS","BR","CT","GA","GJ","HR","HP","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DL","JK","LA","LD","PY","stateCodes","reverseStateCodes","STATE_POPULATIONS","Total","RAW_DATA_PARTITIONS","v1","start","Date","end","v2","v3","v4","LOCALE_SHORTHANDS","english","hindi","hi","telugu","te","kannada","gujarati","gu","marathi","tamil","ta","bengali","bn","punjabi","malayalam","odiya","getStateName","toUpperCase","getIndiaDay","startOfDay","utcToZonedTime","formatDate","unformattedDate","day","month","year","time","formatDateAbsolute","format","parse","locale","formatDayMonth","formatLastUpdated","formatDistance","formatTimeseriesDate","formatTimeseriesTickX","preprocessTimeseries","timeseries","data","dataTypes","filter","d","every","dt","date","Number","today","isBefore","validateCTS","stat","totalconfirmed","totalrecovered","totaldeceased","dailyconfirmed","dailyrecovered","dailydeceased","totalactive","dailyactive","sliceTimeseriesFromEnd","days","formatNumber","value","numberFormatter","Intl","NumberFormat","isNaN","parseStateTimeseries","states_daily","statewiseSeries","reduce","a","c","i","forEach","k","v","toLowerCase","prev","length","parseStateTestData","reversed","reverse","ret","find","totaltested","source","source1","source2","updatedon","parseStateTestTimeseries","testTimseries","sc","dailytested","stateTs","differenceInDays","NaN","parseTotalTestTimeseries","updatetimestamp","split","totalsamplestested","isSameDay","mergeTimeseries","ts1","ts2","tsRet","assign","hasOwnProperty","d1","testData","d2","capitalize","s","charAt","capitalizeAll","str","join","abbreviate","replace","parseDistrictZones","zones","values"],"mappings":"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","file":"static/js/main.6689aff8.chunk.js","sourcesContent":["import {STATE_CODES_ARRAY, STATE_CODES_REVERSE} from '../constants';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Bloodhound from 'corejs-typeahead';\r\nimport React from 'react';\r\nimport {useState, useCallback} from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nconst engine = new Bloodhound({\r\n  initialize: true,\r\n  local: STATE_CODES_ARRAY,\r\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),\r\n});\r\n\r\nconst districtEngine = new Bloodhound({\r\n  initialize: true,\r\n  limit: 5,\r\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('district'),\r\n  indexRemote: true,\r\n  remote: {\r\n    url: 'https://api.covid19india.org/state_district_wise.json',\r\n    transform: function (response) {\r\n      const districts = [];\r\n      Object.keys(response).map((stateName) => {\r\n        const districtData = response[stateName].districtData;\r\n        Object.keys(districtData).map((districtName) => {\r\n          return districts.push({district: districtName, state: stateName});\r\n        });\r\n        return null;\r\n      });\r\n      return districts;\r\n    },\r\n  },\r\n});\r\n\r\nconst essentialsEngine = new Bloodhound({\r\n  initialize: true,\r\n  limit: 5,\r\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace(\r\n    'category',\r\n    'city',\r\n    'contact',\r\n    'descriptionandorserviceprovided',\r\n    'nameoftheorganisation',\r\n    'state'\r\n  ),\r\n  indexRemote: true,\r\n  remote: {\r\n    url: 'https://api.covid19india.org/resources/resources.json',\r\n    transform: function (response) {\r\n      return response.resources;\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  overrides: {\r\n    MuiInputBase: {\r\n      root: {\r\n        color: '#ffffff',\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n          width: '100%',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: '#ffffff',\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '100%',\r\n    },\r\n  },\r\n  inputInput: {},\r\n  MuiAutocomplete: {\r\n    input: {\r\n      color: '#ffffff',\r\n    },\r\n  },\r\n  underline: {\r\n    '&&&:before': {\r\n      borderBottom: 'none',\r\n    },\r\n    '&&:after': {\r\n      borderBottom: 'none',\r\n    },\r\n  },\r\n}));\r\nexport default function ComboBox() {\r\n  const classes = useStyles();\r\n  const {t} = useTranslation();\r\n  const [setValue] = useState(null);\r\n  const [inputValue, setInputValue] = React.useState('');\r\n  const [options, setOptions] = React.useState([]);\r\n\r\n  const handleSearch = useCallback((searchInput) => {\r\n    console.log('Testing search => ', searchInput);\r\n    const results = [];\r\n\r\n    const sync = (datums) => {\r\n      datums.map((result, index) => {\r\n        const stateObj = {\r\n          name: result.name,\r\n          type: 'state',\r\n          route: result.code,\r\n        };\r\n        results.push(stateObj);\r\n        return null;\r\n      });\r\n    };\r\n\r\n    const districtSync = (datums) => {\r\n      datums.slice(0, 3).map((result, index) => {\r\n        const districtObj = {\r\n          name: result.district,\r\n          type: 'district',\r\n          route: STATE_CODES_REVERSE[result.state],\r\n        };\r\n        results.push(districtObj);\r\n\r\n        return null;\r\n      });\r\n    };\r\n\r\n    const essentialsSync = (datums) => {\r\n      datums.slice(0, 5).map((result, index) => {\r\n        const essentialsObj = {\r\n          name: result.nameoftheorganisation,\r\n          type: 'essentials',\r\n          category: result.category,\r\n          website: result.contact,\r\n          description: result.descriptionandorserviceprovided,\r\n          city: result.city,\r\n          state: result.state,\r\n          contact: result.phonenumber,\r\n        };\r\n        results.push(essentialsObj);\r\n        console.log('Results => ', results);\r\n        return null;\r\n      });\r\n      setOptions([...results]);\r\n    };\r\n\r\n    engine.search(searchInput, sync);\r\n    districtEngine.search(searchInput, districtSync);\r\n    essentialsEngine.search(searchInput, essentialsSync);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (inputValue === '') {\r\n      const suggestions = [\r\n        {name: t('Testing Pune')},\r\n        {name: t('Delhi Shelter')},\r\n        {name: t('Community Kitchen in Kerala')},\r\n        {name: t('Groceries Chennai')},\r\n        {name: t('Senior citizen support bangalore')},\r\n        {name: t('Delhi Shelter')},\r\n        {name: t('Community Kitchen in Kerala')},\r\n        {name: t('Delhi Shelter')},\r\n      ];\r\n      setOptions(suggestions);\r\n      return undefined;\r\n    }\r\n    handleSearch(inputValue);\r\n    // setOptions(suggestions2);\r\n    return undefined;\r\n  }, [inputValue, handleSearch, t]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"combo-box-demo\"\r\n      options={options}\r\n      getOptionLabel={(option) => option.name}\r\n      onChange={(event, newValue) => {\r\n        setOptions(newValue ? [newValue, ...options] : options);\r\n        setValue(newValue);\r\n      }}\r\n      onInputChange={(event, newInputValue) => {\r\n        setInputValue(newInputValue);\r\n      }}\r\n      style={{width: 300}}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          classes={{\r\n            root: classes.inputRoot,\r\n          }}\r\n          InputProps={{disableUnderline: true}}\r\n          {...params}\r\n          placeholder=\"Search your city, resources, etc\"\r\n          variant=\"standard\"\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import locales from '../i18n/locales.json';\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport React, {useEffect} from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {useLocalStorage} from 'react-use';\r\n\r\nexport default function LanguageSwitcher() {\r\n  const [language, setLanguage] = useLocalStorage('language', 'english');\r\n  const {i18n} = useTranslation();\r\n\r\n  useEffect(() => {\r\n    if (i18n) i18n.changeLanguage(language);\r\n  }, [i18n, language]);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"LanguageSwitcher\">\r\n      <div\r\n        aria-controls=\"simple-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        {locales[language]}\r\n      </div>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {Object.entries(locales).map(([key, language]) => (\r\n          <MenuItem\r\n            key={key}\r\n            onClick={() => {\r\n              setLanguage(key);\r\n              handleClose();\r\n            }}\r\n          >\r\n            {language}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import ComboBox from './autocomplete';\r\nimport LanguageSwitcher from './languageswitcher';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {useTheme} from '@material-ui/core/styles';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {fade} from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Home} from '@material-ui/icons';\r\nimport {People} from '@material-ui/icons';\r\nimport {Equalizer} from '@material-ui/icons';\r\nimport {Help} from '@material-ui/icons';\r\nimport {Contacts} from '@material-ui/icons';\r\nimport {WbSunny} from '@material-ui/icons';\r\nimport {Brightness2} from '@material-ui/icons';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\nimport {useState} from 'react';\r\nimport {useLocalStorage} from 'react-use';\r\nimport {useLockBodyScroll} from 'react-use'; //  useWindowSize,\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: 'inherit',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  toolbarHeight: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    height: 'inherit',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '55ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Navbar({pages, darkMode, setDarkMode}) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [expand] = useState(false);\r\n  // eslint-disable-next-line\r\n  const [isThemeSet, setIsThemeSet] = useLocalStorage('isThemeSet', false);\r\n\r\n  useLockBodyScroll(expand);\r\n  //  const windowSize = useWindowSize();\r\n  //  const preventDefault = (event) => event.preventDefault();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h3\" noWrap>\r\n            Covid19 India\r\n          </Typography>\r\n\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n\r\n            <ComboBox />\r\n          </div>\r\n          <div className={classes.grow} />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <div className={Navbar}>\r\n          <List>\r\n            <ListItem button>\r\n              <LanguageSwitcher />\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n\r\n          <List>\r\n            {[\r\n              {text: 'Home', path: '/', icon: <Home />},\r\n              {text: 'Demographics', path: '/demographics', icon: <People />},\r\n              {text: 'Deep Dive', path: '/deepdive', icon: <Equalizer />},\r\n              {text: 'Essentials', path: '/essentials', icon: <Contacts />},\r\n              {text: 'About', path: '/about', icon: <Help />},\r\n            ].map((item, index) => (\r\n              <Link\r\n                key={index}\r\n                href={item.path}\r\n                color=\"inherit\"\r\n                style={{textDecoration: 'none'}}\r\n              >\r\n                <ListItem key={index} button>\r\n                  <ListItemIcon> {item.icon}</ListItemIcon>\r\n                  <ListItemText primary={item.text} />\r\n                </ListItem>\r\n              </Link>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          {window.innerWidth > 769 && (\r\n            <List>\r\n              <ListItem\r\n                button\r\n                onClick={() => {\r\n                  setDarkMode((prevMode) => !prevMode);\r\n                  setIsThemeSet(true);\r\n                }}\r\n              >\r\n                {darkMode ? <WbSunny /> : <Brightness2 />}\r\n              </ListItem>\r\n            </List>\r\n          )}\r\n        </div>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\nexport default Navbar;\r\n","import {useEffect} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nexport default function ScrollToTop() {\r\n  const {pathname} = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import Navbar from './components/navbar';\r\nimport ScrollToTop from './utils/ScrollToTop';\r\n\r\nimport React, {Suspense, lazy} from 'react';\r\nimport {Helmet} from 'react-helmet';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport {useLocalStorage, useEffectOnce} from 'react-use';\r\nimport './App.scss';\r\n\r\nconst Home = lazy(() =>\r\n  import('./components/home' /* webpackChunkName: \"Home\" */)\r\n);\r\nconst DeepDive = lazy(() =>\r\n  import('./components/deepdive' /* webpackChunkName: \"DeepDive\" */)\r\n);\r\nconst FAQ = lazy(() =>\r\n  import('./components/faq' /* webpackChunkName: \"FAQ\" */)\r\n);\r\nconst Demographics = lazy(() =>\r\n  import('./components/demographics' /* webpackChunkName: \"PatientDB\" */)\r\n);\r\nconst State = lazy(() =>\r\n  import('./components/state' /* webpackChunkName: \"State\" */)\r\n);\r\nconst Essentials = lazy(() =>\r\n  import('./components/essentials' /* webpackChunkName: \"Essentials\" */)\r\n);\r\n\r\nconst schemaMarkup = {\r\n  '@context': 'http://schema.org/',\r\n  '@type': 'NGO',\r\n  name: 'Coronavirus Outbreak in India: Latest Map and Case Count',\r\n  alternateName: 'COVID-19 Tracker',\r\n  url: 'https://www.covid19india.org/',\r\n  image: 'https://www.covid19india.org/thumbnail.png',\r\n};\r\n\r\nfunction App() {\r\n  const {t} = useTranslation();\r\n\r\n  const pages = [\r\n    {\r\n      pageLink: '/',\r\n      view: Home,\r\n      displayName: 'Home',\r\n      animationDelayForNavbar: 0.2,\r\n      showInNavbar: true,\r\n    },\r\n    {\r\n      pageLink: '/demographics',\r\n      view: Demographics,\r\n      displayName: t('Demographics'),\r\n      animationDelayForNavbar: 0.3,\r\n      showInNavbar: true,\r\n    },\r\n    {\r\n      pageLink: '/deepdive',\r\n      view: DeepDive,\r\n      displayName: t('Deep Dive'),\r\n      animationDelayForNavbar: 0.4,\r\n      showInNavbar: true,\r\n    },\r\n    {\r\n      pageLink: '/essentials',\r\n      view: Essentials,\r\n      displayName: t('Essentials'),\r\n      animationDelayForNavbar: 0.5,\r\n      showInNavbar: true,\r\n    },\r\n    {\r\n      pageLink: '/about',\r\n      view: FAQ,\r\n      displayName: t('About'),\r\n      animationDelayForNavbar: 0.6,\r\n      showInNavbar: true,\r\n    },\r\n    {\r\n      pageLink: '/state/:stateCode',\r\n      view: State,\r\n      displayName: t('State'),\r\n      animationDelayForNavbar: 0.7,\r\n      showInNavbar: false,\r\n    },\r\n  ];\r\n\r\n  const [darkMode, setDarkMode] = useLocalStorage('darkMode', false);\r\n  const [isThemeSet] = useLocalStorage('isThemeSet', false);\r\n\r\n  useEffectOnce(() => {\r\n    if (\r\n      window.matchMedia &&\r\n      window.matchMedia('(prefers-color-scheme: dark)').matches &&\r\n      !isThemeSet\r\n    ) {\r\n      setDarkMode(true);\r\n    } else if (\r\n      window.matchMedia &&\r\n      !window.matchMedia('(prefers-color-scheme: dark)').matches &&\r\n      !isThemeSet\r\n    ) {\r\n      setDarkMode(false);\r\n    }\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (darkMode) {\r\n      document.querySelector('body').classList.add('dark-mode');\r\n    } else {\r\n      document.querySelector('body').classList.remove('dark-mode');\r\n    }\r\n  }, [darkMode]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Helmet>\r\n        <script type=\"application/ld+json\">\r\n          {JSON.stringify(schemaMarkup)}\r\n        </script>\r\n      </Helmet>\r\n\r\n      <Router>\r\n        <ScrollToTop />\r\n        <Suspense fallback={<div className=\"lazy\"></div>}>\r\n          <Route\r\n            render={({location}) => (\r\n              <React.Fragment>\r\n                <Navbar\r\n                  pages={pages}\r\n                  darkMode={darkMode}\r\n                  setDarkMode={setDarkMode}\r\n                />\r\n                <Switch location={location}>\r\n                  {pages.map((page, index) => {\r\n                    return (\r\n                      <Route\r\n                        exact\r\n                        path={page.pageLink}\r\n                        render={({match}) => (\r\n                          <page.view key={match.params.stateCode || index} />\r\n                        )}\r\n                        key={index}\r\n                      />\r\n                    );\r\n                  })}\r\n                  <Redirect to=\"/\" />\r\n                </Switch>\r\n              </React.Fragment>\r\n            )}\r\n          />\r\n        </Suspense>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {isDevelopmentOrTest} from '../utils/commonfunctions';\r\n\r\nimport i18n from 'i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport Backend from 'i18next-http-backend';\r\nimport {initReactI18next} from 'react-i18next';\r\n\r\nconst DEBUG = true;\r\n\r\ni18n\r\n  .use(Backend)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    debug: isDevelopmentOrTest() && DEBUG,\r\n    lng: 'english',\r\n    fallbackLng: 'english',\r\n    keySeparator: false,\r\n    backend: {\r\n      loadPath: 'https://api.covid19india.org/locales/locale_{{lng}}.json',\r\n      addPath: 'http://localhost:9999/',\r\n    },\r\n    saveMissing: isDevelopmentOrTest() && DEBUG,\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: {'Service-Worker': 'script'},\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import App from './App';\r\nimport './i18n';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport React, {Suspense} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nReactDOM.render(\r\n  <Suspense fallback={''}>\r\n    <App />\r\n  </Suspense>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {hi, te, gu, ta, bn} from 'date-fns/locale/';\r\n\r\nexport const STATE_ROW_STATISTICS = [\r\n  'confirmed',\r\n  'active',\r\n  'recovered',\r\n  'deaths',\r\n];\r\nexport const DISTRICT_ROW_STATISTICS = [\r\n  'confirmed',\r\n  'active',\r\n  'recovered',\r\n  'deceased',\r\n];\r\n\r\nexport const MAP_TYPES = {\r\n  COUNTRY: 'country',\r\n  STATE: 'state',\r\n  DISTRICT: 'district',\r\n};\r\n\r\nexport const MAP_STATISTICS = {\r\n  TOTAL: 0,\r\n  PER_MILLION: 1,\r\n  ZONE: 2,\r\n  HOTSPOTS: 3,\r\n};\r\n\r\nexport const MAP_VIEWS = {\r\n  STATES: 0,\r\n  DISTRICTS: 1,\r\n};\r\n\r\nexport const MAPS_DIR =\r\n  process.env.NODE_ENV === 'production' ? '/mini_maps' : '/maps';\r\n\r\nexport const MAP_META = {\r\n  India: {\r\n    geoDataFile: `${MAPS_DIR}/india.json`,\r\n    mapType: MAP_TYPES.COUNTRY,\r\n    graphObjectStates: 'india-states',\r\n    graphObjectDistricts: 'india-districts-2019-734',\r\n  },\r\n  'Andaman and Nicobar Islands': {\r\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'andamannicobarislands_district',\r\n  },\r\n  'Arunachal Pradesh': {\r\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'arunachalpradesh_district',\r\n  },\r\n  'Andhra Pradesh': {\r\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'andhrapradesh_district',\r\n  },\r\n  Assam: {\r\n    geoDataFile: `${MAPS_DIR}/assam.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'assam_district',\r\n  },\r\n  Bihar: {\r\n    name: 'Bihar',\r\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'bihar_district',\r\n  },\r\n  Chandigarh: {\r\n    name: 'Chandigarh',\r\n    geoDataFile: `${MAPS_DIR}/chandigarh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'chandigarh_district',\r\n  },\r\n  Chhattisgarh: {\r\n    name: 'Chhattisgarh',\r\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'chhattisgarh_district',\r\n  },\r\n  'Dadra and Nagar Haveli and Daman and Diu': {\r\n    geoDataFile: `${MAPS_DIR}/dnh-and-dd.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'dnh-and-dd',\r\n  },\r\n  Delhi: {\r\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'delhi_district',\r\n  },\r\n  Karnataka: {\r\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'karnataka_district',\r\n  },\r\n  Kerala: {\r\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'kerala_district',\r\n  },\r\n  Goa: {\r\n    geoDataFile: `${MAPS_DIR}/goa.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'goa_district',\r\n  },\r\n  Gujarat: {\r\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'gujarat_district',\r\n  },\r\n  Haryana: {\r\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'haryana_district',\r\n  },\r\n  'Himachal Pradesh': {\r\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'himachalpradesh_district',\r\n  },\r\n  'Jammu and Kashmir': {\r\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'jammukashmir_district',\r\n  },\r\n  Jharkhand: {\r\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'jharkhand_district',\r\n  },\r\n  Ladakh: {\r\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'ladakh_district',\r\n  },\r\n  Lakshadweep: {\r\n    geoDataFile: `${MAPS_DIR}/lakshadweep.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'lakshadweep_district',\r\n  },\r\n  'Madhya Pradesh': {\r\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'madhyapradesh_district',\r\n  },\r\n  Maharashtra: {\r\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'maharashtra_district',\r\n  },\r\n  Manipur: {\r\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'manipur_district',\r\n  },\r\n  Meghalaya: {\r\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'meghalaya_district',\r\n  },\r\n  Mizoram: {\r\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'mizoram_district',\r\n  },\r\n  Nagaland: {\r\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'nagaland_district',\r\n  },\r\n  Odisha: {\r\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'odisha_district',\r\n  },\r\n  Puducherry: {\r\n    geoDataFile: `${MAPS_DIR}/puducherry.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'puducherry_district',\r\n  },\r\n  Punjab: {\r\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'punjab_district',\r\n  },\r\n  Rajasthan: {\r\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'rajasthan_district',\r\n  },\r\n  Sikkim: {\r\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'sikkim_district',\r\n  },\r\n  'Tamil Nadu': {\r\n    geoDataFile: `${MAPS_DIR}/tamilnadu.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'tamilnadu_district',\r\n  },\r\n  Telangana: {\r\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'telangana_district',\r\n  },\r\n  Tripura: {\r\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'tripura_district',\r\n  },\r\n  Uttarakhand: {\r\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'uttarakhand_district',\r\n  },\r\n  'Uttar Pradesh': {\r\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'uttarpradesh_district',\r\n  },\r\n\r\n  'West Bengal': {\r\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'westbengal_district',\r\n  },\r\n};\r\n\r\nexport const STATE_CODES = {\r\n  AP: 'Andhra Pradesh',\r\n  AR: 'Arunachal Pradesh',\r\n  AS: 'Assam',\r\n  BR: 'Bihar',\r\n  CT: 'Chhattisgarh',\r\n  GA: 'Goa',\r\n  GJ: 'Gujarat',\r\n  HR: 'Haryana',\r\n  HP: 'Himachal Pradesh',\r\n  JH: 'Jharkhand',\r\n  KA: 'Karnataka',\r\n  KL: 'Kerala',\r\n  MP: 'Madhya Pradesh',\r\n  MH: 'Maharashtra',\r\n  MN: 'Manipur',\r\n  ML: 'Meghalaya',\r\n  MZ: 'Mizoram',\r\n  NL: 'Nagaland',\r\n  OR: 'Odisha',\r\n  PB: 'Punjab',\r\n  RJ: 'Rajasthan',\r\n  SK: 'Sikkim',\r\n  TN: 'Tamil Nadu',\r\n  TG: 'Telangana',\r\n  TR: 'Tripura',\r\n  UT: 'Uttarakhand',\r\n  UP: 'Uttar Pradesh',\r\n  WB: 'West Bengal',\r\n  AN: 'Andaman and Nicobar Islands',\r\n  CH: 'Chandigarh',\r\n  DN: 'Dadra and Nagar Haveli and Daman and Diu',\r\n  DL: 'Delhi',\r\n  JK: 'Jammu and Kashmir',\r\n  LA: 'Ladakh',\r\n  LD: 'Lakshadweep',\r\n  PY: 'Puducherry',\r\n};\r\n\r\nconst stateCodes = [];\r\nconst reverseStateCodes = {};\r\nObject.keys(STATE_CODES).map((key, index) => {\r\n  reverseStateCodes[STATE_CODES[key]] = key;\r\n  stateCodes.push({code: key, name: STATE_CODES[key]});\r\n  return null;\r\n});\r\nexport const STATE_CODES_REVERSE = reverseStateCodes;\r\nexport const STATE_CODES_ARRAY = stateCodes;\r\n\r\n// Source: Projected Populations (2019)\r\n// National Commission on Population, \"Population Projections for India and\r\n// States (2011-2036)\", Table-8 (p43), November 2019\r\n// https://nhm.gov.in/New_Updates_2018/Report_Population_Projection_2019.pdf\r\nexport const STATE_POPULATIONS = {\r\n  'Andaman and Nicobar Islands': 397000,\r\n  'Andhra Pradesh': 52221000,\r\n  'Arunachal Pradesh': 1504000,\r\n  Assam: 34293000,\r\n  Bihar: 119520000,\r\n  Chandigarh: 1179000,\r\n  Chhattisgarh: 28724000,\r\n  'Dadra and Nagar Haveli and Daman and Diu': 959000,\r\n  Delhi: 19814000,\r\n  Goa: 1540000,\r\n  Gujarat: 67936000,\r\n  Haryana: 28672000,\r\n  'Himachal Pradesh': 7300000,\r\n  'Jammu and Kashmir': 13203000,\r\n  Jharkhand: 37403000,\r\n  Karnataka: 65798000,\r\n  Kerala: 35125000,\r\n  Ladakh: 293000,\r\n  Lakshadweep: 68000,\r\n  'Madhya Pradesh': 82232000,\r\n  Maharashtra: 122153000,\r\n  Manipur: 3103000,\r\n  Meghalaya: 3224000,\r\n  Mizoram: 1192000,\r\n  Nagaland: 2150000,\r\n  Odisha: 43671000,\r\n  Puducherry: 1504000,\r\n  Punjab: 29859000,\r\n  Rajasthan: 77264000,\r\n  Sikkim: 664000,\r\n  'Tamil Nadu': 75695000,\r\n  Telangana: 37220000,\r\n  Tripura: 3992000,\r\n  'Uttar Pradesh': 224979000,\r\n  Uttarakhand: 11141000,\r\n  'West Bengal': 96906000,\r\n  Total: 1332900000,\r\n};\r\n\r\nexport const RAW_DATA_PARTITIONS = {\r\n  v1: {\r\n    start: new Date(2020, 0, 1),\r\n    end: new Date(2020, 3, 19),\r\n  },\r\n  v2: {\r\n    start: new Date(2020, 3, 20),\r\n    end: new Date(2020, 3, 26),\r\n  },\r\n  v3: {\r\n    start: new Date(2020, 3, 27),\r\n    end: new Date(2020, 4, 9),\r\n  },\r\n  v4: {\r\n    start: new Date(2020, 4, 10),\r\n    end: new Date(),\r\n  },\r\n};\r\n\r\nexport const LOCALE_SHORTHANDS = {\r\n  english: null,\r\n  hindi: hi,\r\n  telugu: te,\r\n  kannada: null,\r\n  gujarati: gu,\r\n  marathi: null,\r\n  tamil: ta,\r\n  bengali: bn,\r\n  punjabi: null,\r\n  malayalam: null,\r\n  odiya: null,\r\n};\r\n","import {\r\n  STATE_CODES,\r\n  STATE_CODES_REVERSE,\r\n  LOCALE_SHORTHANDS,\r\n} from '../constants';\r\n\r\nimport {\r\n  parse,\r\n  differenceInDays,\r\n  isBefore,\r\n  isSameDay,\r\n  startOfDay,\r\n  format,\r\n  formatDistance,\r\n} from 'date-fns';\r\nimport {utcToZonedTime} from 'date-fns-tz';\r\nimport i18n from 'i18next';\r\n\r\nexport const isDevelopmentOrTest = () => {\r\n  if (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test')\r\n    return true;\r\n  return false;\r\n};\r\n\r\nexport const getStateName = (code) => {\r\n  return STATE_CODES[code.toUpperCase()];\r\n};\r\n\r\nexport const getIndiaDay = () => {\r\n  return startOfDay(utcToZonedTime(new Date(), 'Asia/Kolkata'));\r\n};\r\n\r\nexport const formatDate = (unformattedDate) => {\r\n  const day = unformattedDate.slice(0, 2);\r\n  const month = unformattedDate.slice(3, 5);\r\n  const year = unformattedDate.slice(6, 10);\r\n  const time = unformattedDate.slice(11);\r\n  return `${year}-${month}-${day}T${time}+05:30`;\r\n};\r\n\r\nexport const formatDateAbsolute = (unformattedDate) => {\r\n  return format(\r\n    parse(unformattedDate, 'dd/MM/yyyy HH:mm:ss', new Date()),\r\n    'dd MMM, hh:mm b',\r\n    {\r\n      locale: LOCALE_SHORTHANDS[i18n.language],\r\n    }\r\n  );\r\n};\r\n\r\nexport const formatDayMonth = (unformattedDate) => {\r\n  return format(parse(unformattedDate, 'dd/MM/yyyy', new Date()), 'dd MMM', {\r\n    locale: LOCALE_SHORTHANDS[i18n.language],\r\n  });\r\n};\r\n\r\nexport const formatLastUpdated = (unformattedDate) => {\r\n  return formatDistance(new Date(formatDate(unformattedDate)), new Date(), {\r\n    locale: LOCALE_SHORTHANDS[i18n.language],\r\n  });\r\n};\r\n\r\nexport const formatTimeseriesDate = (unformattedDate) => {\r\n  return format(unformattedDate, 'dd MMMM', {\r\n    locale: LOCALE_SHORTHANDS[i18n.language],\r\n  });\r\n};\r\n\r\nexport const formatTimeseriesTickX = (unformattedDate) => {\r\n  return format(unformattedDate, 'd MMM', {\r\n    locale: LOCALE_SHORTHANDS[i18n.language],\r\n  });\r\n};\r\n\r\nconst validateCTS = (data = []) => {\r\n  const dataTypes = [\r\n    'dailyconfirmed',\r\n    'dailydeceased',\r\n    'dailyrecovered',\r\n    'totalconfirmed',\r\n    'totaldeceased',\r\n    'totalrecovered',\r\n  ];\r\n  return data\r\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\r\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\r\n    .filter((d) => {\r\n      // Skip data from the current day\r\n      const today = getIndiaDay();\r\n      const date = parse(d.date, 'dd MMMM', new Date(2020, 0, 1));\r\n      return isBefore(date, today);\r\n    });\r\n};\r\n\r\nexport const preprocessTimeseries = (timeseries) => {\r\n  return validateCTS(timeseries).map((stat, index) => ({\r\n    date: parse(stat.date, 'dd MMMM', new Date(2020, 0, 1)),\r\n    totalconfirmed: +stat.totalconfirmed,\r\n    totalrecovered: +stat.totalrecovered,\r\n    totaldeceased: +stat.totaldeceased,\r\n    dailyconfirmed: +stat.dailyconfirmed,\r\n    dailyrecovered: +stat.dailyrecovered,\r\n    dailydeceased: +stat.dailydeceased,\r\n    // Active = Confimed - Recovered - Deceased\r\n    totalactive:\r\n      +stat.totalconfirmed - +stat.totalrecovered - +stat.totaldeceased,\r\n    dailyactive:\r\n      +stat.dailyconfirmed - +stat.dailyrecovered - +stat.dailydeceased,\r\n  }));\r\n};\r\n\r\n/**\r\n * Returns the last `days` entries\r\n * @param {Array<Object>} timeseries\r\n * @param {number} days\r\n *\r\n * @return {Array<Object>}\r\n */\r\nexport function sliceTimeseriesFromEnd(timeseries, days) {\r\n  return timeseries.slice(-days);\r\n}\r\n\r\nexport const formatNumber = (value) => {\r\n  const numberFormatter = new Intl.NumberFormat('en-IN');\r\n  return isNaN(value) ? '-' : numberFormatter.format(value);\r\n};\r\n\r\nexport const parseStateTimeseries = ({states_daily: data}) => {\r\n  const statewiseSeries = Object.keys(STATE_CODES).reduce((a, c) => {\r\n    a[c] = [];\r\n    return a;\r\n  }, {});\r\n\r\n  const today = getIndiaDay();\r\n  for (let i = 0; i < data.length; i += 3) {\r\n    const date = parse(data[i].date, 'dd-MMM-yy', new Date());\r\n    // Skip data from the current day\r\n    if (isBefore(date, today)) {\r\n      Object.entries(statewiseSeries).forEach(([k, v]) => {\r\n        const stateCode = k.toLowerCase();\r\n        const prev = v[v.length - 1] || {};\r\n        // Parser\r\n        const dailyconfirmed = +data[i][stateCode] || 0;\r\n        const dailyrecovered = +data[i + 1][stateCode] || 0;\r\n        const dailydeceased = +data[i + 2][stateCode] || 0;\r\n        const totalconfirmed = +data[i][stateCode] + (prev.totalconfirmed || 0);\r\n        const totalrecovered =\r\n          +data[i + 1][stateCode] + (prev.totalrecovered || 0);\r\n        const totaldeceased =\r\n          +data[i + 2][stateCode] + (prev.totaldeceased || 0);\r\n        // Push\r\n        v.push({\r\n          date: date,\r\n          dailyconfirmed: dailyconfirmed,\r\n          dailyrecovered: dailyrecovered,\r\n          dailydeceased: dailydeceased,\r\n          totalconfirmed: totalconfirmed,\r\n          totalrecovered: totalrecovered,\r\n          totaldeceased: totaldeceased,\r\n          // Active = Confimed - Recovered - Deceased\r\n          totalactive: totalconfirmed - totalrecovered - totaldeceased,\r\n          dailyactive: dailyconfirmed - dailyrecovered - dailydeceased,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  return statewiseSeries;\r\n};\r\n\r\nexport const parseStateTestData = (data) => {\r\n  const reversed = [...data].reverse();\r\n  return Object.keys(STATE_CODES_REVERSE).reduce((ret, state) => {\r\n    const obj = reversed.find(\r\n      (obj) => obj.state === state && obj.totaltested !== ''\r\n    );\r\n    ret[state] = {\r\n      source: obj?.source1 || obj?.source2,\r\n      totaltested: obj?.totaltested,\r\n      updatedon: obj?.updatedon,\r\n    };\r\n    return ret;\r\n  }, {});\r\n};\r\n\r\nexport const parseStateTestTimeseries = (data) => {\r\n  const testTimseries = Object.keys(STATE_CODES).reduce((ret, sc) => {\r\n    ret[sc] = [];\r\n    return ret;\r\n  }, {});\r\n\r\n  const today = getIndiaDay();\r\n  data.forEach((d) => {\r\n    const date = parse(d.updatedon, 'dd/MM/yyyy', new Date());\r\n    const totaltested = +d.totaltested;\r\n    const stateCode = STATE_CODES_REVERSE[d.state];\r\n    if (stateCode && isBefore(date, today) && totaltested) {\r\n      const stateTs = testTimseries[stateCode];\r\n      let dailytested;\r\n      if (stateTs.length) {\r\n        const prev = stateTs[stateTs.length - 1];\r\n        dailytested =\r\n          differenceInDays(date, prev.date) === 1\r\n            ? totaltested - prev.totaltested\r\n            : NaN;\r\n      } else dailytested = NaN;\r\n      stateTs.push({\r\n        date: date,\r\n        totaltested: totaltested,\r\n        dailytested: dailytested,\r\n      });\r\n    }\r\n  });\r\n  return testTimseries;\r\n};\r\n\r\nexport const parseTotalTestTimeseries = (data) => {\r\n  const testTimseries = [];\r\n  const today = getIndiaDay();\r\n  data.forEach((d) => {\r\n    const date = parse(\r\n      d.updatetimestamp.split(' ')[0],\r\n      'dd/MM/yyyy',\r\n      new Date()\r\n    );\r\n    const totaltested = +d.totalsamplestested;\r\n    if (isBefore(date, today) && totaltested) {\r\n      let dailytested;\r\n      if (testTimseries.length) {\r\n        const prev = testTimseries[testTimseries.length - 1];\r\n        if (isSameDay(date, prev.date)) {\r\n          prev.dailytested += totaltested - prev.totaltested;\r\n          prev.totaltested = totaltested;\r\n        } else {\r\n          if (differenceInDays(date, prev.date) === 1)\r\n            dailytested = totaltested - prev.totaltested;\r\n          else dailytested = NaN;\r\n        }\r\n      } else dailytested = NaN;\r\n      testTimseries.push({\r\n        date: date,\r\n        totaltested: totaltested,\r\n        dailytested: dailytested,\r\n      });\r\n    }\r\n  });\r\n  return testTimseries;\r\n};\r\n\r\nexport const mergeTimeseries = (ts1, ts2) => {\r\n  const tsRet = Object.assign({}, ts1);\r\n  for (const state in ts1) {\r\n    if (ts1.hasOwnProperty(state)) {\r\n      tsRet[state] = ts1[state].map((d1) => {\r\n        const testData = ts2[state].find((d2) => isSameDay(d1.date, d2.date));\r\n        return {\r\n          totaltested: testData?.totaltested,\r\n          dailytested: testData?.dailytested,\r\n          ...d1,\r\n        };\r\n      });\r\n    }\r\n  }\r\n  return tsRet;\r\n};\r\n\r\nexport const capitalize = (s) => {\r\n  if (typeof s !== 'string') return '';\r\n  return s.charAt(0).toUpperCase() + s.slice(1);\r\n};\r\n\r\nexport const capitalizeAll = (s) => {\r\n  if (typeof s !== 'string') return '';\r\n  const str = s.toLowerCase().split(' ');\r\n  for (let i = 0; i < str.length; i++) {\r\n    str[i] = capitalize(str[i]);\r\n  }\r\n  return str.join(' ');\r\n};\r\n\r\nexport const abbreviate = (s) => {\r\n  return s.slice(0, 1) + s.slice(1).replace(/[aeiou]/gi, '');\r\n};\r\n\r\nexport const parseDistrictZones = (data, state) => {\r\n  const zones = data.reduce((ret, d) => {\r\n    ret[d.state] = ret[d.state] || {};\r\n    ret[d.state][d.district] = d;\r\n    return ret;\r\n  }, {});\r\n  Object.values(STATE_CODES).forEach((state) => {\r\n    if (!zones[state]) zones[state] = {};\r\n  });\r\n  return state ? {[state]: zones[state]} : zones;\r\n};\r\n\r\nexport const toTitleCase = (str) => {\r\n  return str.replace(/\\w\\S*/g, function (txt) {\r\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n  });\r\n};\r\n"],"sourceRoot":""}
{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport sx from '../sx';\nimport { COMMON } from '../constants';\nimport theme from '../theme';\nimport { MenuContext } from './SelectMenuContext';\nimport SelectMenuDivider from './SelectMenuDivider';\nimport SelectMenuFilter from './SelectMenuFilter';\nimport SelectMenuFooter from './SelectMenuFooter';\nimport SelectMenuItem from './SelectMenuItem';\nimport SelectMenuList from './SelectMenuList';\nimport SelectMenuModal from './SelectMenuModal';\nimport SelectMenuTabs from './SelectMenuTabs';\nimport SelectMenuHeader from './SelectMenuHeader';\nimport SelectMenuTab from './SelectMenuTab';\nimport SelectMenuTabPanel from './SelectMenuTabPanel';\nimport useKeyboardNav from './hooks/useKeyboardNav';\nvar wrapperStyles = \"\\n  &[open] > summary::before {\\n    position: fixed;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    z-index: 80;\\n    display: block;\\n    cursor: default;\\n    content: ' ';\\n    background: transparent;\\n  }\\n  // Remove marker added by the display: list-item browser default\\n  > summary {\\n    list-style: none;\\n  }\\n  // Remove marker added by details polyfill\\n  > summary::before {\\n    display: none;\\n  }\\n  // Remove marker added by Chrome\\n  > summary::-webkit-details-marker {\\n    display: none;\\n  }\\n\";\nvar StyledSelectMenu = styled.details.withConfig({\n  displayName: \"SelectMenu__StyledSelectMenu\",\n  componentId: \"sc-12xd8o8-0\"\n})([\"\", \" \", \" \", \";\"], wrapperStyles, COMMON, sx); // 'as' is spread out because we don't want users to be able to change the tag.\n\nvar SelectMenu = function SelectMenu(_ref) {\n  var children = _ref.children,\n      initialTab = _ref.initialTab,\n      as = _ref.as,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"initialTab\", \"as\"]);\n\n  var ref = useRef(null);\n\n  var _useState = useState(initialTab),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedTab = _useState2[0],\n      setSelectedTab = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      open = _useState4[0],\n      setOpen = _useState4[1];\n\n  var menuProviderValues = {\n    selectedTab: selectedTab,\n    setSelectedTab: setSelectedTab,\n    setOpen: setOpen,\n    open: open,\n    initialTab: initialTab\n  };\n\n  function toggle(event) {\n    setOpen(event.target.open);\n  }\n\n  useKeyboardNav(ref, open, setOpen);\n  return /*#__PURE__*/React.createElement(MenuContext.Provider, {\n    value: menuProviderValues\n  }, /*#__PURE__*/React.createElement(StyledSelectMenu, _extends({\n    ref: ref\n  }, rest, {\n    open: open,\n    onToggle: toggle\n  }), children));\n};\n\nSelectMenu.displayName = \"SelectMenu\";\nSelectMenu.MenuContext = MenuContext;\nSelectMenu.List = SelectMenuList;\nSelectMenu.Divider = SelectMenuDivider;\nSelectMenu.Filter = SelectMenuFilter;\nSelectMenu.Footer = SelectMenuFooter;\nSelectMenu.Item = SelectMenuItem;\nSelectMenu.List = SelectMenuList;\nSelectMenu.Modal = SelectMenuModal;\nSelectMenu.Tabs = SelectMenuTabs;\nSelectMenu.Tab = SelectMenuTab;\nSelectMenu.TabPanel = SelectMenuTabPanel;\nSelectMenu.Header = SelectMenuHeader;\nSelectMenu.defaultProps = {\n  theme: theme\n};\nSelectMenu.propTypes = _objectSpread({\n  initialTab: PropTypes.string\n}, COMMON.propTypes, {}, sx.propTypes);\nexport default SelectMenu;","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/node_modules/@primer/components/lib-esm/SelectMenu/SelectMenu.js"],"names":["_objectSpread","_extends","_slicedToArray","_objectWithoutProperties","React","useRef","useState","styled","PropTypes","sx","COMMON","theme","MenuContext","SelectMenuDivider","SelectMenuFilter","SelectMenuFooter","SelectMenuItem","SelectMenuList","SelectMenuModal","SelectMenuTabs","SelectMenuHeader","SelectMenuTab","SelectMenuTabPanel","useKeyboardNav","wrapperStyles","StyledSelectMenu","details","withConfig","displayName","componentId","SelectMenu","_ref","children","initialTab","as","rest","ref","_useState","_useState2","selectedTab","setSelectedTab","_useState3","_useState4","open","setOpen","menuProviderValues","toggle","event","target","createElement","Provider","value","onToggle","List","Divider","Filter","Footer","Item","Modal","Tabs","Tab","TabPanel","Header","defaultProps","propTypes","string"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport sx from '../sx';\nimport { COMMON } from '../constants';\nimport theme from '../theme';\nimport { MenuContext } from './SelectMenuContext';\nimport SelectMenuDivider from './SelectMenuDivider';\nimport SelectMenuFilter from './SelectMenuFilter';\nimport SelectMenuFooter from './SelectMenuFooter';\nimport SelectMenuItem from './SelectMenuItem';\nimport SelectMenuList from './SelectMenuList';\nimport SelectMenuModal from './SelectMenuModal';\nimport SelectMenuTabs from './SelectMenuTabs';\nimport SelectMenuHeader from './SelectMenuHeader';\nimport SelectMenuTab from './SelectMenuTab';\nimport SelectMenuTabPanel from './SelectMenuTabPanel';\nimport useKeyboardNav from './hooks/useKeyboardNav';\nvar wrapperStyles = \"\\n  &[open] > summary::before {\\n    position: fixed;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    z-index: 80;\\n    display: block;\\n    cursor: default;\\n    content: ' ';\\n    background: transparent;\\n  }\\n  // Remove marker added by the display: list-item browser default\\n  > summary {\\n    list-style: none;\\n  }\\n  // Remove marker added by details polyfill\\n  > summary::before {\\n    display: none;\\n  }\\n  // Remove marker added by Chrome\\n  > summary::-webkit-details-marker {\\n    display: none;\\n  }\\n\";\nvar StyledSelectMenu = styled.details.withConfig({\n  displayName: \"SelectMenu__StyledSelectMenu\",\n  componentId: \"sc-12xd8o8-0\"\n})([\"\", \" \", \" \", \";\"], wrapperStyles, COMMON, sx); // 'as' is spread out because we don't want users to be able to change the tag.\n\nvar SelectMenu = function SelectMenu(_ref) {\n  var children = _ref.children,\n      initialTab = _ref.initialTab,\n      as = _ref.as,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"initialTab\", \"as\"]);\n\n  var ref = useRef(null);\n\n  var _useState = useState(initialTab),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedTab = _useState2[0],\n      setSelectedTab = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      open = _useState4[0],\n      setOpen = _useState4[1];\n\n  var menuProviderValues = {\n    selectedTab: selectedTab,\n    setSelectedTab: setSelectedTab,\n    setOpen: setOpen,\n    open: open,\n    initialTab: initialTab\n  };\n\n  function toggle(event) {\n    setOpen(event.target.open);\n  }\n\n  useKeyboardNav(ref, open, setOpen);\n  return /*#__PURE__*/React.createElement(MenuContext.Provider, {\n    value: menuProviderValues\n  }, /*#__PURE__*/React.createElement(StyledSelectMenu, _extends({\n    ref: ref\n  }, rest, {\n    open: open,\n    onToggle: toggle\n  }), children));\n};\n\nSelectMenu.displayName = \"SelectMenu\";\nSelectMenu.MenuContext = MenuContext;\nSelectMenu.List = SelectMenuList;\nSelectMenu.Divider = SelectMenuDivider;\nSelectMenu.Filter = SelectMenuFilter;\nSelectMenu.Footer = SelectMenuFooter;\nSelectMenu.Item = SelectMenuItem;\nSelectMenu.List = SelectMenuList;\nSelectMenu.Modal = SelectMenuModal;\nSelectMenu.Tabs = SelectMenuTabs;\nSelectMenu.Tab = SelectMenuTab;\nSelectMenu.TabPanel = SelectMenuTabPanel;\nSelectMenu.Header = SelectMenuHeader;\nSelectMenu.defaultProps = {\n  theme: theme\n};\nSelectMenu.propTypes = _objectSpread({\n  initialTab: PropTypes.string\n}, COMMON.propTypes, {}, sx.propTypes);\nexport default SelectMenu;"]},"metadata":{},"sourceType":"module"}
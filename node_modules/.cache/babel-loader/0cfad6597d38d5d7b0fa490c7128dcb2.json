{"ast":null,"code":"export function buildPaginationModel(pageCount, currentPage, showPages, marginPageCount, surroundingPageCount) {\n  var pages = [];\n\n  if (showPages) {\n    var pageNums = [];\n\n    var addPage = function addPage(n) {\n      if (n >= 1 && n <= pageCount) {\n        pageNums.push(n);\n      }\n    }; // Start by defining the window of pages to show around the current page.\n    // If the window goes off either edge, shift it until it fits.\n\n\n    var extentLeft = currentPage - surroundingPageCount;\n    var extentRight = currentPage + surroundingPageCount;\n\n    if (extentLeft < 1 && extentRight > pageCount) {\n      // Our window is larger than the entire range,\n      // so simply display every page.\n      extentLeft = 1;\n      extentRight = pageCount;\n    } else if (extentLeft < 1) {\n      while (extentLeft < 1) {\n        extentLeft++;\n        extentRight++;\n      }\n    } else if (extentRight > pageCount) {\n      while (extentRight > pageCount) {\n        extentLeft--;\n        extentRight--;\n      }\n    } // Next, include the pages in the margins.\n    // If a margin page is already covered in the window,\n    // extend the window to the other direction.\n\n\n    for (var i = 1; i <= marginPageCount; i++) {\n      var leftPage = i;\n      var rightPage = pageCount - (i - 1);\n\n      if (leftPage >= extentLeft) {\n        extentRight++;\n      } else {\n        addPage(leftPage);\n      }\n\n      if (rightPage <= extentRight) {\n        extentLeft--;\n      } else {\n        addPage(rightPage);\n      }\n    }\n\n    for (var _i = extentLeft; _i <= extentRight; _i++) {\n      addPage(_i);\n    }\n\n    var sorted = pageNums.slice().sort(function (a, b) {\n      return a - b;\n    }).filter(function (item, idx, ary) {\n      return !idx || item !== ary[idx - 1];\n    });\n\n    for (var idx = 0; idx < sorted.length; idx++) {\n      var num = sorted[idx];\n      var selected = num === currentPage;\n\n      if (idx === 0) {\n        if (num !== 1) {\n          // If the first page isn't page one,\n          // we need to add a break\n          pages.push({\n            type: 'BREAK',\n            num: 1\n          });\n        }\n\n        pages.push({\n          type: 'NUM',\n          num: num,\n          selected: selected\n        });\n      } else {\n        var last = sorted[idx - 1];\n        var delta = num - last;\n\n        if (delta === 1) {\n          pages.push({\n            type: 'NUM',\n            num: num,\n            selected: selected\n          });\n        } else {\n          // We skipped some, so add a break\n          pages.push({\n            type: 'BREAK',\n            num: num - 1\n          });\n          pages.push({\n            type: 'NUM',\n            num: num,\n            selected: selected\n          });\n        }\n      }\n    }\n\n    var lastPage = pages[pages.length - 1];\n\n    if (lastPage.type === 'NUM' && lastPage.num !== pageCount) {\n      // The last page we rendered wasn't the actual last page,\n      // so we need an additional break\n      pages.push({\n        type: 'BREAK',\n        num: pageCount\n      });\n    }\n  }\n\n  var prev = {\n    type: 'PREV',\n    num: currentPage - 1,\n    disabled: currentPage === 1\n  };\n  var next = {\n    type: 'NEXT',\n    num: currentPage + 1,\n    disabled: currentPage === pageCount\n  };\n  return [prev].concat(pages, [next]);\n}\nexport function buildComponentData(page, hrefBuilder, onClick) {\n  var props = {};\n  var content = '';\n  var key = '';\n\n  switch (page.type) {\n    case 'PREV':\n      {\n        key = 'page-prev';\n        content = 'Previous';\n\n        if (page.disabled) {\n          Object.assign(props, {\n            as: 'span',\n            'aria-disabled': 'true',\n            disabled: true\n          });\n        } else {\n          Object.assign(props, {\n            rel: 'prev',\n            href: hrefBuilder(page.num),\n            'aria-label': 'Previous Page',\n            onClick: onClick\n          });\n        }\n\n        break;\n      }\n\n    case 'NEXT':\n      {\n        key = 'page-next';\n        content = 'Next';\n\n        if (page.disabled) {\n          Object.assign(props, {\n            as: 'span',\n            'aria-disabled': 'true',\n            disabled: true\n          });\n        } else {\n          Object.assign(props, {\n            rel: 'next',\n            href: hrefBuilder(page.num),\n            'aria-label': 'Next Page',\n            onClick: onClick\n          });\n        }\n\n        break;\n      }\n\n    case 'NUM':\n      {\n        key = \"page-\".concat(page.num);\n        content = page.num;\n\n        if (page.selected) {\n          Object.assign(props, {\n            as: 'em',\n            'aria-current': 'page',\n            selected: true\n          });\n        } else {\n          Object.assign(props, {\n            href: hrefBuilder(page.num),\n            'aria-label': \"Page \".concat(page.num),\n            onClick: onClick\n          });\n        }\n\n        break;\n      }\n\n    case 'BREAK':\n      {\n        key = \"page-\".concat(page.num, \"-break\");\n        content = 'â€¦';\n        Object.assign(props, {\n          as: 'span',\n          disabled: true\n        });\n      }\n  }\n\n  return {\n    props: props,\n    key: key,\n    content: content\n  };\n}","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/node_modules/@primer/components/lib-esm/Pagination/model.js"],"names":["buildPaginationModel","pageCount","currentPage","showPages","marginPageCount","surroundingPageCount","pages","pageNums","addPage","n","push","extentLeft","extentRight","i","leftPage","rightPage","_i","sorted","slice","sort","a","b","filter","item","idx","ary","length","num","selected","type","last","delta","lastPage","prev","disabled","next","concat","buildComponentData","page","hrefBuilder","onClick","props","content","key","Object","assign","as","rel","href"],"mappings":"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","sourcesContent":["export function buildPaginationModel(pageCount, currentPage, showPages, marginPageCount, surroundingPageCount) {\n  var pages = [];\n\n  if (showPages) {\n    var pageNums = [];\n\n    var addPage = function addPage(n) {\n      if (n >= 1 && n <= pageCount) {\n        pageNums.push(n);\n      }\n    }; // Start by defining the window of pages to show around the current page.\n    // If the window goes off either edge, shift it until it fits.\n\n\n    var extentLeft = currentPage - surroundingPageCount;\n    var extentRight = currentPage + surroundingPageCount;\n\n    if (extentLeft < 1 && extentRight > pageCount) {\n      // Our window is larger than the entire range,\n      // so simply display every page.\n      extentLeft = 1;\n      extentRight = pageCount;\n    } else if (extentLeft < 1) {\n      while (extentLeft < 1) {\n        extentLeft++;\n        extentRight++;\n      }\n    } else if (extentRight > pageCount) {\n      while (extentRight > pageCount) {\n        extentLeft--;\n        extentRight--;\n      }\n    } // Next, include the pages in the margins.\n    // If a margin page is already covered in the window,\n    // extend the window to the other direction.\n\n\n    for (var i = 1; i <= marginPageCount; i++) {\n      var leftPage = i;\n      var rightPage = pageCount - (i - 1);\n\n      if (leftPage >= extentLeft) {\n        extentRight++;\n      } else {\n        addPage(leftPage);\n      }\n\n      if (rightPage <= extentRight) {\n        extentLeft--;\n      } else {\n        addPage(rightPage);\n      }\n    }\n\n    for (var _i = extentLeft; _i <= extentRight; _i++) {\n      addPage(_i);\n    }\n\n    var sorted = pageNums.slice().sort(function (a, b) {\n      return a - b;\n    }).filter(function (item, idx, ary) {\n      return !idx || item !== ary[idx - 1];\n    });\n\n    for (var idx = 0; idx < sorted.length; idx++) {\n      var num = sorted[idx];\n      var selected = num === currentPage;\n\n      if (idx === 0) {\n        if (num !== 1) {\n          // If the first page isn't page one,\n          // we need to add a break\n          pages.push({\n            type: 'BREAK',\n            num: 1\n          });\n        }\n\n        pages.push({\n          type: 'NUM',\n          num: num,\n          selected: selected\n        });\n      } else {\n        var last = sorted[idx - 1];\n        var delta = num - last;\n\n        if (delta === 1) {\n          pages.push({\n            type: 'NUM',\n            num: num,\n            selected: selected\n          });\n        } else {\n          // We skipped some, so add a break\n          pages.push({\n            type: 'BREAK',\n            num: num - 1\n          });\n          pages.push({\n            type: 'NUM',\n            num: num,\n            selected: selected\n          });\n        }\n      }\n    }\n\n    var lastPage = pages[pages.length - 1];\n\n    if (lastPage.type === 'NUM' && lastPage.num !== pageCount) {\n      // The last page we rendered wasn't the actual last page,\n      // so we need an additional break\n      pages.push({\n        type: 'BREAK',\n        num: pageCount\n      });\n    }\n  }\n\n  var prev = {\n    type: 'PREV',\n    num: currentPage - 1,\n    disabled: currentPage === 1\n  };\n  var next = {\n    type: 'NEXT',\n    num: currentPage + 1,\n    disabled: currentPage === pageCount\n  };\n  return [prev].concat(pages, [next]);\n}\nexport function buildComponentData(page, hrefBuilder, onClick) {\n  var props = {};\n  var content = '';\n  var key = '';\n\n  switch (page.type) {\n    case 'PREV':\n      {\n        key = 'page-prev';\n        content = 'Previous';\n\n        if (page.disabled) {\n          Object.assign(props, {\n            as: 'span',\n            'aria-disabled': 'true',\n            disabled: true\n          });\n        } else {\n          Object.assign(props, {\n            rel: 'prev',\n            href: hrefBuilder(page.num),\n            'aria-label': 'Previous Page',\n            onClick: onClick\n          });\n        }\n\n        break;\n      }\n\n    case 'NEXT':\n      {\n        key = 'page-next';\n        content = 'Next';\n\n        if (page.disabled) {\n          Object.assign(props, {\n            as: 'span',\n            'aria-disabled': 'true',\n            disabled: true\n          });\n        } else {\n          Object.assign(props, {\n            rel: 'next',\n            href: hrefBuilder(page.num),\n            'aria-label': 'Next Page',\n            onClick: onClick\n          });\n        }\n\n        break;\n      }\n\n    case 'NUM':\n      {\n        key = \"page-\".concat(page.num);\n        content = page.num;\n\n        if (page.selected) {\n          Object.assign(props, {\n            as: 'em',\n            'aria-current': 'page',\n            selected: true\n          });\n        } else {\n          Object.assign(props, {\n            href: hrefBuilder(page.num),\n            'aria-label': \"Page \".concat(page.num),\n            onClick: onClick\n          });\n        }\n\n        break;\n      }\n\n    case 'BREAK':\n      {\n        key = \"page-\".concat(page.num, \"-break\");\n        content = 'â€¦';\n        Object.assign(props, {\n          as: 'span',\n          disabled: true\n        });\n      }\n  }\n\n  return {\n    props: props,\n    key: key,\n    content: content\n  };\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\src\\\\components\\\\autocomplete.js\";\nimport { STATE_CODES_ARRAY, STATE_CODES_REVERSE } from '../constants';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Bloodhound from 'corejs-typeahead';\nimport React from 'react';\nimport { useState, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nconst engine = new Bloodhound({\n  initialize: true,\n  local: STATE_CODES_ARRAY,\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name')\n});\nconst districtEngine = new Bloodhound({\n  initialize: true,\n  limit: 5,\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('district'),\n  indexRemote: true,\n  remote: {\n    url: 'https://api.covid19india.org/state_district_wise.json',\n    transform: function (response) {\n      const districts = [];\n      Object.keys(response).map(stateName => {\n        const districtData = response[stateName].districtData;\n        Object.keys(districtData).map(districtName => {\n          return districts.push({\n            district: districtName,\n            state: stateName\n          });\n        });\n        return null;\n      });\n      return districts;\n    }\n  }\n});\nconst essentialsEngine = new Bloodhound({\n  initialize: true,\n  limit: 5,\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('category', 'city', 'contact', 'descriptionandorserviceprovided', 'nameoftheorganisation', 'state'),\n  indexRemote: true,\n  remote: {\n    url: 'https://api.covid19india.org/resources/resources.json',\n    transform: function (response) {\n      return response.resources;\n    }\n  }\n});\nconst useStyles = makeStyles(theme => ({\n  overrides: {\n    MuiInputBase: {\n      root: {\n        color: '#ffffff',\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n          width: '100%'\n        }\n      }\n    }\n  },\n  inputRoot: {\n    color: '#ffffff',\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '100%'\n    }\n  },\n  inputInput: {},\n  MuiAutocomplete: {\n    input: {\n      color: '#ffffff'\n    }\n  },\n  underline: {\n    '&&&:before': {\n      borderBottom: 'none'\n    },\n    '&&:after': {\n      borderBottom: 'none'\n    }\n  }\n}));\nexport default function ComboBox() {\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslation();\n  const [setValue] = useState(null);\n  const [inputValue, setInputValue] = React.useState('');\n  const [options, setOptions] = React.useState([]);\n  const handleSearch = useCallback(searchInput => {\n    console.log('Testing search => ', searchInput);\n    const results = [];\n\n    const sync = datums => {\n      datums.map((result, index) => {\n        const stateObj = {\n          name: result.name,\n          type: 'state',\n          route: result.code\n        };\n        results.push(stateObj);\n        return null;\n      });\n    };\n\n    const districtSync = datums => {\n      datums.slice(0, 3).map((result, index) => {\n        const districtObj = {\n          name: result.district,\n          type: 'district',\n          route: STATE_CODES_REVERSE[result.state]\n        };\n        results.push(districtObj);\n        return null;\n      });\n    };\n\n    const essentialsSync = datums => {\n      datums.slice(0, 5).map((result, index) => {\n        const essentialsObj = {\n          name: result.nameoftheorganisation,\n          type: 'essentials',\n          category: result.category,\n          website: result.contact,\n          description: result.descriptionandorserviceprovided,\n          city: result.city,\n          state: result.state,\n          contact: result.phonenumber\n        };\n        results.push(essentialsObj);\n        console.log('Results => ', results);\n        return null;\n      });\n      setOptions([...results]);\n    };\n\n    engine.search(searchInput, sync);\n    districtEngine.search(searchInput, districtSync);\n    essentialsEngine.search(searchInput, essentialsSync);\n  }, []);\n  React.useEffect(() => {\n    if (inputValue === '') {\n      const suggestions = [{\n        name: t('Testing Pune')\n      }, {\n        name: t('Delhi Shelter')\n      }, {\n        name: t('Community Kitchen in Kerala')\n      }, {\n        name: t('Groceries Chennai')\n      }, {\n        name: t('Senior citizen support bangalore')\n      }, {\n        name: t('Delhi Shelter')\n      }, {\n        name: t('Community Kitchen in Kerala')\n      }, {\n        name: t('Delhi Shelter')\n      }];\n      setOptions(suggestions);\n      return undefined;\n    }\n\n    handleSearch(inputValue); // setOptions(suggestions2);\n\n    return undefined;\n  }, [inputValue, handleSearch, t]);\n  return /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"combo-box-demo\",\n    options: options,\n    getOptionLabel: option => option.name,\n    onChange: (event, newValue) => {\n      setOptions(newValue ? [newValue, ...options] : options);\n      setValue(newValue);\n    },\n    onInputChange: (event, newInputValue) => {\n      setInputValue(newInputValue);\n    },\n    style: {\n      width: 300\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({\n      classes: {\n        root: classes.inputRoot\n      },\n      InputProps: {\n        disableUnderline: true\n      }\n    }, params, {\n      placeholder: \"Search your city, resources, etc\",\n      variant: \"standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/src/components/autocomplete.js"],"names":["STATE_CODES_ARRAY","STATE_CODES_REVERSE","makeStyles","TextField","Autocomplete","Bloodhound","React","useState","useCallback","useTranslation","engine","initialize","local","queryTokenizer","tokenizers","whitespace","datumTokenizer","obj","districtEngine","limit","indexRemote","remote","url","transform","response","districts","Object","keys","map","stateName","districtData","districtName","push","district","state","essentialsEngine","resources","useStyles","theme","overrides","MuiInputBase","root","color","padding","spacing","paddingLeft","transition","transitions","create","width","breakpoints","up","inputRoot","inputInput","MuiAutocomplete","input","underline","borderBottom","ComboBox","classes","t","setValue","inputValue","setInputValue","options","setOptions","handleSearch","searchInput","console","log","results","sync","datums","result","index","stateObj","name","type","route","code","districtSync","slice","districtObj","essentialsSync","essentialsObj","nameoftheorganisation","category","website","contact","description","descriptionandorserviceprovided","city","phonenumber","search","useEffect","suggestions","undefined","option","event","newValue","newInputValue","params","disableUnderline"],"mappings":";AAAA,SAAQA,iBAAR,EAA2BC,mBAA3B,QAAqD,cAArD;AAEA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,OAApC;AACA,SAAQC,cAAR,QAA6B,eAA7B;AAEA,MAAMC,MAAM,GAAG,IAAIL,UAAJ,CAAe;AAC5BM,EAAAA,UAAU,EAAE,IADgB;AAE5BC,EAAAA,KAAK,EAAEZ,iBAFqB;AAG5Ba,EAAAA,cAAc,EAAER,UAAU,CAACS,UAAX,CAAsBC,UAHV;AAI5BC,EAAAA,cAAc,EAAEX,UAAU,CAACS,UAAX,CAAsBG,GAAtB,CAA0BF,UAA1B,CAAqC,MAArC;AAJY,CAAf,CAAf;AAOA,MAAMG,cAAc,GAAG,IAAIb,UAAJ,CAAe;AACpCM,EAAAA,UAAU,EAAE,IADwB;AAEpCQ,EAAAA,KAAK,EAAE,CAF6B;AAGpCN,EAAAA,cAAc,EAAER,UAAU,CAACS,UAAX,CAAsBC,UAHF;AAIpCC,EAAAA,cAAc,EAAEX,UAAU,CAACS,UAAX,CAAsBG,GAAtB,CAA0BF,UAA1B,CAAqC,UAArC,CAJoB;AAKpCK,EAAAA,WAAW,EAAE,IALuB;AAMpCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,GAAG,EAAE,uDADC;AAENC,IAAAA,SAAS,EAAE,UAAUC,QAAV,EAAoB;AAC7B,YAAMC,SAAS,GAAG,EAAlB;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAYH,QAAZ,EAAsBI,GAAtB,CAA2BC,SAAD,IAAe;AACvC,cAAMC,YAAY,GAAGN,QAAQ,CAACK,SAAD,CAAR,CAAoBC,YAAzC;AACAJ,QAAAA,MAAM,CAACC,IAAP,CAAYG,YAAZ,EAA0BF,GAA1B,CAA+BG,YAAD,IAAkB;AAC9C,iBAAON,SAAS,CAACO,IAAV,CAAe;AAACC,YAAAA,QAAQ,EAAEF,YAAX;AAAyBG,YAAAA,KAAK,EAAEL;AAAhC,WAAf,CAAP;AACD,SAFD;AAGA,eAAO,IAAP;AACD,OAND;AAOA,aAAOJ,SAAP;AACD;AAZK;AAN4B,CAAf,CAAvB;AAsBA,MAAMU,gBAAgB,GAAG,IAAI9B,UAAJ,CAAe;AACtCM,EAAAA,UAAU,EAAE,IAD0B;AAEtCQ,EAAAA,KAAK,EAAE,CAF+B;AAGtCN,EAAAA,cAAc,EAAER,UAAU,CAACS,UAAX,CAAsBC,UAHA;AAItCC,EAAAA,cAAc,EAAEX,UAAU,CAACS,UAAX,CAAsBG,GAAtB,CAA0BF,UAA1B,CACd,UADc,EAEd,MAFc,EAGd,SAHc,EAId,iCAJc,EAKd,uBALc,EAMd,OANc,CAJsB;AAYtCK,EAAAA,WAAW,EAAE,IAZyB;AAatCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,GAAG,EAAE,uDADC;AAENC,IAAAA,SAAS,EAAE,UAAUC,QAAV,EAAoB;AAC7B,aAAOA,QAAQ,CAACY,SAAhB;AACD;AAJK;AAb8B,CAAf,CAAzB;AAqBA,MAAMC,SAAS,GAAGnC,UAAU,CAAEoC,KAAD,KAAY;AACvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,YAAY,EAAE;AACZC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,SADH;AAEJC,QAAAA,OAAO,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CAFL;AAGJ;AACAC,QAAAA,WAAW,EAAG,cAAaP,KAAK,CAACM,OAAN,CAAc,CAAd,CAAiB,KAJxC;AAKJE,QAAAA,UAAU,EAAER,KAAK,CAACS,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,CALR;AAMJC,QAAAA,KAAK,EAAE,MANH;AAOJ,SAACX,KAAK,CAACY,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BF,UAAAA,KAAK,EAAE;AADqB;AAP1B;AADM;AADL,GAD4B;AAgBvCG,EAAAA,SAAS,EAAE;AACTV,IAAAA,KAAK,EAAE,SADE;AAETC,IAAAA,OAAO,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CAFA;AAGT;AACAC,IAAAA,WAAW,EAAG,cAAaP,KAAK,CAACM,OAAN,CAAc,CAAd,CAAiB,KAJnC;AAKTE,IAAAA,UAAU,EAAER,KAAK,CAACS,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,CALH;AAMTC,IAAAA,KAAK,EAAE,MANE;AAOT,KAACX,KAAK,CAACY,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BF,MAAAA,KAAK,EAAE;AADqB;AAPrB,GAhB4B;AA2BvCI,EAAAA,UAAU,EAAE,EA3B2B;AA4BvCC,EAAAA,eAAe,EAAE;AACfC,IAAAA,KAAK,EAAE;AACLb,MAAAA,KAAK,EAAE;AADF;AADQ,GA5BsB;AAiCvCc,EAAAA,SAAS,EAAE;AACT,kBAAc;AACZC,MAAAA,YAAY,EAAE;AADF,KADL;AAIT,gBAAY;AACVA,MAAAA,YAAY,EAAE;AADJ;AAJH;AAjC4B,CAAZ,CAAD,CAA5B;AA0CA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAMC,OAAO,GAAGtB,SAAS,EAAzB;AACA,QAAM;AAACuB,IAAAA;AAAD,MAAMnD,cAAc,EAA1B;AACA,QAAM,CAACoD,QAAD,IAAatD,QAAQ,CAAC,IAAD,CAA3B;AACA,QAAM,CAACuD,UAAD,EAAaC,aAAb,IAA8BzD,KAAK,CAACC,QAAN,CAAe,EAAf,CAApC;AACA,QAAM,CAACyD,OAAD,EAAUC,UAAV,IAAwB3D,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B;AAEA,QAAM2D,YAAY,GAAG1D,WAAW,CAAE2D,WAAD,IAAiB;AAChDC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,WAAlC;AACA,UAAMG,OAAO,GAAG,EAAhB;;AAEA,UAAMC,IAAI,GAAIC,MAAD,IAAY;AACvBA,MAAAA,MAAM,CAAC5C,GAAP,CAAW,CAAC6C,MAAD,EAASC,KAAT,KAAmB;AAC5B,cAAMC,QAAQ,GAAG;AACfC,UAAAA,IAAI,EAAEH,MAAM,CAACG,IADE;AAEfC,UAAAA,IAAI,EAAE,OAFS;AAGfC,UAAAA,KAAK,EAAEL,MAAM,CAACM;AAHC,SAAjB;AAKAT,QAAAA,OAAO,CAACtC,IAAR,CAAa2C,QAAb;AACA,eAAO,IAAP;AACD,OARD;AASD,KAVD;;AAYA,UAAMK,YAAY,GAAIR,MAAD,IAAY;AAC/BA,MAAAA,MAAM,CAACS,KAAP,CAAa,CAAb,EAAgB,CAAhB,EAAmBrD,GAAnB,CAAuB,CAAC6C,MAAD,EAASC,KAAT,KAAmB;AACxC,cAAMQ,WAAW,GAAG;AAClBN,UAAAA,IAAI,EAAEH,MAAM,CAACxC,QADK;AAElB4C,UAAAA,IAAI,EAAE,UAFY;AAGlBC,UAAAA,KAAK,EAAE7E,mBAAmB,CAACwE,MAAM,CAACvC,KAAR;AAHR,SAApB;AAKAoC,QAAAA,OAAO,CAACtC,IAAR,CAAakD,WAAb;AAEA,eAAO,IAAP;AACD,OATD;AAUD,KAXD;;AAaA,UAAMC,cAAc,GAAIX,MAAD,IAAY;AACjCA,MAAAA,MAAM,CAACS,KAAP,CAAa,CAAb,EAAgB,CAAhB,EAAmBrD,GAAnB,CAAuB,CAAC6C,MAAD,EAASC,KAAT,KAAmB;AACxC,cAAMU,aAAa,GAAG;AACpBR,UAAAA,IAAI,EAAEH,MAAM,CAACY,qBADO;AAEpBR,UAAAA,IAAI,EAAE,YAFc;AAGpBS,UAAAA,QAAQ,EAAEb,MAAM,CAACa,QAHG;AAIpBC,UAAAA,OAAO,EAAEd,MAAM,CAACe,OAJI;AAKpBC,UAAAA,WAAW,EAAEhB,MAAM,CAACiB,+BALA;AAMpBC,UAAAA,IAAI,EAAElB,MAAM,CAACkB,IANO;AAOpBzD,UAAAA,KAAK,EAAEuC,MAAM,CAACvC,KAPM;AAQpBsD,UAAAA,OAAO,EAAEf,MAAM,CAACmB;AARI,SAAtB;AAUAtB,QAAAA,OAAO,CAACtC,IAAR,CAAaoD,aAAb;AACAhB,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,OAA3B;AACA,eAAO,IAAP;AACD,OAdD;AAeAL,MAAAA,UAAU,CAAC,CAAC,GAAGK,OAAJ,CAAD,CAAV;AACD,KAjBD;;AAmBA5D,IAAAA,MAAM,CAACmF,MAAP,CAAc1B,WAAd,EAA2BI,IAA3B;AACArD,IAAAA,cAAc,CAAC2E,MAAf,CAAsB1B,WAAtB,EAAmCa,YAAnC;AACA7C,IAAAA,gBAAgB,CAAC0D,MAAjB,CAAwB1B,WAAxB,EAAqCgB,cAArC;AACD,GAnD+B,EAmD7B,EAnD6B,CAAhC;AAqDA7E,EAAAA,KAAK,CAACwF,SAAN,CAAgB,MAAM;AACpB,QAAIhC,UAAU,KAAK,EAAnB,EAAuB;AACrB,YAAMiC,WAAW,GAAG,CAClB;AAACnB,QAAAA,IAAI,EAAEhB,CAAC,CAAC,cAAD;AAAR,OADkB,EAElB;AAACgB,QAAAA,IAAI,EAAEhB,CAAC,CAAC,eAAD;AAAR,OAFkB,EAGlB;AAACgB,QAAAA,IAAI,EAAEhB,CAAC,CAAC,6BAAD;AAAR,OAHkB,EAIlB;AAACgB,QAAAA,IAAI,EAAEhB,CAAC,CAAC,mBAAD;AAAR,OAJkB,EAKlB;AAACgB,QAAAA,IAAI,EAAEhB,CAAC,CAAC,kCAAD;AAAR,OALkB,EAMlB;AAACgB,QAAAA,IAAI,EAAEhB,CAAC,CAAC,eAAD;AAAR,OANkB,EAOlB;AAACgB,QAAAA,IAAI,EAAEhB,CAAC,CAAC,6BAAD;AAAR,OAPkB,EAQlB;AAACgB,QAAAA,IAAI,EAAEhB,CAAC,CAAC,eAAD;AAAR,OARkB,CAApB;AAUAK,MAAAA,UAAU,CAAC8B,WAAD,CAAV;AACA,aAAOC,SAAP;AACD;;AACD9B,IAAAA,YAAY,CAACJ,UAAD,CAAZ,CAfoB,CAgBpB;;AACA,WAAOkC,SAAP;AACD,GAlBD,EAkBG,CAAClC,UAAD,EAAaI,YAAb,EAA2BN,CAA3B,CAlBH;AAoBA,sBACE,oBAAC,YAAD;AACE,IAAA,EAAE,EAAC,gBADL;AAEE,IAAA,OAAO,EAAEI,OAFX;AAGE,IAAA,cAAc,EAAGiC,MAAD,IAAYA,MAAM,CAACrB,IAHrC;AAIE,IAAA,QAAQ,EAAE,CAACsB,KAAD,EAAQC,QAAR,KAAqB;AAC7BlC,MAAAA,UAAU,CAACkC,QAAQ,GAAG,CAACA,QAAD,EAAW,GAAGnC,OAAd,CAAH,GAA4BA,OAArC,CAAV;AACAH,MAAAA,QAAQ,CAACsC,QAAD,CAAR;AACD,KAPH;AAQE,IAAA,aAAa,EAAE,CAACD,KAAD,EAAQE,aAAR,KAA0B;AACvCrC,MAAAA,aAAa,CAACqC,aAAD,CAAb;AACD,KAVH;AAWE,IAAA,KAAK,EAAE;AAACnD,MAAAA,KAAK,EAAE;AAAR,KAXT;AAYE,IAAA,WAAW,EAAGoD,MAAD,iBACX,oBAAC,SAAD;AACE,MAAA,OAAO,EAAE;AACP5D,QAAAA,IAAI,EAAEkB,OAAO,CAACP;AADP,OADX;AAIE,MAAA,UAAU,EAAE;AAACkD,QAAAA,gBAAgB,EAAE;AAAnB;AAJd,OAKMD,MALN;AAME,MAAA,WAAW,EAAC,kCANd;AAOE,MAAA,OAAO,EAAC,UAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA0BD","sourcesContent":["import {STATE_CODES_ARRAY, STATE_CODES_REVERSE} from '../constants';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Bloodhound from 'corejs-typeahead';\r\nimport React from 'react';\r\nimport {useState, useCallback} from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nconst engine = new Bloodhound({\r\n  initialize: true,\r\n  local: STATE_CODES_ARRAY,\r\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),\r\n});\r\n\r\nconst districtEngine = new Bloodhound({\r\n  initialize: true,\r\n  limit: 5,\r\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('district'),\r\n  indexRemote: true,\r\n  remote: {\r\n    url: 'https://api.covid19india.org/state_district_wise.json',\r\n    transform: function (response) {\r\n      const districts = [];\r\n      Object.keys(response).map((stateName) => {\r\n        const districtData = response[stateName].districtData;\r\n        Object.keys(districtData).map((districtName) => {\r\n          return districts.push({district: districtName, state: stateName});\r\n        });\r\n        return null;\r\n      });\r\n      return districts;\r\n    },\r\n  },\r\n});\r\n\r\nconst essentialsEngine = new Bloodhound({\r\n  initialize: true,\r\n  limit: 5,\r\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace(\r\n    'category',\r\n    'city',\r\n    'contact',\r\n    'descriptionandorserviceprovided',\r\n    'nameoftheorganisation',\r\n    'state'\r\n  ),\r\n  indexRemote: true,\r\n  remote: {\r\n    url: 'https://api.covid19india.org/resources/resources.json',\r\n    transform: function (response) {\r\n      return response.resources;\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  overrides: {\r\n    MuiInputBase: {\r\n      root: {\r\n        color: '#ffffff',\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n          width: '100%',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: '#ffffff',\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '100%',\r\n    },\r\n  },\r\n  inputInput: {},\r\n  MuiAutocomplete: {\r\n    input: {\r\n      color: '#ffffff',\r\n    },\r\n  },\r\n  underline: {\r\n    '&&&:before': {\r\n      borderBottom: 'none',\r\n    },\r\n    '&&:after': {\r\n      borderBottom: 'none',\r\n    },\r\n  },\r\n}));\r\nexport default function ComboBox() {\r\n  const classes = useStyles();\r\n  const {t} = useTranslation();\r\n  const [setValue] = useState(null);\r\n  const [inputValue, setInputValue] = React.useState('');\r\n  const [options, setOptions] = React.useState([]);\r\n\r\n  const handleSearch = useCallback((searchInput) => {\r\n    console.log('Testing search => ', searchInput);\r\n    const results = [];\r\n\r\n    const sync = (datums) => {\r\n      datums.map((result, index) => {\r\n        const stateObj = {\r\n          name: result.name,\r\n          type: 'state',\r\n          route: result.code,\r\n        };\r\n        results.push(stateObj);\r\n        return null;\r\n      });\r\n    };\r\n\r\n    const districtSync = (datums) => {\r\n      datums.slice(0, 3).map((result, index) => {\r\n        const districtObj = {\r\n          name: result.district,\r\n          type: 'district',\r\n          route: STATE_CODES_REVERSE[result.state],\r\n        };\r\n        results.push(districtObj);\r\n\r\n        return null;\r\n      });\r\n    };\r\n\r\n    const essentialsSync = (datums) => {\r\n      datums.slice(0, 5).map((result, index) => {\r\n        const essentialsObj = {\r\n          name: result.nameoftheorganisation,\r\n          type: 'essentials',\r\n          category: result.category,\r\n          website: result.contact,\r\n          description: result.descriptionandorserviceprovided,\r\n          city: result.city,\r\n          state: result.state,\r\n          contact: result.phonenumber,\r\n        };\r\n        results.push(essentialsObj);\r\n        console.log('Results => ', results);\r\n        return null;\r\n      });\r\n      setOptions([...results]);\r\n    };\r\n\r\n    engine.search(searchInput, sync);\r\n    districtEngine.search(searchInput, districtSync);\r\n    essentialsEngine.search(searchInput, essentialsSync);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (inputValue === '') {\r\n      const suggestions = [\r\n        {name: t('Testing Pune')},\r\n        {name: t('Delhi Shelter')},\r\n        {name: t('Community Kitchen in Kerala')},\r\n        {name: t('Groceries Chennai')},\r\n        {name: t('Senior citizen support bangalore')},\r\n        {name: t('Delhi Shelter')},\r\n        {name: t('Community Kitchen in Kerala')},\r\n        {name: t('Delhi Shelter')},\r\n      ];\r\n      setOptions(suggestions);\r\n      return undefined;\r\n    }\r\n    handleSearch(inputValue);\r\n    // setOptions(suggestions2);\r\n    return undefined;\r\n  }, [inputValue, handleSearch, t]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"combo-box-demo\"\r\n      options={options}\r\n      getOptionLabel={(option) => option.name}\r\n      onChange={(event, newValue) => {\r\n        setOptions(newValue ? [newValue, ...options] : options);\r\n        setValue(newValue);\r\n      }}\r\n      onInputChange={(event, newInputValue) => {\r\n        setInputValue(newInputValue);\r\n      }}\r\n      style={{width: 300}}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          classes={{\r\n            root: classes.inputRoot,\r\n          }}\r\n          InputProps={{disableUnderline: true}}\r\n          {...params}\r\n          placeholder=\"Search your city, resources, etc\"\r\n          variant=\"standard\"\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
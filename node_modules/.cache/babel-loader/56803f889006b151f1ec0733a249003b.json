{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\src\\\\components\\\\row.js\";\nimport { STATE_ROW_STATISTICS, DISTRICT_ROW_STATISTICS } from '../constants';\nimport { formatDate, formatNumber, formatLastUpdated, capitalize, abbreviate } from '../utils/commonfunctions';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport React, { useState, useCallback, useMemo } from 'react';\nimport * as Icon from 'react-feather';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport { createBreakpoint, useLocalStorage, useEffectOnce } from 'react-use';\nconst useBreakpoint = createBreakpoint({\n  XL: 1280,\n  L: 768,\n  S: 350\n});\n\nfunction StateCell({\n  state,\n  statistic\n}) {\n  const ArrowUp = useMemo(() => /*#__PURE__*/React.createElement(Icon.ArrowUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 33\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classnames('delta', `is-${statistic}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, state[`delta${statistic}`] > 0 && ArrowUp, state[`delta${statistic}`] > 0 && state[`delta${statistic}`]), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, state[statistic] === 0 ? '-' : formatNumber(state[statistic])));\n}\n\nfunction DistrictHeaderCell({\n  handleSort,\n  statistic,\n  sortData\n}) {\n  const breakpoint = useBreakpoint();\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(\"td\", {\n    onClick: () => handleSort(statistic),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heading-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"abbr\", {\n    className: classnames({\n      [`is-${statistic}`]: breakpoint === 'S'\n    }),\n    title: statistic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, breakpoint === 'L' ? statistic.slice(0) : breakpoint === 'S' ? capitalize(abbreviate(statistic === 'deaths' ? 'deceased' : statistic)) : t(capitalize(statistic === 'deaths' ? 'deceased' : statistic))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: sortData.sortColumn === statistic ? 'initial' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, sortData.isAscending ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"arrow-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"arrow-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }))));\n}\n\nfunction PureDistrictCell({\n  district,\n  statistic\n}) {\n  return /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classnames('delta', `is-${statistic}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, district.delta[statistic] > 0 && /*#__PURE__*/React.createElement(Icon.ArrowUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 43\n    }\n  }), district.delta[statistic] > 0 && district.delta[statistic]), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, formatNumber(district[statistic])));\n}\n\nconst DistrictCell = React.memo(PureDistrictCell);\n\nconst isDistrictRowEqual = (prevProps, currProps) => {\n  var _prevProps$regionHigh, _currProps$regionHigh;\n\n  if (equal((_prevProps$regionHigh = prevProps.regionHighlighted) === null || _prevProps$regionHigh === void 0 ? void 0 : _prevProps$regionHigh.district, prevProps.district)) {\n    return false;\n  }\n\n  if (equal((_currProps$regionHigh = currProps.regionHighlighted) === null || _currProps$regionHigh === void 0 ? void 0 : _currProps$regionHigh.district, currProps.district)) {\n    return false;\n  }\n\n  return true;\n};\n\nfunction PureDistrictRow({\n  regionHighlighted,\n  district,\n  state,\n  zone,\n  onHighlightDistrict,\n  sortedDistricts,\n  districts\n}) {\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    key: district.district,\n    className: classnames('district', {\n      'is-highlighted': (regionHighlighted === null || regionHighlighted === void 0 ? void 0 : regionHighlighted.district) === district\n    }),\n    onMouseEnter: () => onHighlightDistrict(district, state),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: classnames(`is-${zone === null || zone === void 0 ? void 0 : zone.zone}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title-chevron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"title-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, t(district), /*#__PURE__*/React.createElement(\"span\", {\n    \"data-for\": \"district\",\n    \"data-tip\": [[sortedDistricts[district].notes]],\n    \"data-event\": \"touchstart mouseover\",\n    \"data-event-off\": \"mouseleave\",\n    onClick: e => e.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, sortedDistricts[district].notes && /*#__PURE__*/React.createElement(Icon.Info, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 51\n    }\n  }))))), DISTRICT_ROW_STATISTICS.map(statistic => /*#__PURE__*/React.createElement(DistrictCell, {\n    key: statistic,\n    district: districts[district],\n    statistic: statistic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  })));\n}\n\nconst DistrictRow = React.memo(PureDistrictRow, isDistrictRowEqual);\n\nconst isEqual = (prevProps, currProps) => {\n  var _prevProps$regionHigh2, _currProps$regionHigh2, _prevProps$regionHigh3, _currProps$regionHigh3;\n\n  if (!equal(prevProps.state.state, currProps.state.state)) {\n    return false;\n  }\n\n  if (!equal((_prevProps$regionHigh2 = prevProps.regionHighlighted) === null || _prevProps$regionHigh2 === void 0 ? void 0 : _prevProps$regionHigh2.state, (_currProps$regionHigh2 = currProps.regionHighlighted) === null || _currProps$regionHigh2 === void 0 ? void 0 : _currProps$regionHigh2.state)) {\n    return false;\n  }\n\n  if (!equal((_prevProps$regionHigh3 = prevProps.regionHighlighted) === null || _prevProps$regionHigh3 === void 0 ? void 0 : _prevProps$regionHigh3.district, (_currProps$regionHigh3 = currProps.regionHighlighted) === null || _currProps$regionHigh3 === void 0 ? void 0 : _currProps$regionHigh3.district)) {\n    return false;\n  }\n\n  return true;\n};\n\nfunction Row({\n  index,\n  state,\n  districts,\n  zones,\n  regionHighlighted,\n  onHighlightState,\n  onHighlightDistrict\n}) {\n  const [sortedDistricts, setSortedDistricts] = useState(districts);\n  const [showDistricts, setShowDistricts] = useState(false);\n  const [sortData, setSortData] = useLocalStorage('districtSortData', {\n    sortColumn: 'confirmed',\n    isAscending: false\n  });\n  const history = useHistory();\n  const {\n    t\n  } = useTranslation();\n  const Chevron = useMemo(() => /*#__PURE__*/React.createElement(\"span\", {\n    className: classnames('dropdown', {\n      rotateRightDown: showDistricts\n    }, {\n      rotateDownRight: !showDistricts\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Icon.ChevronDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  })), [showDistricts]);\n\n  const _onHighlightState = useCallback(state => {\n    if (!equal(state.state, regionHighlighted === null || regionHighlighted === void 0 ? void 0 : regionHighlighted.state)) {\n      onHighlightState(state);\n    }\n  }, [onHighlightState, regionHighlighted]);\n\n  const doSort = useCallback(sortData => {\n    const sorted = {};\n    Object.keys(sortedDistricts).sort((district1, district2) => {\n      if (sortData.sortColumn !== 'district') {\n        return sortData.isAscending ? parseInt(sortedDistricts[district1][sortData.sortColumn]) - parseInt(sortedDistricts[district2][sortData.sortColumn]) : parseInt(sortedDistricts[district2][sortData.sortColumn]) - parseInt(sortedDistricts[district1][sortData.sortColumn]);\n      } else {\n        return sortData.isAscending ? district1.localeCompare(district2) : district2.localeCompare(district1);\n      }\n    }).forEach(key => {\n      sorted[key] = sortedDistricts[key];\n    });\n    setSortedDistricts(sorted);\n  }, [sortedDistricts]);\n  const handleSort = useCallback(statistic => {\n    const newSortData = {\n      isAscending: !sortData.isAscending,\n      sortColumn: statistic\n    };\n    doSort(newSortData);\n    setSortData(Object.assign({}, sortData, newSortData));\n  }, [doSort, setSortData, sortData]);\n  useEffectOnce(() => {\n    if (state.statecode !== 'TT') doSort(sortData);\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: classnames('state', {\n      'is-total': state.statecode === 'TT'\n    }, {\n      'is-highlighted': (regionHighlighted === null || regionHighlighted === void 0 ? void 0 : regionHighlighted.state) === state.state\n    }, {\n      'is-odd': index % 2 === 0\n    }),\n    onMouseEnter: () => _onHighlightState(state),\n    onClick: state.statecode !== 'TT' ? () => {\n      setShowDistricts(!showDistricts);\n    } : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title-chevron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }, state.statecode !== 'TT' && Chevron, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"title-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, t(state.state), /*#__PURE__*/React.createElement(\"span\", {\n    \"data-tip\": [state.statenotes],\n    \"data-event\": \"touchstart mouseover\",\n    \"data-event-off\": \"mouseleave\",\n    onClick: e => e.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }, state.statenotes && /*#__PURE__*/React.createElement(Icon.Info, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 38\n    }\n  }))))), STATE_ROW_STATISTICS.map((statistic, index) => /*#__PURE__*/React.createElement(StateCell, {\n    key: index,\n    state: state,\n    statistic: statistic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }))), showDistricts && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"is-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    className: 'state-last-update',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: 3,\n    style: {\n      paddingBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 15\n    }\n  }, isNaN(Date.parse(formatDate(state.lastupdatedtime))) ? '' : `${t('Last updated')} ${formatLastUpdated(state.lastupdatedtime)} ${t('ago')}`), (sortedDistricts === null || sortedDistricts === void 0 ? void 0 : sortedDistricts.Unknown) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"disclaimer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Icon.AlertCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 19\n    }\n  }), t('District-wise numbers are under reconciliation'))), /*#__PURE__*/React.createElement(\"td\", {\n    align: \"center\",\n    className: \"state-page-link\",\n    colSpan: 2,\n    onClick: () => {\n      history.push(`state/${state.statecode}`);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }\n  }, t('See more details on {{state}}', {\n    state: t(state.state)\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    className: classnames('district-heading'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    onClick: () => handleSort('district'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heading-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"abbr\", {\n    title: \"District\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }\n  }, t('District')), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: sortData.sortColumn === 'district' ? 'initial' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 17\n    }\n  }, sortData.isAscending ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"arrow-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"arrow-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 21\n    }\n  })))), DISTRICT_ROW_STATISTICS.map((statistic, index) => /*#__PURE__*/React.createElement(DistrictHeaderCell, {\n    key: index,\n    handleSort: handleSort,\n    statistic: statistic,\n    sortData: sortData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 15\n    }\n  })))), showDistricts && Object.keys(sortedDistricts).map((district, index) => /*#__PURE__*/React.createElement(DistrictRow, {\n    key: district,\n    state: state,\n    district: district,\n    districts: districts,\n    zone: zones[district],\n    sortedDistricts: sortedDistricts,\n    regionHighlighted: regionHighlighted,\n    onHighlightDistrict: onHighlightDistrict,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 11\n    }\n  })), showDistricts && /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"is-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ReactTooltip, {\n    id: \"district\",\n    place: \"right\",\n    type: \"dark\",\n    effect: \"solid\",\n    multiline: true,\n    scrollHide: true,\n    globalEventOff: \"click\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport default React.memo(Row, isEqual);","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/src/components/row.js"],"names":["STATE_ROW_STATISTICS","DISTRICT_ROW_STATISTICS","formatDate","formatNumber","formatLastUpdated","capitalize","abbreviate","classnames","equal","React","useState","useCallback","useMemo","Icon","useTranslation","useHistory","ReactTooltip","createBreakpoint","useLocalStorage","useEffectOnce","useBreakpoint","XL","L","S","StateCell","state","statistic","ArrowUp","DistrictHeaderCell","handleSort","sortData","breakpoint","t","slice","display","sortColumn","isAscending","PureDistrictCell","district","delta","DistrictCell","memo","isDistrictRowEqual","prevProps","currProps","regionHighlighted","PureDistrictRow","zone","onHighlightDistrict","sortedDistricts","districts","notes","e","stopPropagation","map","DistrictRow","isEqual","Row","index","zones","onHighlightState","setSortedDistricts","showDistricts","setShowDistricts","setSortData","history","Chevron","rotateRightDown","rotateDownRight","_onHighlightState","doSort","sorted","Object","keys","sort","district1","district2","parseInt","localeCompare","forEach","key","newSortData","assign","statecode","statenotes","paddingBottom","isNaN","Date","parse","lastupdatedtime","Unknown","push"],"mappings":"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","sourcesContent":["import {STATE_ROW_STATISTICS, DISTRICT_ROW_STATISTICS} from '../constants';\r\nimport {\r\n  formatDate,\r\n  formatNumber,\r\n  formatLastUpdated,\r\n  capitalize,\r\n  abbreviate,\r\n} from '../utils/commonfunctions';\r\n\r\nimport classnames from 'classnames';\r\nimport equal from 'fast-deep-equal';\r\nimport React, {useState, useCallback, useMemo} from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {useHistory} from 'react-router-dom';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport {createBreakpoint, useLocalStorage, useEffectOnce} from 'react-use';\r\n\r\nconst useBreakpoint = createBreakpoint({XL: 1280, L: 768, S: 350});\r\n\r\nfunction StateCell({state, statistic}) {\r\n  const ArrowUp = useMemo(() => <Icon.ArrowUp />, []);\r\n\r\n  return (\r\n    <td>\r\n      <span className={classnames('delta', `is-${statistic}`)}>\r\n        {state[`delta${statistic}`] > 0 && ArrowUp}\r\n        {state[`delta${statistic}`] > 0 && state[`delta${statistic}`]}\r\n      </span>\r\n      <span className=\"total\">\r\n        {state[statistic] === 0 ? '-' : formatNumber(state[statistic])}\r\n      </span>\r\n    </td>\r\n  );\r\n}\r\n\r\nfunction DistrictHeaderCell({handleSort, statistic, sortData}) {\r\n  const breakpoint = useBreakpoint();\r\n  const {t} = useTranslation();\r\n\r\n  return (\r\n    <td onClick={() => handleSort(statistic)}>\r\n      <div className=\"heading-content\">\r\n        <abbr\r\n          className={classnames({[`is-${statistic}`]: breakpoint === 'S'})}\r\n          title={statistic}\r\n        >\r\n          {breakpoint === 'L'\r\n            ? statistic.slice(0)\r\n            : breakpoint === 'S'\r\n            ? capitalize(\r\n                abbreviate(statistic === 'deaths' ? 'deceased' : statistic)\r\n              )\r\n            : t(capitalize(statistic === 'deaths' ? 'deceased' : statistic))}\r\n        </abbr>\r\n        <div\r\n          style={{\r\n            display: sortData.sortColumn === statistic ? 'initial' : 'none',\r\n          }}\r\n        >\r\n          {sortData.isAscending ? (\r\n            <div className=\"arrow-up\" />\r\n          ) : (\r\n            <div className=\"arrow-down\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </td>\r\n  );\r\n}\r\n\r\nfunction PureDistrictCell({district, statistic}) {\r\n  return (\r\n    <td>\r\n      <span className={classnames('delta', `is-${statistic}`)}>\r\n        {district.delta[statistic] > 0 && <Icon.ArrowUp />}\r\n        {district.delta[statistic] > 0 && district.delta[statistic]}\r\n      </span>\r\n      <span className=\"total\">{formatNumber(district[statistic])}</span>\r\n    </td>\r\n  );\r\n}\r\n\r\nconst DistrictCell = React.memo(PureDistrictCell);\r\n\r\nconst isDistrictRowEqual = (prevProps, currProps) => {\r\n  if (equal(prevProps.regionHighlighted?.district, prevProps.district)) {\r\n    return false;\r\n  }\r\n  if (equal(currProps.regionHighlighted?.district, currProps.district)) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nfunction PureDistrictRow({\r\n  regionHighlighted,\r\n  district,\r\n  state,\r\n  zone,\r\n  onHighlightDistrict,\r\n  sortedDistricts,\r\n  districts,\r\n}) {\r\n  const {t} = useTranslation();\r\n\r\n  return (\r\n    <tr\r\n      key={district.district}\r\n      className={classnames('district', {\r\n        'is-highlighted': regionHighlighted?.district === district,\r\n      })}\r\n      onMouseEnter={() => onHighlightDistrict(district, state)}\r\n    >\r\n      <td className={classnames(`is-${zone?.zone}`)}>\r\n        <div className=\"title-chevron\">\r\n          <span className=\"title-icon\">\r\n            {t(district)}\r\n            <span\r\n              data-for=\"district\"\r\n              data-tip={[[sortedDistricts[district].notes]]}\r\n              data-event=\"touchstart mouseover\"\r\n              data-event-off=\"mouseleave\"\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              {sortedDistricts[district].notes && <Icon.Info />}\r\n            </span>\r\n          </span>\r\n        </div>\r\n      </td>\r\n\r\n      {DISTRICT_ROW_STATISTICS.map((statistic) => (\r\n        <DistrictCell\r\n          key={statistic}\r\n          district={districts[district]}\r\n          statistic={statistic}\r\n        />\r\n      ))}\r\n    </tr>\r\n  );\r\n}\r\n\r\nconst DistrictRow = React.memo(PureDistrictRow, isDistrictRowEqual);\r\n\r\nconst isEqual = (prevProps, currProps) => {\r\n  if (!equal(prevProps.state.state, currProps.state.state)) {\r\n    return false;\r\n  }\r\n  if (\r\n    !equal(\r\n      prevProps.regionHighlighted?.state,\r\n      currProps.regionHighlighted?.state\r\n    )\r\n  ) {\r\n    return false;\r\n  }\r\n  if (\r\n    !equal(\r\n      prevProps.regionHighlighted?.district,\r\n      currProps.regionHighlighted?.district\r\n    )\r\n  ) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nfunction Row({\r\n  index,\r\n  state,\r\n  districts,\r\n  zones,\r\n  regionHighlighted,\r\n  onHighlightState,\r\n  onHighlightDistrict,\r\n}) {\r\n  const [sortedDistricts, setSortedDistricts] = useState(districts);\r\n  const [showDistricts, setShowDistricts] = useState(false);\r\n  const [sortData, setSortData] = useLocalStorage('districtSortData', {\r\n    sortColumn: 'confirmed',\r\n    isAscending: false,\r\n  });\r\n\r\n  const history = useHistory();\r\n  const {t} = useTranslation();\r\n\r\n  const Chevron = useMemo(\r\n    () => (\r\n      <span\r\n        className={classnames(\r\n          'dropdown',\r\n          {rotateRightDown: showDistricts},\r\n          {rotateDownRight: !showDistricts}\r\n        )}\r\n      >\r\n        <Icon.ChevronDown />\r\n      </span>\r\n    ),\r\n    [showDistricts]\r\n  );\r\n\r\n  const _onHighlightState = useCallback(\r\n    (state) => {\r\n      if (!equal(state.state, regionHighlighted?.state)) {\r\n        onHighlightState(state);\r\n      }\r\n    },\r\n    [onHighlightState, regionHighlighted]\r\n  );\r\n\r\n  const doSort = useCallback(\r\n    (sortData) => {\r\n      const sorted = {};\r\n      Object.keys(sortedDistricts)\r\n        .sort((district1, district2) => {\r\n          if (sortData.sortColumn !== 'district') {\r\n            return sortData.isAscending\r\n              ? parseInt(sortedDistricts[district1][sortData.sortColumn]) -\r\n                  parseInt(sortedDistricts[district2][sortData.sortColumn])\r\n              : parseInt(sortedDistricts[district2][sortData.sortColumn]) -\r\n                  parseInt(sortedDistricts[district1][sortData.sortColumn]);\r\n          } else {\r\n            return sortData.isAscending\r\n              ? district1.localeCompare(district2)\r\n              : district2.localeCompare(district1);\r\n          }\r\n        })\r\n        .forEach((key) => {\r\n          sorted[key] = sortedDistricts[key];\r\n        });\r\n      setSortedDistricts(sorted);\r\n    },\r\n    [sortedDistricts]\r\n  );\r\n\r\n  const handleSort = useCallback(\r\n    (statistic) => {\r\n      const newSortData = {\r\n        isAscending: !sortData.isAscending,\r\n        sortColumn: statistic,\r\n      };\r\n      doSort(newSortData);\r\n      setSortData(Object.assign({}, sortData, newSortData));\r\n    },\r\n    [doSort, setSortData, sortData]\r\n  );\r\n\r\n  useEffectOnce(() => {\r\n    if (state.statecode !== 'TT') doSort(sortData);\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <tr\r\n        className={classnames(\r\n          'state',\r\n          {'is-total': state.statecode === 'TT'},\r\n          {'is-highlighted': regionHighlighted?.state === state.state},\r\n          {'is-odd': index % 2 === 0}\r\n        )}\r\n        onMouseEnter={() => _onHighlightState(state)}\r\n        onClick={\r\n          state.statecode !== 'TT'\r\n            ? () => {\r\n                setShowDistricts(!showDistricts);\r\n              }\r\n            : null\r\n        }\r\n      >\r\n        <td>\r\n          <div className=\"title-chevron\">\r\n            {state.statecode !== 'TT' && Chevron}\r\n            <span className=\"title-icon\">\r\n              {t(state.state)}\r\n\r\n              <span\r\n                data-tip={[state.statenotes]}\r\n                data-event=\"touchstart mouseover\"\r\n                data-event-off=\"mouseleave\"\r\n                onClick={(e) => e.stopPropagation()}\r\n              >\r\n                {state.statenotes && <Icon.Info />}\r\n              </span>\r\n            </span>\r\n          </div>\r\n        </td>\r\n\r\n        {STATE_ROW_STATISTICS.map((statistic, index) => (\r\n          <StateCell key={index} state={state} statistic={statistic} />\r\n        ))}\r\n      </tr>\r\n\r\n      {showDistricts && (\r\n        <React.Fragment>\r\n          <tr className=\"is-spacer\">\r\n            <td colSpan={5}>\r\n              <p />\r\n            </td>\r\n          </tr>\r\n\r\n          <tr className={'state-last-update'}>\r\n            <td colSpan={3} style={{paddingBottom: 0}}>\r\n              <p className=\"spacer\"></p>\r\n              <p>\r\n                {isNaN(Date.parse(formatDate(state.lastupdatedtime)))\r\n                  ? ''\r\n                  : `${t('Last updated')} ${formatLastUpdated(\r\n                      state.lastupdatedtime\r\n                    )} ${t('ago')}`}\r\n              </p>\r\n              {sortedDistricts?.Unknown && (\r\n                <div className=\"disclaimer\">\r\n                  <Icon.AlertCircle />\r\n                  {t('District-wise numbers are under reconciliation')}\r\n                </div>\r\n              )}\r\n            </td>\r\n            <td\r\n              align=\"center\"\r\n              className=\"state-page-link\"\r\n              colSpan={2}\r\n              onClick={() => {\r\n                history.push(`state/${state.statecode}`);\r\n              }}\r\n            >\r\n              {t('See more details on {{state}}', {state: t(state.state)})}\r\n            </td>\r\n          </tr>\r\n\r\n          <tr className={classnames('district-heading')}>\r\n            <td onClick={() => handleSort('district')}>\r\n              <div className=\"heading-content\">\r\n                <abbr title=\"District\">{t('District')}</abbr>\r\n                <div\r\n                  style={{\r\n                    display:\r\n                      sortData.sortColumn === 'district' ? 'initial' : 'none',\r\n                  }}\r\n                >\r\n                  {sortData.isAscending ? (\r\n                    <div className=\"arrow-up\" />\r\n                  ) : (\r\n                    <div className=\"arrow-down\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </td>\r\n\r\n            {DISTRICT_ROW_STATISTICS.map((statistic, index) => (\r\n              <DistrictHeaderCell\r\n                key={index}\r\n                handleSort={handleSort}\r\n                statistic={statistic}\r\n                sortData={sortData}\r\n              />\r\n            ))}\r\n          </tr>\r\n        </React.Fragment>\r\n      )}\r\n\r\n      {showDistricts &&\r\n        Object.keys(sortedDistricts).map((district, index) => (\r\n          <DistrictRow\r\n            key={district}\r\n            state={state}\r\n            district={district}\r\n            districts={districts}\r\n            zone={zones[district]}\r\n            sortedDistricts={sortedDistricts}\r\n            regionHighlighted={regionHighlighted}\r\n            onHighlightDistrict={onHighlightDistrict}\r\n          />\r\n        ))}\r\n\r\n      {showDistricts && (\r\n        <tr className=\"is-spacer\">\r\n          <td colSpan={5}>\r\n            <p />\r\n            <ReactTooltip\r\n              id=\"district\"\r\n              place=\"right\"\r\n              type=\"dark\"\r\n              effect=\"solid\"\r\n              multiline={true}\r\n              scrollHide={true}\r\n              globalEventOff=\"click\"\r\n            />\r\n          </td>\r\n        </tr>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default React.memo(Row, isEqual);\r\n"]},"metadata":{},"sourceType":"module"}
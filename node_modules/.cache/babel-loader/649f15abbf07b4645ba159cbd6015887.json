{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import axios from'axios';import*as d3 from'd3';import React,{useEffect,useRef,useState}from'react';import ReactDOM from'react-dom';import ForceGraph2D from'react-force-graph-2d';var isEqual=function isEqual(){return true;};function Clusters(_ref){var stateCode=_ref.stateCode;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),fetched=_useState2[0],setFetched=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),stateRawData=_useState4[0],setStateRawData=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),networkData=_useState6[0],setNetworkData=_useState6[1];function prepareNetworkData(data){// Parse data\nvar contractedStr=data.reduce(function(acc,v){return acc+v.contractedfromwhichpatientsuspected+', ';},'');contractedStr=contractedStr.replace(/\\s+/g,'');var sources=new Set(contractedStr.match(/[^,]+/g));// Prepare nodes and links\nvar nodes=[];var nodesSet=new Set();var links=[];data.forEach(function(d){var contractedStr=d.contractedfromwhichpatientsuspected.replace(/\\s+/g,'');var contracted=contractedStr.match(/[^,]+/g);if(contracted){var pid='P'+d.patientnumber;nodesSet.add(pid);nodes.push({id:pid,group:sources.has(pid)?'source':'target',raw:d});contracted.forEach(function(p){links.push({source:p,target:pid});});}});// Add missing nodes\nlinks.forEach(function(d){if(!nodesSet.has(d.source)){nodes.push({id:d.source,group:'source',raw:d.source});nodesSet.add(d.source);}});return{nodes:nodes,links:links};}useEffect(function(){function getData(){return _getData.apply(this,arguments);}function _getData(){_getData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var rawDataResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get('https://api.covid19india.org/raw_data.json');case 3:rawDataResponse=_context.sent;setStateRawData(rawDataResponse.data.raw_data.filter(function(d){return d.statecode===stateCode;}));setFetched(true);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return _getData.apply(this,arguments);}if(!fetched){getData();}},[fetched,stateCode]);useEffect(function(){setNetworkData(prepareNetworkData(stateRawData));},[stateRawData]);var NetworkGraph=function NetworkGraph(){var fgRef=useRef();useEffect(function(){var fg=fgRef.current;var width=document.getElementById('clusters').offsetWidth;var height=width;// Deactivate existing forces\nfg.d3Force('charge').strength(-60);fg.d3Force('collision',d3.forceCollide());fg.d3Force('x',d3.forceX().strength(0.3));fg.d3Force('y',d3.forceY().strength(0.3));fg.d3Force('box',boxForce);// Custom force to keep everything inside box\nfunction boxForce(){for(var i=0,n=networkData.nodes.length;i<n;++i){var currNode=networkData.nodes[i];currNode.x=Math.max(-width,Math.min(width,currNode.x));currNode.y=Math.max(-height,Math.min(height,currNode.y));}}},[]);var width=document.getElementById('clusters').offsetWidth;var height=width;return/*#__PURE__*/React.createElement(ForceGraph2D,{ref:fgRef,width:width,height:height,graphData:networkData,nodeLabel:\"id\",nodeColor:function nodeColor(node){return node.group==='source'?'#dc3545':'gray';},linkDirectionalParticleColor:function linkDirectionalParticleColor(){return'red';},linkDirectionalParticles:1,linkDirectionalParticleWidth:function linkDirectionalParticleWidth(link){return link.source.id[0]==='P'?2:0;},enableZoomPanInteraction:false});};useEffect(function(){ReactDOM.render(/*#__PURE__*/React.createElement(NetworkGraph,null),document.getElementById('clusters'));},[networkData]);return/*#__PURE__*/React.createElement(\"div\",{id:\"clusters\"});}export default React.memo(Clusters,isEqual);","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/src/components/clusters.js"],"names":["axios","d3","React","useEffect","useRef","useState","ReactDOM","ForceGraph2D","isEqual","Clusters","stateCode","fetched","setFetched","stateRawData","setStateRawData","networkData","setNetworkData","prepareNetworkData","data","contractedStr","reduce","acc","v","contractedfromwhichpatientsuspected","replace","sources","Set","match","nodes","nodesSet","links","forEach","d","contracted","pid","patientnumber","add","push","id","group","has","raw","p","source","target","getData","get","rawDataResponse","raw_data","filter","statecode","console","log","NetworkGraph","fgRef","fg","current","width","document","getElementById","offsetWidth","height","d3Force","strength","forceCollide","forceX","forceY","boxForce","i","n","length","currNode","x","Math","max","min","y","node","link","render","memo"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport * as d3 from 'd3';\r\nimport React, {useEffect, useRef, useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ForceGraph2D from 'react-force-graph-2d';\r\n\r\nconst isEqual = () => {\r\n  return true;\r\n};\r\n\r\nfunction Clusters({stateCode}) {\r\n  const [fetched, setFetched] = useState(false);\r\n  const [stateRawData, setStateRawData] = useState([]);\r\n  const [networkData, setNetworkData] = useState([]);\r\n\r\n  function prepareNetworkData(data) {\r\n    // Parse data\r\n    let contractedStr = data.reduce(\r\n      (acc, v) => acc + v.contractedfromwhichpatientsuspected + ', ',\r\n      ''\r\n    );\r\n    contractedStr = contractedStr.replace(/\\s+/g, '');\r\n    const sources = new Set(contractedStr.match(/[^,]+/g));\r\n\r\n    // Prepare nodes and links\r\n    const nodes = [];\r\n    const nodesSet = new Set();\r\n    const links = [];\r\n    data.forEach((d) => {\r\n      const contractedStr = d.contractedfromwhichpatientsuspected.replace(\r\n        /\\s+/g,\r\n        ''\r\n      );\r\n      const contracted = contractedStr.match(/[^,]+/g);\r\n      if (contracted) {\r\n        const pid = 'P' + d.patientnumber;\r\n        nodesSet.add(pid);\r\n        nodes.push({\r\n          id: pid,\r\n          group: sources.has(pid) ? 'source' : 'target',\r\n          raw: d,\r\n        });\r\n        contracted.forEach((p) => {\r\n          links.push({\r\n            source: p,\r\n            target: pid,\r\n          });\r\n        });\r\n      }\r\n    });\r\n\r\n    // Add missing nodes\r\n    links.forEach((d) => {\r\n      if (!nodesSet.has(d.source)) {\r\n        nodes.push({\r\n          id: d.source,\r\n          group: 'source',\r\n          raw: d.source,\r\n        });\r\n        nodesSet.add(d.source);\r\n      }\r\n    });\r\n    return {\r\n      nodes: nodes,\r\n      links: links,\r\n    };\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      try {\r\n        const rawDataResponse = await axios.get(\r\n          'https://api.covid19india.org/raw_data.json'\r\n        );\r\n        setStateRawData(\r\n          rawDataResponse.data.raw_data.filter((d) => d.statecode === stateCode)\r\n        );\r\n        setFetched(true);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    if (!fetched) {\r\n      getData();\r\n    }\r\n  }, [fetched, stateCode]);\r\n\r\n  useEffect(() => {\r\n    setNetworkData(prepareNetworkData(stateRawData));\r\n  }, [stateRawData]);\r\n\r\n  const NetworkGraph = () => {\r\n    const fgRef = useRef();\r\n\r\n    useEffect(() => {\r\n      const fg = fgRef.current;\r\n      const width = document.getElementById('clusters').offsetWidth;\r\n      const height = width;\r\n      // Deactivate existing forces\r\n      fg.d3Force('charge').strength(-60);\r\n      fg.d3Force('collision', d3.forceCollide());\r\n      fg.d3Force('x', d3.forceX().strength(0.3));\r\n      fg.d3Force('y', d3.forceY().strength(0.3));\r\n      fg.d3Force('box', boxForce);\r\n\r\n      // Custom force to keep everything inside box\r\n      function boxForce() {\r\n        for (let i = 0, n = networkData.nodes.length; i < n; ++i) {\r\n          const currNode = networkData.nodes[i];\r\n          currNode.x = Math.max(-width, Math.min(width, currNode.x));\r\n          currNode.y = Math.max(-height, Math.min(height, currNode.y));\r\n        }\r\n      }\r\n    }, []);\r\n\r\n    const width = document.getElementById('clusters').offsetWidth;\r\n    const height = width;\r\n\r\n    return (\r\n      <ForceGraph2D\r\n        ref={fgRef}\r\n        width={width}\r\n        height={height}\r\n        graphData={networkData}\r\n        nodeLabel=\"id\"\r\n        nodeColor={(node) => (node.group === 'source' ? '#dc3545' : 'gray')}\r\n        linkDirectionalParticleColor={() => 'red'}\r\n        linkDirectionalParticles={1}\r\n        linkDirectionalParticleWidth={(link) =>\r\n          link.source.id[0] === 'P' ? 2 : 0\r\n        }\r\n        enableZoomPanInteraction={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    ReactDOM.render(<NetworkGraph />, document.getElementById('clusters'));\r\n  }, [networkData]);\r\n\r\n  return <div id=\"clusters\"></div>;\r\n}\r\n\r\nexport default React.memo(Clusters, isEqual);\r\n"]},"metadata":{},"sourceType":"module"}
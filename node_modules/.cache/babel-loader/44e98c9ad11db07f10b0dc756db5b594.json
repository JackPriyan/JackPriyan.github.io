{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport * as styledSystem from 'styled-system';\nimport PropTypes from 'prop-types';\nimport systemPropTypes from '@styled-system/prop-types';\nimport themeGet from '@styled-system/theme-get';\nimport theme from './theme';\nvar getKey = styledSystem.get,\n    compose = styledSystem.compose,\n    system = styledSystem.system;\nexport var get = function get(key) {\n  return themeGet(key, getKey(theme, key));\n};\nvar whiteSpace = system({\n  whiteSpace: {\n    property: 'whiteSpace',\n    cssProperty: 'whiteSpace'\n  }\n});\nexport var TYPOGRAPHY = compose(styledSystem.typography, whiteSpace);\nTYPOGRAPHY.propTypes = _objectSpread({}, systemPropTypes.typography, {\n  whiteSpace: PropTypes.oneOf(['normal', 'nowrap', 'pre-wrap', 'pre', 'pre-line'])\n});\nexport var COMMON = compose(styledSystem.space, styledSystem.color, styledSystem.display);\nCOMMON.propTypes = _objectSpread({}, systemPropTypes.space, {}, systemPropTypes.color);\nexport var BORDER = compose(styledSystem.border, styledSystem.shadow);\nBORDER.propTypes = _objectSpread({}, systemPropTypes.border, {}, systemPropTypes.shadow); // these are 1:1 with styled-system's API now,\n// so you could consider dropping the abstraction\n\nexport var LAYOUT = styledSystem.layout;\nexport var POSITION = styledSystem.position;\nexport var FLEX = styledSystem.flexbox;\nexport var GRID = styledSystem.grid;\nTYPOGRAPHY.propTypes = systemPropTypes.typography;\nLAYOUT.propTypes = systemPropTypes.layout;\nPOSITION.propTypes = systemPropTypes.position;\nFLEX.propTypes = systemPropTypes.flexbox;\nGRID.propTypes = systemPropTypes.grid;","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/node_modules/@primer/components/lib-esm/constants.js"],"names":["_objectSpread","styledSystem","PropTypes","systemPropTypes","themeGet","theme","getKey","get","compose","system","key","whiteSpace","property","cssProperty","TYPOGRAPHY","typography","propTypes","oneOf","COMMON","space","color","display","BORDER","border","shadow","LAYOUT","layout","POSITION","position","FLEX","flexbox","GRID","grid"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,sCAA1B;AACA,OAAO,KAAKC,YAAZ,MAA8B,eAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,IAAIC,MAAM,GAAGL,YAAY,CAACM,GAA1B;AAAA,IACIC,OAAO,GAAGP,YAAY,CAACO,OAD3B;AAAA,IAEIC,MAAM,GAAGR,YAAY,CAACQ,MAF1B;AAGA,OAAO,IAAIF,GAAG,GAAG,SAASA,GAAT,CAAaG,GAAb,EAAkB;AACjC,SAAON,QAAQ,CAACM,GAAD,EAAMJ,MAAM,CAACD,KAAD,EAAQK,GAAR,CAAZ,CAAf;AACD,CAFM;AAGP,IAAIC,UAAU,GAAGF,MAAM,CAAC;AACtBE,EAAAA,UAAU,EAAE;AACVC,IAAAA,QAAQ,EAAE,YADA;AAEVC,IAAAA,WAAW,EAAE;AAFH;AADU,CAAD,CAAvB;AAMA,OAAO,IAAIC,UAAU,GAAGN,OAAO,CAACP,YAAY,CAACc,UAAd,EAA0BJ,UAA1B,CAAxB;AACPG,UAAU,CAACE,SAAX,GAAuBhB,aAAa,CAAC,EAAD,EAAKG,eAAe,CAACY,UAArB,EAAiC;AACnEJ,EAAAA,UAAU,EAAET,SAAS,CAACe,KAAV,CAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,UAArB,EAAiC,KAAjC,EAAwC,UAAxC,CAAhB;AADuD,CAAjC,CAApC;AAGA,OAAO,IAAIC,MAAM,GAAGV,OAAO,CAACP,YAAY,CAACkB,KAAd,EAAqBlB,YAAY,CAACmB,KAAlC,EAAyCnB,YAAY,CAACoB,OAAtD,CAApB;AACPH,MAAM,CAACF,SAAP,GAAmBhB,aAAa,CAAC,EAAD,EAAKG,eAAe,CAACgB,KAArB,EAA4B,EAA5B,EAAgChB,eAAe,CAACiB,KAAhD,CAAhC;AACA,OAAO,IAAIE,MAAM,GAAGd,OAAO,CAACP,YAAY,CAACsB,MAAd,EAAsBtB,YAAY,CAACuB,MAAnC,CAApB;AACPF,MAAM,CAACN,SAAP,GAAmBhB,aAAa,CAAC,EAAD,EAAKG,eAAe,CAACoB,MAArB,EAA6B,EAA7B,EAAiCpB,eAAe,CAACqB,MAAjD,CAAhC,C,CAA0F;AAC1F;;AAEA,OAAO,IAAIC,MAAM,GAAGxB,YAAY,CAACyB,MAA1B;AACP,OAAO,IAAIC,QAAQ,GAAG1B,YAAY,CAAC2B,QAA5B;AACP,OAAO,IAAIC,IAAI,GAAG5B,YAAY,CAAC6B,OAAxB;AACP,OAAO,IAAIC,IAAI,GAAG9B,YAAY,CAAC+B,IAAxB;AACPlB,UAAU,CAACE,SAAX,GAAuBb,eAAe,CAACY,UAAvC;AACAU,MAAM,CAACT,SAAP,GAAmBb,eAAe,CAACuB,MAAnC;AACAC,QAAQ,CAACX,SAAT,GAAqBb,eAAe,CAACyB,QAArC;AACAC,IAAI,CAACb,SAAL,GAAiBb,eAAe,CAAC2B,OAAjC;AACAC,IAAI,CAACf,SAAL,GAAiBb,eAAe,CAAC6B,IAAjC","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport * as styledSystem from 'styled-system';\nimport PropTypes from 'prop-types';\nimport systemPropTypes from '@styled-system/prop-types';\nimport themeGet from '@styled-system/theme-get';\nimport theme from './theme';\nvar getKey = styledSystem.get,\n    compose = styledSystem.compose,\n    system = styledSystem.system;\nexport var get = function get(key) {\n  return themeGet(key, getKey(theme, key));\n};\nvar whiteSpace = system({\n  whiteSpace: {\n    property: 'whiteSpace',\n    cssProperty: 'whiteSpace'\n  }\n});\nexport var TYPOGRAPHY = compose(styledSystem.typography, whiteSpace);\nTYPOGRAPHY.propTypes = _objectSpread({}, systemPropTypes.typography, {\n  whiteSpace: PropTypes.oneOf(['normal', 'nowrap', 'pre-wrap', 'pre', 'pre-line'])\n});\nexport var COMMON = compose(styledSystem.space, styledSystem.color, styledSystem.display);\nCOMMON.propTypes = _objectSpread({}, systemPropTypes.space, {}, systemPropTypes.color);\nexport var BORDER = compose(styledSystem.border, styledSystem.shadow);\nBORDER.propTypes = _objectSpread({}, systemPropTypes.border, {}, systemPropTypes.shadow); // these are 1:1 with styled-system's API now,\n// so you could consider dropping the abstraction\n\nexport var LAYOUT = styledSystem.layout;\nexport var POSITION = styledSystem.position;\nexport var FLEX = styledSystem.flexbox;\nexport var GRID = styledSystem.grid;\nTYPOGRAPHY.propTypes = systemPropTypes.typography;\nLAYOUT.propTypes = systemPropTypes.layout;\nPOSITION.propTypes = systemPropTypes.position;\nFLEX.propTypes = systemPropTypes.flexbox;\nGRID.propTypes = systemPropTypes.grid;"]},"metadata":{},"sourceType":"module"}
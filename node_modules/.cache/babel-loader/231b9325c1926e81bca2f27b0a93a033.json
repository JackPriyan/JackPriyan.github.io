{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\src\\\\App.js\";\nimport Navbar from './components/navbar';\nimport ScrollToTop from './utils/ScrollToTop';\nimport React, { Suspense, lazy } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport { useLocalStorage, useEffectOnce } from 'react-use';\nimport './App.scss';\nconst Home = lazy(() => import('./components/home'\n/* webpackChunkName: \"Home\" */\n));\nconst DeepDive = lazy(() => import('./components/deepdive'\n/* webpackChunkName: \"DeepDive\" */\n));\nconst FAQ = lazy(() => import('./components/faq'\n/* webpackChunkName: \"FAQ\" */\n));\nconst Demographics = lazy(() => import('./components/demographics'\n/* webpackChunkName: \"PatientDB\" */\n));\nconst State = lazy(() => import('./components/state'\n/* webpackChunkName: \"State\" */\n));\nconst Essentials = lazy(() => import('./components/essentials'\n/* webpackChunkName: \"Essentials\" */\n));\nconst schemaMarkup = {\n  '@context': 'http://schema.org/',\n  '@type': 'NGO',\n  name: 'Coronavirus Outbreak in India: Latest Map and Case Count',\n  alternateName: 'COVID-19 Tracker',\n  url: 'https://www.covid19india.org/',\n  image: 'https://www.covid19india.org/thumbnail.png'\n};\n\nfunction App() {\n  const {\n    t\n  } = useTranslation();\n  const pages = [{\n    pageLink: '/',\n    view: Home,\n    displayName: 'Home',\n    animationDelayForNavbar: 0.2,\n    showInNavbar: true\n  }, {\n    pageLink: '/demographics',\n    view: Demographics,\n    displayName: t('Demographics'),\n    animationDelayForNavbar: 0.3,\n    showInNavbar: true\n  }, {\n    pageLink: '/deepdive',\n    view: DeepDive,\n    displayName: t('Deep Dive'),\n    animationDelayForNavbar: 0.4,\n    showInNavbar: true\n  }, {\n    pageLink: '/essentials',\n    view: Essentials,\n    displayName: t('Essentials'),\n    animationDelayForNavbar: 0.5,\n    showInNavbar: true\n  }, {\n    pageLink: '/about',\n    view: FAQ,\n    displayName: t('About'),\n    animationDelayForNavbar: 0.6,\n    showInNavbar: true\n  }, {\n    pageLink: '/state/:stateCode',\n    view: State,\n    displayName: t('State'),\n    animationDelayForNavbar: 0.7,\n    showInNavbar: false\n  }];\n  const [darkMode, setDarkMode] = useLocalStorage('darkMode', false);\n  const [isThemeSet] = useLocalStorage('isThemeSet', false);\n  useEffectOnce(() => {\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches && !isThemeSet) {\n      setDarkMode(true);\n    } else if (window.matchMedia && !window.matchMedia('(prefers-color-scheme: dark)').matches && !isThemeSet) {\n      setDarkMode(false);\n    }\n  });\n  React.useEffect(() => {\n    if (darkMode) {\n      document.querySelector('body').classList.add('dark-mode');\n    } else {\n      document.querySelector('body').classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"script\", {\n    type: \"application/ld+json\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, JSON.stringify(schemaMarkup))), /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ScrollToTop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lazy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    render: ({\n      location\n    }) => /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      pages: pages,\n      darkMode: darkMode,\n      setDarkMode: setDarkMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      location: location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, pages.map((page, index) => {\n      return /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: page.pageLink,\n        render: ({\n          match\n        }) => /*#__PURE__*/React.createElement(page.view, {\n          key: match.params.stateCode || index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 27\n          }\n        }),\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 23\n        }\n      });\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/src/App.js"],"names":["Navbar","ScrollToTop","React","Suspense","lazy","Helmet","useTranslation","BrowserRouter","Router","Route","Redirect","Switch","useLocalStorage","useEffectOnce","Home","DeepDive","FAQ","Demographics","State","Essentials","schemaMarkup","name","alternateName","url","image","App","t","pages","pageLink","view","displayName","animationDelayForNavbar","showInNavbar","darkMode","setDarkMode","isThemeSet","window","matchMedia","matches","useEffect","document","querySelector","classList","add","remove","JSON","stringify","location","map","page","index","match","params","stateCode"],"mappings":"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","sourcesContent":["import Navbar from './components/navbar';\r\nimport ScrollToTop from './utils/ScrollToTop';\r\n\r\nimport React, {Suspense, lazy} from 'react';\r\nimport {Helmet} from 'react-helmet';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport {useLocalStorage, useEffectOnce} from 'react-use';\r\nimport './App.scss';\r\n\r\nconst Home = lazy(() =>\r\n  import('./components/home' /* webpackChunkName: \"Home\" */)\r\n);\r\nconst DeepDive = lazy(() =>\r\n  import('./components/deepdive' /* webpackChunkName: \"DeepDive\" */)\r\n);\r\nconst FAQ = lazy(() =>\r\n  import('./components/faq' /* webpackChunkName: \"FAQ\" */)\r\n);\r\nconst Demographics = lazy(() =>\r\n  import('./components/demographics' /* webpackChunkName: \"PatientDB\" */)\r\n);\r\nconst State = lazy(() =>\r\n  import('./components/state' /* webpackChunkName: \"State\" */)\r\n);\r\nconst Essentials = lazy(() =>\r\n  import('./components/essentials' /* webpackChunkName: \"Essentials\" */)\r\n);\r\n\r\nconst schemaMarkup = {\r\n  '@context': 'http://schema.org/',\r\n  '@type': 'NGO',\r\n  name: 'Coronavirus Outbreak in India: Latest Map and Case Count',\r\n  alternateName: 'COVID-19 Tracker',\r\n  url: 'https://www.covid19india.org/',\r\n  image: 'https://www.covid19india.org/thumbnail.png',\r\n};\r\n\r\nfunction App() {\r\n  const {t} = useTranslation();\r\n\r\n  const pages = [\r\n    {\r\n      pageLink: '/',\r\n      view: Home,\r\n      displayName: 'Home',\r\n      animationDelayForNavbar: 0.2,\r\n      showInNavbar: true,\r\n    },\r\n    {\r\n      pageLink: '/demographics',\r\n      view: Demographics,\r\n      displayName: t('Demographics'),\r\n      animationDelayForNavbar: 0.3,\r\n      showInNavbar: true,\r\n    },\r\n    {\r\n      pageLink: '/deepdive',\r\n      view: DeepDive,\r\n      displayName: t('Deep Dive'),\r\n      animationDelayForNavbar: 0.4,\r\n      showInNavbar: true,\r\n    },\r\n    {\r\n      pageLink: '/essentials',\r\n      view: Essentials,\r\n      displayName: t('Essentials'),\r\n      animationDelayForNavbar: 0.5,\r\n      showInNavbar: true,\r\n    },\r\n    {\r\n      pageLink: '/about',\r\n      view: FAQ,\r\n      displayName: t('About'),\r\n      animationDelayForNavbar: 0.6,\r\n      showInNavbar: true,\r\n    },\r\n    {\r\n      pageLink: '/state/:stateCode',\r\n      view: State,\r\n      displayName: t('State'),\r\n      animationDelayForNavbar: 0.7,\r\n      showInNavbar: false,\r\n    },\r\n  ];\r\n\r\n  const [darkMode, setDarkMode] = useLocalStorage('darkMode', false);\r\n  const [isThemeSet] = useLocalStorage('isThemeSet', false);\r\n\r\n  useEffectOnce(() => {\r\n    if (\r\n      window.matchMedia &&\r\n      window.matchMedia('(prefers-color-scheme: dark)').matches &&\r\n      !isThemeSet\r\n    ) {\r\n      setDarkMode(true);\r\n    } else if (\r\n      window.matchMedia &&\r\n      !window.matchMedia('(prefers-color-scheme: dark)').matches &&\r\n      !isThemeSet\r\n    ) {\r\n      setDarkMode(false);\r\n    }\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (darkMode) {\r\n      document.querySelector('body').classList.add('dark-mode');\r\n    } else {\r\n      document.querySelector('body').classList.remove('dark-mode');\r\n    }\r\n  }, [darkMode]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Helmet>\r\n        <script type=\"application/ld+json\">\r\n          {JSON.stringify(schemaMarkup)}\r\n        </script>\r\n      </Helmet>\r\n\r\n      <Router>\r\n        <ScrollToTop />\r\n        <Suspense fallback={<div className=\"lazy\"></div>}>\r\n          <Route\r\n            render={({location}) => (\r\n              <React.Fragment>\r\n                <Navbar\r\n                  pages={pages}\r\n                  darkMode={darkMode}\r\n                  setDarkMode={setDarkMode}\r\n                />\r\n                <Switch location={location}>\r\n                  {pages.map((page, index) => {\r\n                    return (\r\n                      <Route\r\n                        exact\r\n                        path={page.pageLink}\r\n                        render={({match}) => (\r\n                          <page.view key={match.params.stateCode || index} />\r\n                        )}\r\n                        key={index}\r\n                      />\r\n                    );\r\n                  })}\r\n                  <Redirect to=\"/\" />\r\n                </Switch>\r\n              </React.Fragment>\r\n            )}\r\n          />\r\n        </Suspense>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}
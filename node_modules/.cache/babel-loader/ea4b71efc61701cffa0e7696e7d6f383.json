{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import MapLegend from'./maplegend';import{MAP_META,MAP_STATISTICS,MAP_TYPES,MAP_VIEWS}from'../constants';import{capitalizeAll}from'../utils/commonfunctions';import*as d3 from'd3';import React,{useCallback,useEffect,useMemo,useRef}from'react';import*as Icon from'react-feather';import{useTranslation}from'react-i18next';import useSWR from'swr';import*as topojson from'topojson';var colorInterpolator=function colorInterpolator(caseType,t){switch(caseType){case'confirmed':return d3.interpolateReds(t*0.85);case'active':return d3.interpolateBlues(t*0.85);case'recovered':return d3.interpolateGreens(t*0.85);case'deceased':return d3.interpolateGreys(t*0.85);default:return;}};var caseColor=function caseColor(caseType){var alpha=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';switch(caseType){case'confirmed':return'#ff073a'+alpha;case'active':return'#007bff'+alpha;case'recovered':return'#28a745'+alpha;case'deceased':return'#6c757d'+alpha;default:return;}};function ChoroplethMap(_ref){var _mapData$currentMap$n,_mapData$currentMap$n2;var statistic=_ref.statistic,mapData=_ref.mapData,currentMap=_ref.currentMap,changeMap=_ref.changeMap,regionHighlighted=_ref.regionHighlighted,setRegionHighlighted=_ref.setRegionHighlighted,mapOption=_ref.mapOption,isCountryLoaded=_ref.isCountryLoaded;var _useTranslation=useTranslation(),t=_useTranslation.t;var svgRef=useRef(null);var mapMeta=MAP_META[currentMap.name];var geoDataResponse=useSWR(mapMeta.geoDataFile,/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(file){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return d3.json(file);case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}());var mapScale=useMemo(function(){if(currentMap.stat===MAP_STATISTICS.ZONE){return d3.scaleOrdinal(['Red','Orange','Green'],['#d73027','#fee08b','#66bd63']);}else if(currentMap.stat===MAP_STATISTICS.HOTSPOTS){var _svgRef$current$getBo=svgRef.current.getBoundingClientRect(),width=_svgRef$current$getBo.width;return d3.scaleSqrt([0,statistic[mapOption].max],[0,width/10]).clamp(true);}else{return d3.scaleSequential([0,Math.max(1,statistic[mapOption].max)],function(t){return colorInterpolator(mapOption,t);}).clamp(true);}},[currentMap.stat,statistic,mapOption]);useEffect(function(){if(!geoDataResponse.data)return;var geoData=geoDataResponse.data;var topology=topojson.feature(geoData,geoData.objects[mapMeta.graphObjectStates||mapMeta.graphObjectDistricts]);var svg=d3.select(svgRef.current);if(!svg.attr('viewBox')){var _svgRef$current$getBo2=svgRef.current.getBoundingClientRect(),widthDefault=_svgRef$current$getBo2.width,heightDefault=_svgRef$current$getBo2.height;var _projection=isCountryLoaded?d3.geoMercator().fitWidth(widthDefault,topology):d3.geoMercator().fitSize([widthDefault,heightDefault],topology);var _path=d3.geoPath(_projection);var _bBox=_path.bounds(topology);var _ref3=[+_bBox[1][0],_bBox[1][1]],_width=_ref3[0],_height=_ref3[1];svg.attr('viewBox',\"0 0 \".concat(_width,\" \").concat(_height));}var bBox=svg.attr('viewBox').split(' ');var width=+bBox[2],height=+bBox[3];var projection=d3.geoMercator().fitSize([width,height],topology);var path=d3.geoPath(projection);// Add id to each feature\nvar features=currentMap.stat!==MAP_STATISTICS.HOTSPOTS?currentMap.view===MAP_VIEWS.STATES?topojson.feature(geoData,geoData.objects[mapMeta.graphObjectStates]).features:topojson.feature(geoData,geoData.objects[mapMeta.graphObjectDistricts]).features:[].concat(_toConsumableArray(topojson.feature(geoData,geoData.objects[mapMeta.graphObjectStates]).features),_toConsumableArray(topojson.feature(geoData,geoData.objects[mapMeta.graphObjectDistricts]).features));features=features.map(function(f){var district=f.properties.district;var state=f.properties.st_nm;var obj=Object.assign({},f);obj.id=\"\".concat(currentMap.name,\"-\").concat(state).concat(district?'-'+district:'');return obj;});/* Draw map */var t=d3.transition().duration(500);var onceTouchedRegion=null;var regionSelection=svg.select('.regions').selectAll('path').data(currentMap.stat!==MAP_STATISTICS.HOTSPOTS?features:[],function(d){return d.id;}).join(function(enter){var sel=enter.append('path').attr('d',path).attr('stroke-width',2).attr('stroke-opacity',0).style('cursor','pointer').on('mouseenter',function(d){var region={state:d.properties.st_nm};if(d.properties.district)region.district=d.properties.district;setRegionHighlighted(region);}).on('mouseleave',function(d){if(onceTouchedRegion===d)onceTouchedRegion=null;}).on('touchstart',function(d){if(onceTouchedRegion===d)onceTouchedRegion=null;else onceTouchedRegion=d;}).on('click',function(d){d3.event.stopPropagation();if(onceTouchedRegion||mapMeta.mapType===MAP_TYPES.STATE)return;// Disable pointer events till the new map is rendered\nsvg.attr('pointer-events','none');svg.select('.regions').selectAll('path').attr('pointer-events','none');// Switch map\nchangeMap(d.properties.st_nm);});sel.append('title');return sel;}).attr('pointer-events','none');regionSelection.transition(t).attr('fill',function(d){var n;if(currentMap.stat===MAP_STATISTICS.ZONE){var state=d.properties.st_nm;var district=d.properties.district;n=mapData[state]&&mapData[state][district]?mapData[state][district]:0;}else{var _state=d.properties.st_nm;var _district=d.properties.district;if(_district)n=mapData[_state]&&mapData[_state][_district]&&mapData[_state][_district][mapOption]?mapData[_state][_district][mapOption]:0;else n=mapData[_state]&&mapData[_state][mapOption]?mapData[_state][mapOption]:0;}var color=n===0?'#ffffff00':mapScale(n);return color;}).attr('stroke',currentMap.stat===MAP_STATISTICS.ZONE?'#343a40':caseColor(mapOption)).on('end',function(){d3.select(this).attr('pointer-events','all');});regionSelection.select('title').text(function(d){if(currentMap.stat===MAP_STATISTICS.TOTAL){var state=d.properties.st_nm;var district=d.properties.district;var n;if(district)n=mapData[state]&&mapData[state][district]?mapData[state][district][mapOption]:0;else n=mapData[state]?mapData[state][mapOption]:0;return Number(parseFloat(100*(n/(statistic[mapOption].total||0.001))).toFixed(2)).toString()+'% from '+capitalizeAll(district?district:state);}});svg.transition().duration(mapMeta.mapType===MAP_TYPES.STATE?t.duration()/2:0).on('end',function(){return svg.attr('class',currentMap.stat===MAP_STATISTICS.ZONE?'zone':'');});/* ----------BUBBLE MAP----------*/var circlesData=[];if(currentMap.stat===MAP_STATISTICS.HOTSPOTS){circlesData=features.map(function(d){var district=d.properties.district;var state=d.properties.st_nm;if(district){d.value=mapData[state]&&mapData[state][district]?mapData[state][district][mapOption]:0;}else{d.value=mapData[state]&&mapData[state].Unknown?mapData[state].Unknown[mapOption]:0;}return d;}).sort(function(a,b){return b.value-a.value;});}svg.select('.circles').selectAll('circle').data(circlesData,function(d){return d.id;}).join(function(enter){return enter.append('circle').attr('transform',function(d){return\"translate(\".concat(path.centroid(d),\")\");}).attr('fill-opacity',0.5).style('cursor','pointer').attr('pointer-events','all').on('mouseenter',function(d){var region={state:d.properties.st_nm,district:d.properties.district||'Unknown'};setRegionHighlighted(region);}).on('click',function(){d3.event.stopPropagation();});}).transition(t).attr('fill',caseColor(mapOption,'70')).attr('stroke',caseColor(mapOption,'70')).attr('r',function(d){return mapScale(d.value);});/* ------------------------------*/var meshStates=[];if(mapMeta.mapType===MAP_TYPES.COUNTRY){meshStates=[topojson.mesh(geoData,geoData.objects[mapMeta.graphObjectStates])];meshStates[0].id=mapMeta.graphObjectStates;}var meshDistricts=[];if(currentMap.view===MAP_VIEWS.DISTRICTS){// Add id to mesh\nmeshDistricts=[topojson.mesh(geoData,geoData.objects[mapMeta.graphObjectDistricts])];meshDistricts[0].id=mapMeta.graphObjectDistricts;}svg.select(currentMap.view===MAP_VIEWS.STATES?'.state-borders':'.district-borders').attr('fill','none').attr('stroke-width',function(){return mapMeta.mapType===MAP_TYPES.COUNTRY&&currentMap.view===MAP_VIEWS.DISTRICTS?0:width/250;}).selectAll('path').data(currentMap.view===MAP_VIEWS.STATES?meshStates:meshDistricts,function(d){return d.id;}).join(function(enter){return enter.append('path').attr('d',path);}).transition(t).attr('stroke',function(){if(currentMap.stat===MAP_STATISTICS.ZONE){return'#00000060';}else{return caseColor(mapOption,'30');}});svg.select(currentMap.view===MAP_VIEWS.STATES?'.district-borders':'.state-borders').selectAll('path').data(currentMap.view===MAP_VIEWS.STATES?meshDistricts:meshStates,function(d){return d.id;}).join(function(enter){return enter.append('path').attr('d',path).attr('fill','none').attr('stroke-width',width/250);}).transition(t).attr('stroke','#343a4099');// Reset on tapping outside map\nsvg.attr('pointer-events','auto').on('click',function(){if(mapMeta.mapType!==MAP_TYPES.STATE){setRegionHighlighted({state:'Total'});}});},[geoDataResponse.data,mapMeta,currentMap,setRegionHighlighted,changeMap,isCountryLoaded,mapScale,statistic,mapData,mapOption]);var highlightRegionInMap=useCallback(function(state,district){var svg=d3.select(svgRef.current);if(currentMap.stat===MAP_STATISTICS.HOTSPOTS){svg.select('.circles').selectAll('circle').attr('fill-opacity',function(d){var highlighted=district&&state===d.properties.st_nm&&(district===d.properties.district||district==='Unknown'&&!d.properties.district);return highlighted?1:0.5;});}else{svg.select('.regions').selectAll('path').each(function(d){var _d$properties;var highlighted=district===((_d$properties=d.properties)===null||_d$properties===void 0?void 0:_d$properties.district)&&state===d.properties.st_nm;if(highlighted)this.parentNode.appendChild(this);d3.select(this).attr('stroke-opacity',highlighted?1:0);});}},[currentMap.stat]);useEffect(function(){if(!geoDataResponse.data)return;highlightRegionInMap(regionHighlighted.state,regionHighlighted.district);},[geoDataResponse.data,highlightRegionInMap,regionHighlighted.state,regionHighlighted.district,mapOption]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"svg-parent fadeInUp\",style:{animationDelay:'2.5s'}},/*#__PURE__*/React.createElement(\"svg\",{id:\"chart\",preserveAspectRatio:\"xMidYMid meet\",ref:svgRef},/*#__PURE__*/React.createElement(\"g\",{className:\"regions\"}),/*#__PURE__*/React.createElement(\"g\",{className:\"state-borders\"}),currentMap.view===MAP_VIEWS.DISTRICTS&&/*#__PURE__*/React.createElement(\"g\",{className:\"district-borders\"}),currentMap.stat===MAP_STATISTICS.HOTSPOTS&&/*#__PURE__*/React.createElement(\"g\",{className:\"circles\"})),mapMeta.mapType===MAP_TYPES.STATE&&((_mapData$currentMap$n=mapData[currentMap.name])===null||_mapData$currentMap$n===void 0?void 0:_mapData$currentMap$n.Unknown)&&((_mapData$currentMap$n2=mapData[currentMap.name])===null||_mapData$currentMap$n2===void 0?void 0:_mapData$currentMap$n2.Unknown[mapOption])?/*#__PURE__*/React.createElement(\"div\",{className:\"disclaimer\"},/*#__PURE__*/React.createElement(Icon.AlertCircle,null),t('District-wise {{mapOption}} numbers are under reconciliation',{mapOption:t(mapOption)})):''),mapScale&&/*#__PURE__*/React.createElement(MapLegend,{mapScale:mapScale,statistic:statistic,mapStatistic:currentMap.stat,mapOption:mapOption}),/*#__PURE__*/React.createElement(\"svg\",{style:{position:'absolute',height:0}},/*#__PURE__*/React.createElement(\"defs\",null,/*#__PURE__*/React.createElement(\"filter\",{id:\"balance-color\",colorInterpolationFilters:\"sRGB\"},/*#__PURE__*/React.createElement(\"feColorMatrix\",{type:\"matrix\",values:\"0.91372549  0           0            0  0.08627451\\r 0           0.91372549  0            0  0.08627451\\r 0           0           0.854901961  0  0.145098039\\r 0           0           0            1  0\"})))));}export default ChoroplethMap;","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/src/components/choropleth.js"],"names":["MapLegend","MAP_META","MAP_STATISTICS","MAP_TYPES","MAP_VIEWS","capitalizeAll","d3","React","useCallback","useEffect","useMemo","useRef","Icon","useTranslation","useSWR","topojson","colorInterpolator","caseType","t","interpolateReds","interpolateBlues","interpolateGreens","interpolateGreys","caseColor","alpha","ChoroplethMap","statistic","mapData","currentMap","changeMap","regionHighlighted","setRegionHighlighted","mapOption","isCountryLoaded","svgRef","mapMeta","name","geoDataResponse","geoDataFile","file","json","mapScale","stat","ZONE","scaleOrdinal","HOTSPOTS","current","getBoundingClientRect","width","scaleSqrt","max","clamp","scaleSequential","Math","data","geoData","topology","feature","objects","graphObjectStates","graphObjectDistricts","svg","select","attr","widthDefault","heightDefault","height","projection","geoMercator","fitWidth","fitSize","path","geoPath","bBox","bounds","split","features","view","STATES","map","f","district","properties","state","st_nm","obj","Object","assign","id","transition","duration","onceTouchedRegion","regionSelection","selectAll","d","join","enter","sel","append","style","on","region","event","stopPropagation","mapType","STATE","n","color","text","TOTAL","Number","parseFloat","total","toFixed","toString","circlesData","value","Unknown","sort","a","b","centroid","meshStates","COUNTRY","mesh","meshDistricts","DISTRICTS","highlightRegionInMap","highlighted","each","parentNode","appendChild","animationDelay","position"],"mappings":"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","sourcesContent":["import MapLegend from './maplegend';\r\n\r\nimport {MAP_META, MAP_STATISTICS, MAP_TYPES, MAP_VIEWS} from '../constants';\r\nimport {capitalizeAll} from '../utils/commonfunctions';\r\n\r\nimport * as d3 from 'd3';\r\nimport React, {useCallback, useEffect, useMemo, useRef} from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport {useTranslation} from 'react-i18next';\r\nimport useSWR from 'swr';\r\nimport * as topojson from 'topojson';\r\n\r\nconst colorInterpolator = (caseType, t) => {\r\n  switch (caseType) {\r\n    case 'confirmed':\r\n      return d3.interpolateReds(t * 0.85);\r\n    case 'active':\r\n      return d3.interpolateBlues(t * 0.85);\r\n    case 'recovered':\r\n      return d3.interpolateGreens(t * 0.85);\r\n    case 'deceased':\r\n      return d3.interpolateGreys(t * 0.85);\r\n    default:\r\n      return;\r\n  }\r\n};\r\n\r\nconst caseColor = (caseType, alpha = '') => {\r\n  switch (caseType) {\r\n    case 'confirmed':\r\n      return '#ff073a' + alpha;\r\n    case 'active':\r\n      return '#007bff' + alpha;\r\n    case 'recovered':\r\n      return '#28a745' + alpha;\r\n    case 'deceased':\r\n      return '#6c757d' + alpha;\r\n    default:\r\n      return;\r\n  }\r\n};\r\n\r\nfunction ChoroplethMap({\r\n  statistic,\r\n  mapData,\r\n  currentMap,\r\n  changeMap,\r\n  regionHighlighted,\r\n  setRegionHighlighted,\r\n  mapOption,\r\n  isCountryLoaded,\r\n}) {\r\n  const {t} = useTranslation();\r\n  const svgRef = useRef(null);\r\n\r\n  const mapMeta = MAP_META[currentMap.name];\r\n  const geoDataResponse = useSWR(mapMeta.geoDataFile, async (file) => {\r\n    return await d3.json(file);\r\n  });\r\n\r\n  const mapScale = useMemo(() => {\r\n    if (currentMap.stat === MAP_STATISTICS.ZONE) {\r\n      return d3.scaleOrdinal(\r\n        ['Red', 'Orange', 'Green'],\r\n        ['#d73027', '#fee08b', '#66bd63']\r\n      );\r\n    } else if (currentMap.stat === MAP_STATISTICS.HOTSPOTS) {\r\n      const {width} = svgRef.current.getBoundingClientRect();\r\n      return d3\r\n        .scaleSqrt([0, statistic[mapOption].max], [0, width / 10])\r\n        .clamp(true);\r\n    } else {\r\n      return d3\r\n        .scaleSequential([0, Math.max(1, statistic[mapOption].max)], (t) =>\r\n          colorInterpolator(mapOption, t)\r\n        )\r\n        .clamp(true);\r\n    }\r\n  }, [currentMap.stat, statistic, mapOption]);\r\n\r\n  useEffect(() => {\r\n    if (!geoDataResponse.data) return;\r\n    const geoData = geoDataResponse.data;\r\n\r\n    const topology = topojson.feature(\r\n      geoData,\r\n      geoData.objects[mapMeta.graphObjectStates || mapMeta.graphObjectDistricts]\r\n    );\r\n\r\n    const svg = d3.select(svgRef.current);\r\n\r\n    if (!svg.attr('viewBox')) {\r\n      const {\r\n        width: widthDefault,\r\n        height: heightDefault,\r\n      } = svgRef.current.getBoundingClientRect();\r\n      const projection = isCountryLoaded\r\n        ? d3.geoMercator().fitWidth(widthDefault, topology)\r\n        : d3.geoMercator().fitSize([widthDefault, heightDefault], topology);\r\n      const path = d3.geoPath(projection);\r\n      const bBox = path.bounds(topology);\r\n      const [width, height] = [+bBox[1][0], bBox[1][1]];\r\n      svg.attr('viewBox', `0 0 ${width} ${height}`);\r\n    }\r\n    const bBox = svg.attr('viewBox').split(' ');\r\n    const [width, height] = [+bBox[2], +bBox[3]];\r\n\r\n    const projection = d3.geoMercator().fitSize([width, height], topology);\r\n    const path = d3.geoPath(projection);\r\n\r\n    // Add id to each feature\r\n    let features =\r\n      currentMap.stat !== MAP_STATISTICS.HOTSPOTS\r\n        ? currentMap.view === MAP_VIEWS.STATES\r\n          ? topojson.feature(\r\n              geoData,\r\n              geoData.objects[mapMeta.graphObjectStates]\r\n            ).features\r\n          : topojson.feature(\r\n              geoData,\r\n              geoData.objects[mapMeta.graphObjectDistricts]\r\n            ).features\r\n        : [\r\n            ...topojson.feature(\r\n              geoData,\r\n              geoData.objects[mapMeta.graphObjectStates]\r\n            ).features,\r\n            ...topojson.feature(\r\n              geoData,\r\n              geoData.objects[mapMeta.graphObjectDistricts]\r\n            ).features,\r\n          ];\r\n\r\n    features = features.map((f) => {\r\n      const district = f.properties.district;\r\n      const state = f.properties.st_nm;\r\n      const obj = Object.assign({}, f);\r\n      obj.id = `${currentMap.name}-${state}${district ? '-' + district : ''}`;\r\n      return obj;\r\n    });\r\n\r\n    /* Draw map */\r\n    const t = d3.transition().duration(500);\r\n    let onceTouchedRegion = null;\r\n    const regionSelection = svg\r\n      .select('.regions')\r\n      .selectAll('path')\r\n      .data(\r\n        currentMap.stat !== MAP_STATISTICS.HOTSPOTS ? features : [],\r\n        (d) => d.id\r\n      )\r\n      .join((enter) => {\r\n        const sel = enter\r\n          .append('path')\r\n          .attr('d', path)\r\n          .attr('stroke-width', 2)\r\n          .attr('stroke-opacity', 0)\r\n          .style('cursor', 'pointer')\r\n          .on('mouseenter', (d) => {\r\n            const region = {state: d.properties.st_nm};\r\n            if (d.properties.district) region.district = d.properties.district;\r\n            setRegionHighlighted(region);\r\n          })\r\n          .on('mouseleave', (d) => {\r\n            if (onceTouchedRegion === d) onceTouchedRegion = null;\r\n          })\r\n          .on('touchstart', (d) => {\r\n            if (onceTouchedRegion === d) onceTouchedRegion = null;\r\n            else onceTouchedRegion = d;\r\n          })\r\n          .on('click', (d) => {\r\n            d3.event.stopPropagation();\r\n            if (onceTouchedRegion || mapMeta.mapType === MAP_TYPES.STATE)\r\n              return;\r\n            // Disable pointer events till the new map is rendered\r\n            svg.attr('pointer-events', 'none');\r\n            svg\r\n              .select('.regions')\r\n              .selectAll('path')\r\n              .attr('pointer-events', 'none');\r\n            // Switch map\r\n            changeMap(d.properties.st_nm);\r\n          });\r\n        sel.append('title');\r\n        return sel;\r\n      })\r\n      .attr('pointer-events', 'none');\r\n\r\n    regionSelection\r\n      .transition(t)\r\n      .attr('fill', (d) => {\r\n        let n;\r\n        if (currentMap.stat === MAP_STATISTICS.ZONE) {\r\n          const state = d.properties.st_nm;\r\n          const district = d.properties.district;\r\n          n =\r\n            mapData[state] && mapData[state][district]\r\n              ? mapData[state][district]\r\n              : 0;\r\n        } else {\r\n          const state = d.properties.st_nm;\r\n          const district = d.properties.district;\r\n          if (district)\r\n            n =\r\n              mapData[state] &&\r\n              mapData[state][district] &&\r\n              mapData[state][district][mapOption]\r\n                ? mapData[state][district][mapOption]\r\n                : 0;\r\n          else\r\n            n =\r\n              mapData[state] && mapData[state][mapOption]\r\n                ? mapData[state][mapOption]\r\n                : 0;\r\n        }\r\n        const color = n === 0 ? '#ffffff00' : mapScale(n);\r\n        return color;\r\n      })\r\n      .attr(\r\n        'stroke',\r\n        currentMap.stat === MAP_STATISTICS.ZONE\r\n          ? '#343a40'\r\n          : caseColor(mapOption)\r\n      )\r\n      .on('end', function () {\r\n        d3.select(this).attr('pointer-events', 'all');\r\n      });\r\n\r\n    regionSelection.select('title').text((d) => {\r\n      if (currentMap.stat === MAP_STATISTICS.TOTAL) {\r\n        const state = d.properties.st_nm;\r\n        const district = d.properties.district;\r\n        let n;\r\n        if (district)\r\n          n =\r\n            mapData[state] && mapData[state][district]\r\n              ? mapData[state][district][mapOption]\r\n              : 0;\r\n        else n = mapData[state] ? mapData[state][mapOption] : 0;\r\n        return (\r\n          Number(\r\n            parseFloat(\r\n              100 * (n / (statistic[mapOption].total || 0.001))\r\n            ).toFixed(2)\r\n          ).toString() +\r\n          '% from ' +\r\n          capitalizeAll(district ? district : state)\r\n        );\r\n      }\r\n    });\r\n\r\n    svg\r\n      .transition()\r\n      .duration(mapMeta.mapType === MAP_TYPES.STATE ? t.duration() / 2 : 0)\r\n      .on('end', () =>\r\n        svg.attr('class', currentMap.stat === MAP_STATISTICS.ZONE ? 'zone' : '')\r\n      );\r\n\r\n    /* ----------BUBBLE MAP----------*/\r\n    let circlesData = [];\r\n    if (currentMap.stat === MAP_STATISTICS.HOTSPOTS) {\r\n      circlesData = features\r\n        .map((d) => {\r\n          const district = d.properties.district;\r\n          const state = d.properties.st_nm;\r\n          if (district) {\r\n            d.value =\r\n              mapData[state] && mapData[state][district]\r\n                ? mapData[state][district][mapOption]\r\n                : 0;\r\n          } else {\r\n            d.value =\r\n              mapData[state] && mapData[state].Unknown\r\n                ? mapData[state].Unknown[mapOption]\r\n                : 0;\r\n          }\r\n          return d;\r\n        })\r\n        .sort((a, b) => b.value - a.value);\r\n    }\r\n\r\n    svg\r\n      .select('.circles')\r\n      .selectAll('circle')\r\n      .data(circlesData, (d) => d.id)\r\n      .join((enter) =>\r\n        enter\r\n          .append('circle')\r\n          .attr('transform', (d) => `translate(${path.centroid(d)})`)\r\n          .attr('fill-opacity', 0.5)\r\n          .style('cursor', 'pointer')\r\n          .attr('pointer-events', 'all')\r\n          .on('mouseenter', (d) => {\r\n            const region = {\r\n              state: d.properties.st_nm,\r\n              district: d.properties.district || 'Unknown',\r\n            };\r\n            setRegionHighlighted(region);\r\n          })\r\n          .on('click', () => {\r\n            d3.event.stopPropagation();\r\n          })\r\n      )\r\n      .transition(t)\r\n      .attr('fill', caseColor(mapOption, '70'))\r\n      .attr('stroke', caseColor(mapOption, '70'))\r\n      .attr('r', (d) => mapScale(d.value));\r\n    /* ------------------------------*/\r\n\r\n    let meshStates = [];\r\n    if (mapMeta.mapType === MAP_TYPES.COUNTRY) {\r\n      meshStates = [\r\n        topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectStates]),\r\n      ];\r\n      meshStates[0].id = mapMeta.graphObjectStates;\r\n    }\r\n    let meshDistricts = [];\r\n    if (currentMap.view === MAP_VIEWS.DISTRICTS) {\r\n      // Add id to mesh\r\n      meshDistricts = [\r\n        topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectDistricts]),\r\n      ];\r\n      meshDistricts[0].id = mapMeta.graphObjectDistricts;\r\n    }\r\n\r\n    svg\r\n      .select(\r\n        currentMap.view === MAP_VIEWS.STATES\r\n          ? '.state-borders'\r\n          : '.district-borders'\r\n      )\r\n      .attr('fill', 'none')\r\n      .attr('stroke-width', function () {\r\n        return mapMeta.mapType === MAP_TYPES.COUNTRY &&\r\n          currentMap.view === MAP_VIEWS.DISTRICTS\r\n          ? 0\r\n          : width / 250;\r\n      })\r\n      .selectAll('path')\r\n      .data(\r\n        currentMap.view === MAP_VIEWS.STATES ? meshStates : meshDistricts,\r\n        (d) => d.id\r\n      )\r\n      .join((enter) => enter.append('path').attr('d', path))\r\n      .transition(t)\r\n      .attr('stroke', () => {\r\n        if (currentMap.stat === MAP_STATISTICS.ZONE) {\r\n          return '#00000060';\r\n        } else {\r\n          return caseColor(mapOption, '30');\r\n        }\r\n      });\r\n\r\n    svg\r\n      .select(\r\n        currentMap.view === MAP_VIEWS.STATES\r\n          ? '.district-borders'\r\n          : '.state-borders'\r\n      )\r\n      .selectAll('path')\r\n      .data(\r\n        currentMap.view === MAP_VIEWS.STATES ? meshDistricts : meshStates,\r\n        (d) => d.id\r\n      )\r\n      .join((enter) =>\r\n        enter\r\n          .append('path')\r\n          .attr('d', path)\r\n          .attr('fill', 'none')\r\n          .attr('stroke-width', width / 250)\r\n      )\r\n      .transition(t)\r\n      .attr('stroke', '#343a4099');\r\n\r\n    // Reset on tapping outside map\r\n    svg.attr('pointer-events', 'auto').on('click', () => {\r\n      if (mapMeta.mapType !== MAP_TYPES.STATE) {\r\n        setRegionHighlighted({\r\n          state: 'Total',\r\n        });\r\n      }\r\n    });\r\n  }, [\r\n    geoDataResponse.data,\r\n    mapMeta,\r\n    currentMap,\r\n    setRegionHighlighted,\r\n    changeMap,\r\n    isCountryLoaded,\r\n    mapScale,\r\n    statistic,\r\n    mapData,\r\n    mapOption,\r\n  ]);\r\n\r\n  const highlightRegionInMap = useCallback(\r\n    (state, district) => {\r\n      const svg = d3.select(svgRef.current);\r\n      if (currentMap.stat === MAP_STATISTICS.HOTSPOTS) {\r\n        svg\r\n          .select('.circles')\r\n          .selectAll('circle')\r\n          .attr('fill-opacity', (d) => {\r\n            const highlighted =\r\n              district &&\r\n              state === d.properties.st_nm &&\r\n              (district === d.properties.district ||\r\n                (district === 'Unknown' && !d.properties.district));\r\n            return highlighted ? 1 : 0.5;\r\n          });\r\n      } else {\r\n        svg\r\n          .select('.regions')\r\n          .selectAll('path')\r\n          .each(function (d) {\r\n            const highlighted =\r\n              district === d.properties?.district &&\r\n              state === d.properties.st_nm;\r\n            if (highlighted) this.parentNode.appendChild(this);\r\n            d3.select(this).attr('stroke-opacity', highlighted ? 1 : 0);\r\n          });\r\n      }\r\n    },\r\n    [currentMap.stat]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!geoDataResponse.data) return;\r\n    highlightRegionInMap(regionHighlighted.state, regionHighlighted.district);\r\n  }, [\r\n    geoDataResponse.data,\r\n    highlightRegionInMap,\r\n    regionHighlighted.state,\r\n    regionHighlighted.district,\r\n    mapOption,\r\n  ]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '2.5s'}}>\r\n        <svg id=\"chart\" preserveAspectRatio=\"xMidYMid meet\" ref={svgRef}>\r\n          <g className=\"regions\" />\r\n          <g className=\"state-borders\" />\r\n          {currentMap.view === MAP_VIEWS.DISTRICTS && (\r\n            <g className=\"district-borders\" />\r\n          )}\r\n          {currentMap.stat === MAP_STATISTICS.HOTSPOTS && (\r\n            <g className=\"circles\" />\r\n          )}\r\n        </svg>\r\n        {mapMeta.mapType === MAP_TYPES.STATE &&\r\n        mapData[currentMap.name]?.Unknown &&\r\n        mapData[currentMap.name]?.Unknown[mapOption] ? (\r\n          <div className=\"disclaimer\">\r\n            <Icon.AlertCircle />\r\n            {t('District-wise {{mapOption}} numbers are under reconciliation', {\r\n              mapOption: t(mapOption),\r\n            })}\r\n          </div>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n\r\n      {mapScale && (\r\n        <MapLegend\r\n          mapScale={mapScale}\r\n          statistic={statistic}\r\n          mapStatistic={currentMap.stat}\r\n          mapOption={mapOption}\r\n        />\r\n      )}\r\n\r\n      <svg style={{position: 'absolute', height: 0}}>\r\n        <defs>\r\n          <filter id=\"balance-color\" colorInterpolationFilters=\"sRGB\">\r\n            <feColorMatrix\r\n              type=\"matrix\"\r\n              values=\"0.91372549  0           0            0  0.08627451\r\n                      0           0.91372549  0            0  0.08627451\r\n                      0           0           0.854901961  0  0.145098039\r\n                      0           0           0            1  0\"\r\n            />\r\n          </filter>\r\n        </defs>\r\n      </svg>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ChoroplethMap;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\src\\\\components\\\\home.js\";\nimport Footer from './footer';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport Minigraph from './minigraph';\nimport Search from './search';\nimport Table from './table';\nimport TimeSeriesExplorer from './timeseriesexplorer';\nimport Updates from './updates';\nimport { STATE_CODES_REVERSE } from '../constants';\nimport { formatDate, formatDateAbsolute, mergeTimeseries, preprocessTimeseries, parseStateTimeseries, parseStateTestData, parseStateTestTimeseries, parseTotalTestTimeseries, parseDistrictZones } from '../utils/commonfunctions';\nimport axios from 'axios';\nimport React, { useState, useCallback, useMemo } from 'react';\nimport * as Icon from 'react-feather';\nimport { Helmet } from 'react-helmet';\nimport { useEffectOnce, useLocalStorage } from 'react-use';\n\nfunction Home(props) {\n  const [states, setStates] = useState(null);\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState(null);\n  const [districtZones, setDistrictZones] = useState(null);\n  const [stateTestData, setStateTestData] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [timeseries, setTimeseries] = useState(null);\n  const [fetched, setFetched] = useState(false);\n  const [regionHighlighted, setRegionHighlighted] = useState({\n    state: 'Total'\n  });\n  const [showUpdates, setShowUpdates] = useState(false);\n  const [anchor, setAnchor] = useState(null);\n  const [mapOption, setMapOption] = useState('confirmed');\n  const [lastViewedLog, setLastViewedLog] = useLocalStorage('lastViewedLog', null);\n  const [newUpdate, setNewUpdate] = useLocalStorage('newUpdate', false);\n  const Bell = useMemo(() => /*#__PURE__*/React.createElement(Icon.Bell, {\n    onClick: () => {\n      setShowUpdates(!showUpdates);\n      setNewUpdate(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), [setNewUpdate, showUpdates]);\n  const BellOff = useMemo(() => /*#__PURE__*/React.createElement(Icon.BellOff, {\n    onClick: () => {\n      setShowUpdates(!showUpdates);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), [showUpdates]);\n  useEffectOnce(() => {\n    getStates();\n  });\n  useEffectOnce(() => {\n    axios.get('https://api.covid19india.org/updatelog/log.json').then(response => {\n      const lastTimestamp = response.data.slice().reverse()[0].timestamp.toString();\n\n      if (lastTimestamp !== lastViewedLog) {\n        setNewUpdate(true);\n        setLastViewedLog(lastTimestamp);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  });\n\n  const getStates = async () => {\n    try {\n      const [{\n        data: statesDailyResponse\n      }, {\n        data: zonesResponse\n      }] = await Promise.all([axios.get('https://api.covid19india.org/states_daily.json'), axios.get('https://api.covid19india.org/zones.json')]);\n      const [{\n        data\n      }, {\n        data: stateDistrictWiseResponse\n      }, {\n        data: stateTestData\n      }] = await Promise.all([axios.get('https://api.covid19india.org/data.json'), axios.get('https://api.covid19india.org/state_district_wise.json'), axios.get('https://api.covid19india.org/state_test_data.json')]);\n      setStates(data.statewise);\n      setDistrictZones(parseDistrictZones(zonesResponse.zones));\n      const ts = parseStateTimeseries(statesDailyResponse);\n      ts['TT'] = preprocessTimeseries(data.cases_time_series); // Testing data timeseries\n\n      const testTs = parseStateTestTimeseries(stateTestData.states_tested_data);\n      testTs['TT'] = parseTotalTestTimeseries(data.tested); // Merge\n\n      const tsMerged = mergeTimeseries(ts, testTs);\n      setTimeseries(tsMerged);\n      setLastUpdated(data.statewise[0].lastupdatedtime);\n      const testData = parseStateTestData(stateTestData.states_tested_data);\n      const totalTest = data.tested[data.tested.length - 1];\n      testData['Total'] = {\n        source: totalTest.source,\n        totaltested: totalTest.totalsamplestested,\n        updatedon: totalTest.updatetimestamp.split(' ')[0]\n      };\n      setStateTestData(testData);\n      setStateDistrictWiseData(stateDistrictWiseResponse);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onHighlightState = useCallback(state => {\n    if (!state) return setRegionHighlighted(null);\n    setRegionHighlighted({\n      state: state.state\n    });\n  }, []);\n  const onHighlightDistrict = useCallback((district, state) => {\n    if (!state && !district) return setRegionHighlighted(null);\n    setRegionHighlighted({\n      district,\n      state: state.state\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, \"Coronavirus Outbreak in India - covid19india.org\"), /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"title\",\n    content: \"Coronavirus Outbreak in India: Latest Map and Case Count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header fadeInUp\",\n    style: {\n      animationDelay: '1s'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, fetched && /*#__PURE__*/React.createElement(Search, {\n    districtZones: districtZones,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, isNaN(Date.parse(formatDate(lastUpdated))) ? '' : `${formatDateAbsolute(lastUpdated)} IST`), fetched && !showUpdates && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bell-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, fetched && Bell, newUpdate && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"indicator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 33\n    }\n  })), fetched && showUpdates && BellOff)), showUpdates && /*#__PURE__*/React.createElement(Updates, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 27\n    }\n  }), states && /*#__PURE__*/React.createElement(Level, {\n    data: states[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 22\n    }\n  }), timeseries && /*#__PURE__*/React.createElement(Minigraph, {\n    timeseries: timeseries['TT'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 26\n    }\n  }), stateDistrictWiseData && /*#__PURE__*/React.createElement(Table, {\n    states: states,\n    summary: false,\n    districts: stateDistrictWiseData,\n    zones: districtZones,\n    regionHighlighted: regionHighlighted,\n    setRegionHighlighted: setRegionHighlighted,\n    onHighlightState: onHighlightState,\n    onHighlightDistrict: onHighlightDistrict,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, fetched && /*#__PURE__*/React.createElement(MapExplorer, {\n    mapName: 'India',\n    states: states,\n    districts: stateDistrictWiseData,\n    zones: districtZones,\n    stateTestData: stateTestData,\n    regionHighlighted: regionHighlighted,\n    setRegionHighlighted: setRegionHighlighted,\n    anchor: anchor,\n    setAnchor: setAnchor,\n    mapOption: mapOption,\n    setMapOption: setMapOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }), timeseries && /*#__PURE__*/React.createElement(TimeSeriesExplorer, {\n    timeseries: timeseries[STATE_CODES_REVERSE[regionHighlighted === null || regionHighlighted === void 0 ? void 0 : regionHighlighted.state] || 'TT'],\n    activeStateCode: STATE_CODES_REVERSE[regionHighlighted === null || regionHighlighted === void 0 ? void 0 : regionHighlighted.state] || 'TT',\n    onHighlightState: onHighlightState,\n    states: states,\n    anchor: anchor,\n    setAnchor: setAnchor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  })))), fetched && /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 19\n    }\n  }));\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/src/components/home.js"],"names":["Footer","Level","MapExplorer","Minigraph","Search","Table","TimeSeriesExplorer","Updates","STATE_CODES_REVERSE","formatDate","formatDateAbsolute","mergeTimeseries","preprocessTimeseries","parseStateTimeseries","parseStateTestData","parseStateTestTimeseries","parseTotalTestTimeseries","parseDistrictZones","axios","React","useState","useCallback","useMemo","Icon","Helmet","useEffectOnce","useLocalStorage","Home","props","states","setStates","stateDistrictWiseData","setStateDistrictWiseData","districtZones","setDistrictZones","stateTestData","setStateTestData","lastUpdated","setLastUpdated","timeseries","setTimeseries","fetched","setFetched","regionHighlighted","setRegionHighlighted","state","showUpdates","setShowUpdates","anchor","setAnchor","mapOption","setMapOption","lastViewedLog","setLastViewedLog","newUpdate","setNewUpdate","Bell","BellOff","getStates","get","then","response","lastTimestamp","data","slice","reverse","timestamp","toString","catch","err","console","log","statesDailyResponse","zonesResponse","Promise","all","stateDistrictWiseResponse","statewise","zones","ts","cases_time_series","testTs","states_tested_data","tested","tsMerged","lastupdatedtime","testData","totalTest","length","source","totaltested","totalsamplestested","updatedon","updatetimestamp","split","onHighlightState","onHighlightDistrict","district","animationDelay","isNaN","Date","parse"],"mappings":"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","sourcesContent":["import Footer from './footer';\r\nimport Level from './level';\r\nimport MapExplorer from './mapexplorer';\r\nimport Minigraph from './minigraph';\r\nimport Search from './search';\r\nimport Table from './table';\r\nimport TimeSeriesExplorer from './timeseriesexplorer';\r\nimport Updates from './updates';\r\n\r\nimport {STATE_CODES_REVERSE} from '../constants';\r\nimport {\r\n  formatDate,\r\n  formatDateAbsolute,\r\n  mergeTimeseries,\r\n  preprocessTimeseries,\r\n  parseStateTimeseries,\r\n  parseStateTestData,\r\n  parseStateTestTimeseries,\r\n  parseTotalTestTimeseries,\r\n  parseDistrictZones,\r\n} from '../utils/commonfunctions';\r\n\r\nimport axios from 'axios';\r\nimport React, {useState, useCallback, useMemo} from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport {Helmet} from 'react-helmet';\r\nimport {useEffectOnce, useLocalStorage} from 'react-use';\r\nfunction Home(props) {\r\n  const [states, setStates] = useState(null);\r\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState(null);\r\n  const [districtZones, setDistrictZones] = useState(null);\r\n  const [stateTestData, setStateTestData] = useState(null);\r\n  const [lastUpdated, setLastUpdated] = useState('');\r\n  const [timeseries, setTimeseries] = useState(null);\r\n  const [fetched, setFetched] = useState(false);\r\n  const [regionHighlighted, setRegionHighlighted] = useState({\r\n    state: 'Total',\r\n  });\r\n  const [showUpdates, setShowUpdates] = useState(false);\r\n  const [anchor, setAnchor] = useState(null);\r\n  const [mapOption, setMapOption] = useState('confirmed');\r\n\r\n  const [lastViewedLog, setLastViewedLog] = useLocalStorage(\r\n    'lastViewedLog',\r\n    null\r\n  );\r\n  const [newUpdate, setNewUpdate] = useLocalStorage('newUpdate', false);\r\n\r\n  const Bell = useMemo(\r\n    () => (\r\n      <Icon.Bell\r\n        onClick={() => {\r\n          setShowUpdates(!showUpdates);\r\n          setNewUpdate(false);\r\n        }}\r\n      />\r\n    ),\r\n    [setNewUpdate, showUpdates]\r\n  );\r\n\r\n  const BellOff = useMemo(\r\n    () => (\r\n      <Icon.BellOff\r\n        onClick={() => {\r\n          setShowUpdates(!showUpdates);\r\n        }}\r\n      />\r\n    ),\r\n    [showUpdates]\r\n  );\r\n\r\n  useEffectOnce(() => {\r\n    getStates();\r\n  });\r\n\r\n  useEffectOnce(() => {\r\n    axios\r\n      .get('https://api.covid19india.org/updatelog/log.json')\r\n      .then((response) => {\r\n        const lastTimestamp = response.data\r\n          .slice()\r\n          .reverse()[0]\r\n          .timestamp.toString();\r\n        if (lastTimestamp !== lastViewedLog) {\r\n          setNewUpdate(true);\r\n          setLastViewedLog(lastTimestamp);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  });\r\n\r\n  const getStates = async () => {\r\n    try {\r\n      const [\r\n        {data: statesDailyResponse},\r\n        {data: zonesResponse},\r\n      ] = await Promise.all([\r\n        axios.get('https://api.covid19india.org/states_daily.json'),\r\n        axios.get('https://api.covid19india.org/zones.json'),\r\n      ]);\r\n\r\n      const [\r\n        {data},\r\n        {data: stateDistrictWiseResponse},\r\n        {data: stateTestData},\r\n      ] = await Promise.all([\r\n        axios.get('https://api.covid19india.org/data.json'),\r\n        axios.get('https://api.covid19india.org/state_district_wise.json'),\r\n        axios.get('https://api.covid19india.org/state_test_data.json'),\r\n      ]);\r\n\r\n      setStates(data.statewise);\r\n      setDistrictZones(parseDistrictZones(zonesResponse.zones));\r\n\r\n      const ts = parseStateTimeseries(statesDailyResponse);\r\n      ts['TT'] = preprocessTimeseries(data.cases_time_series);\r\n      // Testing data timeseries\r\n      const testTs = parseStateTestTimeseries(stateTestData.states_tested_data);\r\n      testTs['TT'] = parseTotalTestTimeseries(data.tested);\r\n      // Merge\r\n      const tsMerged = mergeTimeseries(ts, testTs);\r\n      setTimeseries(tsMerged);\r\n\r\n      setLastUpdated(data.statewise[0].lastupdatedtime);\r\n\r\n      const testData = parseStateTestData(stateTestData.states_tested_data);\r\n      const totalTest = data.tested[data.tested.length - 1];\r\n      testData['Total'] = {\r\n        source: totalTest.source,\r\n        totaltested: totalTest.totalsamplestested,\r\n        updatedon: totalTest.updatetimestamp.split(' ')[0],\r\n      };\r\n      setStateTestData(testData);\r\n\r\n      setStateDistrictWiseData(stateDistrictWiseResponse);\r\n      setFetched(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const onHighlightState = useCallback((state) => {\r\n    if (!state) return setRegionHighlighted(null);\r\n    setRegionHighlighted({state: state.state});\r\n  }, []);\r\n\r\n  const onHighlightDistrict = useCallback((district, state) => {\r\n    if (!state && !district) return setRegionHighlighted(null);\r\n    setRegionHighlighted({district, state: state.state});\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"Home\">\r\n        <Helmet>\r\n          <title>Coronavirus Outbreak in India - covid19india.org</title>\r\n          <meta\r\n            name=\"title\"\r\n            content=\"Coronavirus Outbreak in India: Latest Map and Case Count\"\r\n          />\r\n        </Helmet>\r\n\r\n        <div className=\"home-left\">\r\n          <div className=\"header fadeInUp\" style={{animationDelay: '1s'}}>\r\n            {fetched && <Search districtZones={districtZones} />}\r\n\r\n            <div className=\"actions\">\r\n              <h5>\r\n                {isNaN(Date.parse(formatDate(lastUpdated)))\r\n                  ? ''\r\n                  : `${formatDateAbsolute(lastUpdated)} IST`}\r\n              </h5>\r\n              {fetched && !showUpdates && (\r\n                <div className=\"bell-icon\">\r\n                  {fetched && Bell}\r\n                  {newUpdate && <div className=\"indicator\"></div>}\r\n                </div>\r\n              )}\r\n              {fetched && showUpdates && BellOff}\r\n            </div>\r\n          </div>\r\n\r\n          {showUpdates && <Updates />}\r\n\r\n          {states && <Level data={states[0]} />}\r\n          {timeseries && <Minigraph timeseries={timeseries['TT']} />}\r\n          {stateDistrictWiseData && (\r\n            <Table\r\n              states={states}\r\n              summary={false}\r\n              districts={stateDistrictWiseData}\r\n              zones={districtZones}\r\n              regionHighlighted={regionHighlighted}\r\n              setRegionHighlighted={setRegionHighlighted}\r\n              onHighlightState={onHighlightState}\r\n              onHighlightDistrict={onHighlightDistrict}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"home-right\">\r\n          <React.Fragment>\r\n            {fetched && (\r\n              <MapExplorer\r\n                mapName={'India'}\r\n                states={states}\r\n                districts={stateDistrictWiseData}\r\n                zones={districtZones}\r\n                stateTestData={stateTestData}\r\n                regionHighlighted={regionHighlighted}\r\n                setRegionHighlighted={setRegionHighlighted}\r\n                anchor={anchor}\r\n                setAnchor={setAnchor}\r\n                mapOption={mapOption}\r\n                setMapOption={setMapOption}\r\n              />\r\n            )}\r\n\r\n            {timeseries && (\r\n              <TimeSeriesExplorer\r\n                timeseries={\r\n                  timeseries[\r\n                    STATE_CODES_REVERSE[regionHighlighted?.state] || 'TT'\r\n                  ]\r\n                }\r\n                activeStateCode={\r\n                  STATE_CODES_REVERSE[regionHighlighted?.state] || 'TT'\r\n                }\r\n                onHighlightState={onHighlightState}\r\n                states={states}\r\n                anchor={anchor}\r\n                setAnchor={setAnchor}\r\n              />\r\n            )}\r\n          </React.Fragment>\r\n        </div>\r\n      </div>\r\n      {fetched && <Footer />}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
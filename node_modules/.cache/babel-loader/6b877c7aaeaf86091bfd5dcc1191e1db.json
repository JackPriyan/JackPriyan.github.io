{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\src\\\\components\\\\Charts\\\\growthtrendchart.js\";\nimport { getStateName } from '../../utils/commonfunctions';\nimport { parse } from 'date-fns';\nimport React from 'react';\nimport { Line, defaults } from 'react-chartjs-2';\n\nfunction GrowthTrendChart(props) {\n  const dates = [];\n  defaults.global.elements.line.fill = false;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n  defaults.global.hover.intersect = false;\n\n  if (!props.data || props.data.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const statesData = new Map();\n  const statesDailyData = new Map();\n  props.data.forEach((data, index) => {\n    if (data.status !== 'Confirmed') {\n      return;\n    }\n\n    Object.keys(data).forEach(key => {\n      if (key === 'date') {\n        const date = parse(data.date, 'dd-MMM-yy', new Date());\n        dates.push(date);\n      }\n\n      if (key === 'status' || key === 'date') {\n        return;\n      }\n\n      const currentValue = data[key] !== '' ? parseInt(data[key]) : 0;\n\n      if (currentValue === 0 && !statesData.has(key)) {\n        return;\n      }\n\n      if (!statesData.has(key)) {\n        statesData.set(key, []);\n        statesDailyData.set(key, []);\n      }\n\n      const previousValue = statesData.get(key).length > 0 ? parseInt(statesData.get(key)[statesData.get(key).length - 1].x) : 0;\n      const stateData = statesDailyData.get(key);\n      let weekSum = 0;\n\n      for (let i = 1; i <= 7; ++i) {\n        const idx = stateData.length - i;\n\n        if (idx >= 0) {\n          weekSum += stateData[idx];\n        }\n      }\n\n      statesData.get(key).push({\n        x: previousValue + currentValue,\n        y: weekSum\n      });\n      statesDailyData.get(key).push(currentValue);\n    });\n  });\n  const sortedMap = new Map([...statesData.entries()].sort((a, b) => {\n    return a[1][a[1].length - 1].x < b[1][b[1].length - 1].x ? 1 : -1;\n  }));\n  const colors = ['#ff073a', '#28a745', '#342ead', '#7D5BA6', '#DD7596', '#16c8f0', '#f67575', '#2b580c', '#9D44B5', '#91132d', '#6D9DC5', '#2b580c', '#6c757d', '#f67575', '#d4f8e8'];\n  let index = 0;\n  const datasets = [];\n  sortedMap.forEach((data, key) => {\n    if (key === 'tt') {\n      return;\n    }\n\n    if (index >= 10) {\n      return;\n    }\n\n    datasets.push({\n      data: statesData.get(key),\n      label: getStateName(key),\n      order: index,\n      borderWidth: 1.0,\n      borderCapStyle: 'round',\n      borderColor: colors[index],\n      pointBackgroundColor: colors[index],\n      pointHoverRadius: 1.0\n    });\n    index++;\n  });\n  const dataset = {\n    datasets: datasets\n  };\n  const options = {\n    responsive: true,\n    events: ['click', 'mousemove', 'mouseout', 'touchstart', 'touchmove'],\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index',\n      backgroundColor: 'rgba(0, 0, 0, 0.9)',\n      borderColor: 'rgba(0, 0, 0, 0)',\n      bodyFontColor: 'white',\n      titleFontColor: 'white',\n      displayColors: true\n    },\n    elements: {\n      point: {\n        radius: 0\n      },\n      line: {\n        cubicInterpolationMode: 'monotone'\n      }\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20\n      }\n    },\n    scales: {\n      yAxes: [{\n        type: 'logarithmic',\n        ticks: {\n          beginAtZero: true,\n          min: 1,\n          max: 2000,\n          precision: 0,\n          callback: function (value, index, values) {\n            return Number(value.toString());\n          }\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'New Cases (since last 7 days)'\n        },\n        gridLines: {\n          color: 'rgba(0, 0, 0, 0)'\n        }\n      }],\n      xAxes: [{\n        type: 'logarithmic',\n        ticks: {\n          beginAtZero: true,\n          min: 0,\n          max: 2000,\n          precision: 0,\n          callback: function (value, index, values) {\n            return Number(value.toString());\n          }\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Total Cases'\n        },\n        gridLines: {\n          color: 'rgba(0, 0, 0, 0)'\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"charts-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: dataset,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default GrowthTrendChart;","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/src/components/Charts/growthtrendchart.js"],"names":["getStateName","parse","React","Line","defaults","GrowthTrendChart","props","dates","global","elements","line","fill","tooltips","intersect","mode","position","backgroundColor","displayColors","borderColor","borderWidth","titleFontColor","bodyFontColor","caretPadding","legend","display","hover","data","length","statesData","Map","statesDailyData","forEach","index","status","Object","keys","key","date","Date","push","currentValue","parseInt","has","set","previousValue","get","x","stateData","weekSum","i","idx","y","sortedMap","entries","sort","a","b","colors","datasets","label","order","borderCapStyle","pointBackgroundColor","pointHoverRadius","dataset","options","responsive","events","maintainAspectRatio","point","radius","cubicInterpolationMode","layout","padding","left","right","top","bottom","scales","yAxes","type","ticks","beginAtZero","min","max","precision","callback","value","values","Number","toString","scaleLabel","labelString","gridLines","color","xAxes","title"],"mappings":"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","sourcesContent":["import {getStateName} from '../../utils/commonfunctions';\r\n\r\nimport {parse} from 'date-fns';\r\nimport React from 'react';\r\nimport {Line, defaults} from 'react-chartjs-2';\r\n\r\nfunction GrowthTrendChart(props) {\r\n  const dates = [];\r\n\r\n  defaults.global.elements.line.fill = false;\r\n\r\n  defaults.global.tooltips.intersect = false;\r\n  defaults.global.tooltips.mode = 'nearest';\r\n  defaults.global.tooltips.position = 'average';\r\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\r\n  defaults.global.tooltips.displayColors = false;\r\n  defaults.global.tooltips.borderColor = '#c62828';\r\n  defaults.global.tooltips.borderWidth = 1;\r\n  defaults.global.tooltips.titleFontColor = '#000';\r\n  defaults.global.tooltips.bodyFontColor = '#000';\r\n  defaults.global.tooltips.caretPadding = 4;\r\n  defaults.global.tooltips.intersect = false;\r\n  defaults.global.tooltips.mode = 'nearest';\r\n  defaults.global.tooltips.position = 'nearest';\r\n\r\n  defaults.global.legend.display = true;\r\n  defaults.global.legend.position = 'bottom';\r\n\r\n  defaults.global.hover.intersect = false;\r\n\r\n  if (!props.data || props.data.length === 0) {\r\n    return <div></div>;\r\n  }\r\n\r\n  const statesData = new Map();\r\n  const statesDailyData = new Map();\r\n\r\n  props.data.forEach((data, index) => {\r\n    if (data.status !== 'Confirmed') {\r\n      return;\r\n    }\r\n\r\n    Object.keys(data).forEach((key) => {\r\n      if (key === 'date') {\r\n        const date = parse(data.date, 'dd-MMM-yy', new Date());\r\n        dates.push(date);\r\n      }\r\n\r\n      if (key === 'status' || key === 'date') {\r\n        return;\r\n      }\r\n\r\n      const currentValue = data[key] !== '' ? parseInt(data[key]) : 0;\r\n\r\n      if (currentValue === 0 && !statesData.has(key)) {\r\n        return;\r\n      }\r\n\r\n      if (!statesData.has(key)) {\r\n        statesData.set(key, []);\r\n        statesDailyData.set(key, []);\r\n      }\r\n      const previousValue =\r\n        statesData.get(key).length > 0\r\n          ? parseInt(statesData.get(key)[statesData.get(key).length - 1].x)\r\n          : 0;\r\n\r\n      const stateData = statesDailyData.get(key);\r\n      let weekSum = 0;\r\n      for (let i = 1; i <= 7; ++i) {\r\n        const idx = stateData.length - i;\r\n        if (idx >= 0) {\r\n          weekSum += stateData[idx];\r\n        }\r\n      }\r\n      statesData.get(key).push({x: previousValue + currentValue, y: weekSum});\r\n      statesDailyData.get(key).push(currentValue);\r\n    });\r\n  });\r\n\r\n  const sortedMap = new Map(\r\n    [...statesData.entries()].sort((a, b) => {\r\n      return a[1][a[1].length - 1].x < b[1][b[1].length - 1].x ? 1 : -1;\r\n    })\r\n  );\r\n\r\n  const colors = [\r\n    '#ff073a',\r\n    '#28a745',\r\n    '#342ead',\r\n    '#7D5BA6',\r\n    '#DD7596',\r\n    '#16c8f0',\r\n    '#f67575',\r\n    '#2b580c',\r\n    '#9D44B5',\r\n    '#91132d',\r\n    '#6D9DC5',\r\n    '#2b580c',\r\n    '#6c757d',\r\n    '#f67575',\r\n    '#d4f8e8',\r\n  ];\r\n\r\n  let index = 0;\r\n  const datasets = [];\r\n  sortedMap.forEach((data, key) => {\r\n    if (key === 'tt') {\r\n      return;\r\n    }\r\n\r\n    if (index >= 10) {\r\n      return;\r\n    }\r\n\r\n    datasets.push({\r\n      data: statesData.get(key),\r\n      label: getStateName(key),\r\n      order: index,\r\n      borderWidth: 1.0,\r\n      borderCapStyle: 'round',\r\n      borderColor: colors[index],\r\n      pointBackgroundColor: colors[index],\r\n      pointHoverRadius: 1.0,\r\n    });\r\n\r\n    index++;\r\n  });\r\n\r\n  const dataset = {\r\n    datasets: datasets,\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    events: ['click', 'mousemove', 'mouseout', 'touchstart', 'touchmove'],\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n      mode: 'index',\r\n      backgroundColor: 'rgba(0, 0, 0, 0.9)',\r\n      borderColor: 'rgba(0, 0, 0, 0)',\r\n      bodyFontColor: 'white',\r\n      titleFontColor: 'white',\r\n      displayColors: true,\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0,\r\n      },\r\n      line: {\r\n        cubicInterpolationMode: 'monotone',\r\n      },\r\n    },\r\n    layout: {\r\n      padding: {\r\n        left: 20,\r\n        right: 20,\r\n        top: 0,\r\n        bottom: 20,\r\n      },\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          type: 'logarithmic',\r\n          ticks: {\r\n            beginAtZero: true,\r\n            min: 1,\r\n            max: 2000,\r\n            precision: 0,\r\n            callback: function (value, index, values) {\r\n              return Number(value.toString());\r\n            },\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: 'New Cases (since last 7 days)',\r\n          },\r\n          gridLines: {\r\n            color: 'rgba(0, 0, 0, 0)',\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          type: 'logarithmic',\r\n          ticks: {\r\n            beginAtZero: true,\r\n            min: 0,\r\n            max: 2000,\r\n            precision: 0,\r\n            callback: function (value, index, values) {\r\n              return Number(value.toString());\r\n            },\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: 'Total Cases',\r\n          },\r\n          gridLines: {\r\n            color: 'rgba(0, 0, 0, 0)',\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"charts-header\">\r\n      <div className=\"chart-title\">{props.title}</div>\r\n      <div className=\"chart-content\">\r\n        <Line data={dataset} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GrowthTrendChart;\r\n"]},"metadata":{},"sourceType":"module"}
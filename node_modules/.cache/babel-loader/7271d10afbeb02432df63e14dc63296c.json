{"ast":null,"code":"import{defaultOptions,xAxisDefaults,yAxisDefaults,formatNumber}from'./chart-defaults';import{format,parse}from'date-fns';import deepmerge from'deepmerge';import React from'react';import{Bar,defaults}from'react-chartjs-2';function DailyConfirmedChart(props){var dates=[];var confirmed=[];var recovered=[];var deceased=[];if(!props.timeseries||props.timeseries.length===0){return/*#__PURE__*/React.createElement(\"div\",null);}props.timeseries.forEach(function(data,index){if(index>=31){var date=parse(data.date,'dd MMMM',new Date(2020,0,1));dates.push(format(date,'dd MMM'));confirmed.push(data.dailyconfirmed);recovered.push(data.dailyrecovered);deceased.push(data.dailydeceased);}});var barDataSet={labels:dates,datasets:[{data:recovered,label:'Recovered',backgroundColor:'#7ebf80'},{data:deceased,label:'Deceased',backgroundColor:'#6c757d'},{data:confirmed,label:'Confirmed',backgroundColor:'#ff6862'}]};var options=deepmerge(defaultOptions,{tooltips:{mode:'index'},legend:{display:true,reverse:true,labels:{usePointStyle:true,// Required to change pointstyle to 'rectRounded' from 'circle'\ngenerateLabels:function generateLabels(chart){var labels=defaults.global.legend.labels.generateLabels(chart);labels.forEach(function(label){label.pointStyle='rectRounded';});return labels;}}},scales:{xAxes:[deepmerge(xAxisDefaults,{stacked:true})],yAxes:[deepmerge(yAxisDefaults,{stacked:true,ticks:{callback:function callback(value){return formatNumber(value);}}})]}});return/*#__PURE__*/React.createElement(\"div\",{className:\"charts-header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"chart-title\"},props.title),/*#__PURE__*/React.createElement(\"div\",{className:\"chart-content\"},/*#__PURE__*/React.createElement(Bar,{data:barDataSet,options:options})));}export default DailyConfirmedChart;","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/src/components/Charts/dailyconfirmedchart.js"],"names":["defaultOptions","xAxisDefaults","yAxisDefaults","formatNumber","format","parse","deepmerge","React","Bar","defaults","DailyConfirmedChart","props","dates","confirmed","recovered","deceased","timeseries","length","forEach","data","index","date","Date","push","dailyconfirmed","dailyrecovered","dailydeceased","barDataSet","labels","datasets","label","backgroundColor","options","tooltips","mode","legend","display","reverse","usePointStyle","generateLabels","chart","global","pointStyle","scales","xAxes","stacked","yAxes","ticks","callback","value","title"],"mappings":"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","sourcesContent":["import {\r\n  defaultOptions,\r\n  xAxisDefaults,\r\n  yAxisDefaults,\r\n  formatNumber,\r\n} from './chart-defaults';\r\n\r\nimport {format, parse} from 'date-fns';\r\nimport deepmerge from 'deepmerge';\r\nimport React from 'react';\r\nimport {Bar, defaults} from 'react-chartjs-2';\r\n\r\nfunction DailyConfirmedChart(props) {\r\n  const dates = [];\r\n  const confirmed = [];\r\n  const recovered = [];\r\n  const deceased = [];\r\n\r\n  if (!props.timeseries || props.timeseries.length === 0) {\r\n    return <div></div>;\r\n  }\r\n\r\n  props.timeseries.forEach((data, index) => {\r\n    if (index >= 31) {\r\n      const date = parse(data.date, 'dd MMMM', new Date(2020, 0, 1));\r\n      dates.push(format(date, 'dd MMM'));\r\n      confirmed.push(data.dailyconfirmed);\r\n      recovered.push(data.dailyrecovered);\r\n      deceased.push(data.dailydeceased);\r\n    }\r\n  });\r\n\r\n  const barDataSet = {\r\n    labels: dates,\r\n    datasets: [\r\n      {\r\n        data: recovered,\r\n        label: 'Recovered',\r\n        backgroundColor: '#7ebf80',\r\n      },\r\n      {\r\n        data: deceased,\r\n        label: 'Deceased',\r\n        backgroundColor: '#6c757d',\r\n      },\r\n      {\r\n        data: confirmed,\r\n        label: 'Confirmed',\r\n        backgroundColor: '#ff6862',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = deepmerge(defaultOptions, {\r\n    tooltips: {\r\n      mode: 'index',\r\n    },\r\n    legend: {\r\n      display: true,\r\n      reverse: true,\r\n      labels: {\r\n        usePointStyle: true, // Required to change pointstyle to 'rectRounded' from 'circle'\r\n        generateLabels: (chart) => {\r\n          const labels = defaults.global.legend.labels.generateLabels(chart);\r\n          labels.forEach((label) => {\r\n            label.pointStyle = 'rectRounded';\r\n          });\r\n          return labels;\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        deepmerge(xAxisDefaults, {\r\n          stacked: true,\r\n        }),\r\n      ],\r\n      yAxes: [\r\n        deepmerge(yAxisDefaults, {\r\n          stacked: true,\r\n          ticks: {\r\n            callback: (value) => formatNumber(value),\r\n          },\r\n        }),\r\n      ],\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"charts-header\">\r\n      <div className=\"chart-title\">{props.title}</div>\r\n      <div className=\"chart-content\">\r\n        <Bar data={barDataSet} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DailyConfirmedChart;\r\n"]},"metadata":{},"sourceType":"module"}
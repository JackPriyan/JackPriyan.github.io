{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\src\\\\components\\\\maplegend.js\";\nimport { MAP_STATISTICS } from '../constants';\nimport { capitalizeAll, formatNumber } from '../utils/commonfunctions';\nimport { useResizeObserver } from '../utils/hooks';\nimport * as d3 from 'd3';\nimport React, { useEffect, useRef } from 'react';\n\nfunction MapLegend({\n  mapScale,\n  statistic,\n  mapStatistic,\n  mapOption\n}) {\n  const svgRef = useRef(null);\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    const {\n      width,\n      height\n    } = dimensions || wrapperRef.current.getBoundingClientRect();\n\n    if (mapStatistic === MAP_STATISTICS.ZONE) {\n      svg.call(() => legend({\n        svg: svg,\n        color: mapScale,\n        width: width,\n        height: height,\n        tickValues: [],\n        marginLeft: 2,\n        marginRight: 20,\n        ordinalWeights: Object.values(statistic)\n      }));\n    } else if (mapStatistic === MAP_STATISTICS.HOTSPOTS) {\n      const t = svg.transition().duration(500);\n      svg.select('.ramp').transition(t).attr('opacity', 0).attr('xlink:href', null);\n      svg.select('.bars').selectAll('rect').transition(t).attr('opacity', 0).remove();\n      svg.selectAll('.axis > *').remove();\n      const maxRadius = mapScale.domain()[1];\n      const legend = svg.select('.circles').attr('transform', `translate(48,40)`).attr('text-anchor', 'middle');\n      legend.selectAll('circle').data([maxRadius / 10, maxRadius * 2 / 5, maxRadius]).join('circle').attr('fill', 'none').attr('stroke', '#ccc').transition(t).attr('cy', d => -mapScale(d)).attr('r', mapScale);\n      legend.selectAll('text').data([maxRadius / 10, maxRadius * 2 / 5, maxRadius]).join('text').attr('dy', '1.3em').transition(t).attr('y', d => -2 * mapScale(d)).text(d3.format('.1s'));\n    } else {\n      svg.call(() => legend({\n        svg: svg,\n        color: mapScale,\n        title: capitalizeAll(mapOption) + (mapStatistic === MAP_STATISTICS.PER_MILLION ? ' cases per million' : ' cases'),\n        width: width,\n        height: height,\n        ticks: 5,\n        tickFormat: function (d, i, n) {\n          if (mapStatistic === MAP_STATISTICS.TOTAL && !Number.isInteger(d)) return;\n          if (i === n.length - 1) return formatNumber(d) + '+';\n          return formatNumber(d);\n        },\n        marginLeft: 2,\n        marginRight: 20\n      }));\n    }\n\n    svg.attr('class', mapStatistic === MAP_STATISTICS.ZONE ? 'zone' : '');\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svg-parent maplegend fadeInUp\",\n    style: {\n      animationDelay: '2.5s',\n      height: 50\n    },\n    ref: wrapperRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    id: \"legend\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    ref: svgRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"image\", {\n    className: \"ramp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"bars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"circles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"text\", {\n    className: \"axistext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"canvas\", {\n    className: \"color-scale\",\n    style: {\n      position: 'absolute',\n      height: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default MapLegend;\n\nfunction legend({\n  svg,\n  color,\n  title,\n  tickSize = 6,\n  width = 320,\n  height = 44 + tickSize,\n  marginTop = 18,\n  marginRight = 0,\n  marginBottom = 16 + tickSize,\n  marginLeft = 0,\n  ticks = width / 64,\n  tickFormat,\n  tickValues,\n  ordinalWeights\n} = {}) {\n  svg.selectAll('.circles > *').remove();\n  const t = svg.transition().duration(500);\n\n  let tickAdjust = g => {\n    const ticks = g.selectAll('.tick line');\n    ticks.attr('y1', marginTop + marginBottom - height); // d3.select(ticks.nodes()[ticks.size() - 1]).remove();\n  };\n\n  let x; // Continuous\n\n  if (color.interpolate) {\n    const n = Math.min(color.domain().length, color.range().length);\n    x = color.copy().rangeRound(d3.quantize(d3.interpolate(marginLeft, width - marginRight), n));\n    svg.select('.ramp').attr('class', 'ramp').attr('x', marginLeft).attr('y', marginTop).attr('width', width - marginLeft - marginRight).attr('height', height - marginTop - marginBottom).attr('preserveAspectRatio', 'none').attr('xlink:href', ramp(color.copy().domain(d3.quantize(d3.interpolate(0, 1), n))).toDataURL());\n  } // Sequential\n  else if (color.interpolator) {\n      svg.select('.bars').selectAll('rect').transition(t).attr('opacity', 0).remove();\n      x = Object.assign(color.copy().interpolator(d3.interpolateRound(marginLeft, width - marginRight)), {\n        range() {\n          return [marginLeft, width - marginRight];\n        }\n\n      });\n      svg.select('.ramp').attr('class', 'ramp').attr('x', marginLeft).attr('y', marginTop).attr('width', width - marginLeft - marginRight).attr('height', height - marginTop - marginBottom).attr('preserveAspectRatio', 'none').attr('xlink:href', ramp(color.interpolator()).toDataURL()).transition(t).attr('opacity', 1); // scaleSequentialQuantile doesnâ€™t implement ticks or tickFormat.\n\n      if (!x.ticks) {\n        if (tickValues === undefined) {\n          const n = Math.round(ticks + 1);\n          tickValues = d3.range(n).map(i => d3.quantile(color.domain(), i / (n - 1)));\n        }\n\n        if (typeof tickFormat !== 'function') {\n          tickFormat = d3.format(tickFormat === undefined ? ',f' : tickFormat);\n        }\n      }\n    } // Threshold\n    else if (color.invertExtent) {\n        const thresholds = color.thresholds ? color.thresholds() // scaleQuantize\n        : color.quantiles ? color.quantiles() // scaleQuantile\n        : color.domain(); // scaleThreshold\n\n        const thresholdFormat = tickFormat === undefined ? d => d : typeof tickFormat === 'string' ? d3.format(tickFormat) : tickFormat;\n        x = d3.scaleLinear().domain([-1, color.range().length - 1]).rangeRound([marginLeft, width - marginRight]);\n        svg.append('g').selectAll('rect').data(color.range()).join('rect').attr('x', (d, i) => x(i - 1)).attr('y', marginTop).attr('width', (d, i) => x(i) - x(i - 1)).attr('height', height - marginTop - marginBottom).attr('fill', d => d);\n        tickValues = d3.range(-1, thresholds.length);\n\n        tickFormat = i => {\n          if (i === -1) return thresholdFormat(1);else if (i === thresholds.length - 1) return;else if (i === thresholds.length - 2) return thresholdFormat(thresholds[i] + '+', i);\n          return thresholdFormat(thresholds[i], i);\n        };\n      } // Ordinal\n      else {\n          svg.select('.ramp').transition(t).attr('opacity', 0).attr('xlink:href', null);\n\n          if (!ordinalWeights) {\n            x = d3.scaleBand().domain(color.domain()).rangeRound([marginLeft, width - marginRight]);\n            svg.selectAll('rect').data(color.domain()).join('rect').attr('x', x).attr('y', marginTop).attr('width', Math.max(0, x.bandwidth() - 1)).attr('height', height - marginTop - marginBottom).attr('fill', color);\n          } else {\n            const widthScale = d3.scaleLinear().domain([0, ordinalWeights.reduce((a, b) => a + b)]).rangeRound([0, width - marginLeft - marginRight]);\n            const xPos = ordinalWeights.map((w, i) => ordinalWeights.slice(0, i).reduce((acc, w) => acc + widthScale(w), marginLeft));\n            x = d3.scaleOrdinal().domain(color.domain()).range(xPos);\n            svg.select('.bars').selectAll('rect').data(color.domain()).join(enter => enter.append('rect').attr('x', x).attr('width', (d, i) => widthScale(ordinalWeights[i]))).attr('y', marginTop).attr('height', height - marginTop - marginBottom).attr('fill', color).transition(t).attr('x', x).attr('width', (d, i) => widthScale(ordinalWeights[i])).attr('opacity', 1);\n          }\n\n          tickAdjust = () => {};\n        }\n\n  svg.select('.axis').attr('transform', `translate(0,${height - marginBottom})`).transition(t).attr('class', 'axis').call(d3.axisBottom(x).ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined).tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined).tickSize(tickSize).tickValues(tickValues)).on('start', () => {\n    svg.call(tickAdjust).call(svg => svg.select('.domain').remove());\n  }).call(g => g.select('.axistext').attr('class', 'axistext').attr('x', marginLeft).attr('y', marginTop + marginBottom - height - 6).attr('fill', 'currentColor').attr('text-anchor', 'start').attr('font-weight', 'bold').text(title));\n  return svg.node();\n}\n\nfunction ramp(color, n = 256) {\n  // const canvas = document.createElement('canvas');\n  const canvas = d3.select('.color-scale').node();\n  const context = (canvas.width = n, canvas.height = 1, canvas).getContext('2d');\n\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(i, 0, 1, 1);\n  }\n\n  return canvas;\n}","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/src/components/maplegend.js"],"names":["MAP_STATISTICS","capitalizeAll","formatNumber","useResizeObserver","d3","React","useEffect","useRef","MapLegend","mapScale","statistic","mapStatistic","mapOption","svgRef","wrapperRef","dimensions","svg","select","current","width","height","getBoundingClientRect","ZONE","call","legend","color","tickValues","marginLeft","marginRight","ordinalWeights","Object","values","HOTSPOTS","t","transition","duration","attr","selectAll","remove","maxRadius","domain","data","join","d","text","format","title","PER_MILLION","ticks","tickFormat","i","n","TOTAL","Number","isInteger","length","animationDelay","position","tickSize","marginTop","marginBottom","tickAdjust","g","x","interpolate","Math","min","range","copy","rangeRound","quantize","ramp","toDataURL","interpolator","assign","interpolateRound","undefined","round","map","quantile","invertExtent","thresholds","quantiles","thresholdFormat","scaleLinear","append","scaleBand","max","bandwidth","widthScale","reduce","a","b","xPos","w","slice","acc","scaleOrdinal","enter","axisBottom","on","node","canvas","context","getContext","fillStyle","fillRect"],"mappings":"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","sourcesContent":["import {MAP_STATISTICS} from '../constants';\r\nimport {capitalizeAll, formatNumber} from '../utils/commonfunctions';\r\nimport {useResizeObserver} from '../utils/hooks';\r\n\r\nimport * as d3 from 'd3';\r\nimport React, {useEffect, useRef} from 'react';\r\n\r\nfunction MapLegend({mapScale, statistic, mapStatistic, mapOption}) {\r\n  const svgRef = useRef(null);\r\n  const wrapperRef = useRef();\r\n  const dimensions = useResizeObserver(wrapperRef);\r\n\r\n  useEffect(() => {\r\n    const svg = d3.select(svgRef.current);\r\n    const {width, height} =\r\n      dimensions || wrapperRef.current.getBoundingClientRect();\r\n\r\n    if (mapStatistic === MAP_STATISTICS.ZONE) {\r\n      svg.call(() =>\r\n        legend({\r\n          svg: svg,\r\n          color: mapScale,\r\n          width: width,\r\n          height: height,\r\n          tickValues: [],\r\n          marginLeft: 2,\r\n          marginRight: 20,\r\n          ordinalWeights: Object.values(statistic),\r\n        })\r\n      );\r\n    } else if (mapStatistic === MAP_STATISTICS.HOTSPOTS) {\r\n      const t = svg.transition().duration(500);\r\n      svg\r\n        .select('.ramp')\r\n        .transition(t)\r\n        .attr('opacity', 0)\r\n        .attr('xlink:href', null);\r\n\r\n      svg\r\n        .select('.bars')\r\n        .selectAll('rect')\r\n        .transition(t)\r\n        .attr('opacity', 0)\r\n        .remove();\r\n      svg.selectAll('.axis > *').remove();\r\n\r\n      const maxRadius = mapScale.domain()[1];\r\n\r\n      const legend = svg\r\n        .select('.circles')\r\n        .attr('transform', `translate(48,40)`)\r\n        .attr('text-anchor', 'middle');\r\n\r\n      legend\r\n        .selectAll('circle')\r\n        .data([maxRadius / 10, (maxRadius * 2) / 5, maxRadius])\r\n        .join('circle')\r\n        .attr('fill', 'none')\r\n        .attr('stroke', '#ccc')\r\n        .transition(t)\r\n        .attr('cy', (d) => -mapScale(d))\r\n        .attr('r', mapScale);\r\n\r\n      legend\r\n        .selectAll('text')\r\n        .data([maxRadius / 10, (maxRadius * 2) / 5, maxRadius])\r\n        .join('text')\r\n        .attr('dy', '1.3em')\r\n        .transition(t)\r\n        .attr('y', (d) => -2 * mapScale(d))\r\n        .text(d3.format('.1s'));\r\n    } else {\r\n      svg.call(() =>\r\n        legend({\r\n          svg: svg,\r\n          color: mapScale,\r\n          title:\r\n            capitalizeAll(mapOption) +\r\n            (mapStatistic === MAP_STATISTICS.PER_MILLION\r\n              ? ' cases per million'\r\n              : ' cases'),\r\n          width: width,\r\n          height: height,\r\n          ticks: 5,\r\n          tickFormat: function (d, i, n) {\r\n            if (mapStatistic === MAP_STATISTICS.TOTAL && !Number.isInteger(d))\r\n              return;\r\n            if (i === n.length - 1) return formatNumber(d) + '+';\r\n            return formatNumber(d);\r\n          },\r\n          marginLeft: 2,\r\n          marginRight: 20,\r\n        })\r\n      );\r\n    }\r\n    svg.attr('class', mapStatistic === MAP_STATISTICS.ZONE ? 'zone' : '');\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className=\"svg-parent maplegend fadeInUp\"\r\n      style={{animationDelay: '2.5s', height: 50}}\r\n      ref={wrapperRef}\r\n    >\r\n      <svg id=\"legend\" preserveAspectRatio=\"xMidYMid meet\" ref={svgRef}>\r\n        <image className=\"ramp\" />\r\n        <g className=\"bars\"></g>\r\n        <g className=\"circles\"></g>\r\n        <g className=\"axis\">\r\n          <text className=\"axistext\" />\r\n        </g>\r\n      </svg>\r\n      <canvas\r\n        className=\"color-scale\"\r\n        style={{position: 'absolute', height: 0}}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapLegend;\r\n\r\nfunction legend({\r\n  svg,\r\n  color,\r\n  title,\r\n  tickSize = 6,\r\n  width = 320,\r\n  height = 44 + tickSize,\r\n  marginTop = 18,\r\n  marginRight = 0,\r\n  marginBottom = 16 + tickSize,\r\n  marginLeft = 0,\r\n  ticks = width / 64,\r\n  tickFormat,\r\n  tickValues,\r\n  ordinalWeights,\r\n} = {}) {\r\n  svg.selectAll('.circles > *').remove();\r\n  const t = svg.transition().duration(500);\r\n\r\n  let tickAdjust = (g) => {\r\n    const ticks = g.selectAll('.tick line');\r\n    ticks.attr('y1', marginTop + marginBottom - height);\r\n    // d3.select(ticks.nodes()[ticks.size() - 1]).remove();\r\n  };\r\n  let x;\r\n\r\n  // Continuous\r\n  if (color.interpolate) {\r\n    const n = Math.min(color.domain().length, color.range().length);\r\n\r\n    x = color\r\n      .copy()\r\n      .rangeRound(\r\n        d3.quantize(d3.interpolate(marginLeft, width - marginRight), n)\r\n      );\r\n\r\n    svg\r\n      .select('.ramp')\r\n      .attr('class', 'ramp')\r\n      .attr('x', marginLeft)\r\n      .attr('y', marginTop)\r\n      .attr('width', width - marginLeft - marginRight)\r\n      .attr('height', height - marginTop - marginBottom)\r\n      .attr('preserveAspectRatio', 'none')\r\n      .attr(\r\n        'xlink:href',\r\n        ramp(\r\n          color.copy().domain(d3.quantize(d3.interpolate(0, 1), n))\r\n        ).toDataURL()\r\n      );\r\n  }\r\n\r\n  // Sequential\r\n  else if (color.interpolator) {\r\n    svg\r\n      .select('.bars')\r\n      .selectAll('rect')\r\n      .transition(t)\r\n      .attr('opacity', 0)\r\n      .remove();\r\n\r\n    x = Object.assign(\r\n      color\r\n        .copy()\r\n        .interpolator(d3.interpolateRound(marginLeft, width - marginRight)),\r\n      {\r\n        range() {\r\n          return [marginLeft, width - marginRight];\r\n        },\r\n      }\r\n    );\r\n\r\n    svg\r\n      .select('.ramp')\r\n      .attr('class', 'ramp')\r\n      .attr('x', marginLeft)\r\n      .attr('y', marginTop)\r\n      .attr('width', width - marginLeft - marginRight)\r\n      .attr('height', height - marginTop - marginBottom)\r\n      .attr('preserveAspectRatio', 'none')\r\n      .attr('xlink:href', ramp(color.interpolator()).toDataURL())\r\n      .transition(t)\r\n      .attr('opacity', 1);\r\n\r\n    // scaleSequentialQuantile doesnâ€™t implement ticks or tickFormat.\r\n    if (!x.ticks) {\r\n      if (tickValues === undefined) {\r\n        const n = Math.round(ticks + 1);\r\n        tickValues = d3\r\n          .range(n)\r\n          .map((i) => d3.quantile(color.domain(), i / (n - 1)));\r\n      }\r\n      if (typeof tickFormat !== 'function') {\r\n        tickFormat = d3.format(tickFormat === undefined ? ',f' : tickFormat);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Threshold\r\n  else if (color.invertExtent) {\r\n    const thresholds = color.thresholds\r\n      ? color.thresholds() // scaleQuantize\r\n      : color.quantiles\r\n      ? color.quantiles() // scaleQuantile\r\n      : color.domain(); // scaleThreshold\r\n\r\n    const thresholdFormat =\r\n      tickFormat === undefined\r\n        ? (d) => d\r\n        : typeof tickFormat === 'string'\r\n        ? d3.format(tickFormat)\r\n        : tickFormat;\r\n\r\n    x = d3\r\n      .scaleLinear()\r\n      .domain([-1, color.range().length - 1])\r\n      .rangeRound([marginLeft, width - marginRight]);\r\n\r\n    svg\r\n      .append('g')\r\n      .selectAll('rect')\r\n      .data(color.range())\r\n      .join('rect')\r\n      .attr('x', (d, i) => x(i - 1))\r\n      .attr('y', marginTop)\r\n      .attr('width', (d, i) => x(i) - x(i - 1))\r\n      .attr('height', height - marginTop - marginBottom)\r\n      .attr('fill', (d) => d);\r\n\r\n    tickValues = d3.range(-1, thresholds.length);\r\n    tickFormat = (i) => {\r\n      if (i === -1) return thresholdFormat(1);\r\n      else if (i === thresholds.length - 1) return;\r\n      else if (i === thresholds.length - 2)\r\n        return thresholdFormat(thresholds[i] + '+', i);\r\n      return thresholdFormat(thresholds[i], i);\r\n    };\r\n  }\r\n\r\n  // Ordinal\r\n  else {\r\n    svg\r\n      .select('.ramp')\r\n      .transition(t)\r\n      .attr('opacity', 0)\r\n      .attr('xlink:href', null);\r\n    if (!ordinalWeights) {\r\n      x = d3\r\n        .scaleBand()\r\n        .domain(color.domain())\r\n        .rangeRound([marginLeft, width - marginRight]);\r\n      svg\r\n        .selectAll('rect')\r\n        .data(color.domain())\r\n        .join('rect')\r\n        .attr('x', x)\r\n        .attr('y', marginTop)\r\n        .attr('width', Math.max(0, x.bandwidth() - 1))\r\n        .attr('height', height - marginTop - marginBottom)\r\n        .attr('fill', color);\r\n    } else {\r\n      const widthScale = d3\r\n        .scaleLinear()\r\n        .domain([0, ordinalWeights.reduce((a, b) => a + b)])\r\n        .rangeRound([0, width - marginLeft - marginRight]);\r\n\r\n      const xPos = ordinalWeights.map((w, i) =>\r\n        ordinalWeights\r\n          .slice(0, i)\r\n          .reduce((acc, w) => acc + widthScale(w), marginLeft)\r\n      );\r\n\r\n      x = d3.scaleOrdinal().domain(color.domain()).range(xPos);\r\n\r\n      svg\r\n        .select('.bars')\r\n        .selectAll('rect')\r\n        .data(color.domain())\r\n        .join((enter) =>\r\n          enter\r\n            .append('rect')\r\n            .attr('x', x)\r\n            .attr('width', (d, i) => widthScale(ordinalWeights[i]))\r\n        )\r\n        .attr('y', marginTop)\r\n        .attr('height', height - marginTop - marginBottom)\r\n        .attr('fill', color)\r\n        .transition(t)\r\n        .attr('x', x)\r\n        .attr('width', (d, i) => widthScale(ordinalWeights[i]))\r\n        .attr('opacity', 1);\r\n    }\r\n\r\n    tickAdjust = () => {};\r\n  }\r\n\r\n  svg\r\n    .select('.axis')\r\n    .attr('transform', `translate(0,${height - marginBottom})`)\r\n    .transition(t)\r\n    .attr('class', 'axis')\r\n    .call(\r\n      d3\r\n        .axisBottom(x)\r\n        .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\r\n        .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\r\n        .tickSize(tickSize)\r\n        .tickValues(tickValues)\r\n    )\r\n    .on('start', () => {\r\n      svg.call(tickAdjust).call((svg) => svg.select('.domain').remove());\r\n    })\r\n    .call((g) =>\r\n      g\r\n        .select('.axistext')\r\n        .attr('class', 'axistext')\r\n        .attr('x', marginLeft)\r\n        .attr('y', marginTop + marginBottom - height - 6)\r\n        .attr('fill', 'currentColor')\r\n        .attr('text-anchor', 'start')\r\n        .attr('font-weight', 'bold')\r\n        .text(title)\r\n    );\r\n\r\n  return svg.node();\r\n}\r\n\r\nfunction ramp(color, n = 256) {\r\n  // const canvas = document.createElement('canvas');\r\n  const canvas = d3.select('.color-scale').node();\r\n  const context = ((canvas.width = n), (canvas.height = 1), canvas).getContext(\r\n    '2d'\r\n  );\r\n  for (let i = 0; i < n; ++i) {\r\n    context.fillStyle = color(i / (n - 1));\r\n    context.fillRect(i, 0, 1, 1);\r\n  }\r\n  return canvas;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { style } from 'styled-system';\nimport theme from './theme';\nvar oppositeEdge = {\n  top: 'Bottom',\n  right: 'Left',\n  bottom: 'Top',\n  left: 'Right'\n};\nvar perpendicularEdge = {\n  top: 'Left',\n  right: 'Top',\n  bottom: 'Left',\n  left: 'Top'\n};\n\nfunction getEdgeAlign(location) {\n  var _location$split = location.split('-'),\n      _location$split2 = _slicedToArray(_location$split, 2),\n      edge = _location$split2[0],\n      align = _location$split2[1];\n\n  return [edge, align];\n}\n\nfunction getPosition(edge, align, spacing) {\n  var _ref;\n\n  var opposite = oppositeEdge[edge].toLowerCase();\n  var perp = perpendicularEdge[edge].toLowerCase();\n  return _ref = {}, _defineProperty(_ref, opposite, '100%'), _defineProperty(_ref, align || perp, align ? spacing : '50%'), _ref;\n}\n\nvar getBg = style({\n  prop: 'bg',\n  key: 'colors'\n});\nvar getBorderColor = style({\n  prop: 'borderColor',\n  key: 'colors'\n});\nvar getBorderWidth = style({\n  prop: 'borderWidth',\n  key: 'borderWidths',\n  scale: [0, 1]\n});\n\nfunction Caret(props) {\n  var _objectSpread2;\n\n  var _getBg = getBg(props),\n      bg = _getBg.bg;\n\n  var _getBorderColor = getBorderColor(props),\n      borderColor = _getBorderColor.borderColor;\n\n  var _getBorderWidth = getBorderWidth(props),\n      borderWidth = _getBorderWidth.borderWidth;\n\n  var size = props.size,\n      location = props.location;\n\n  var _getEdgeAlign = getEdgeAlign(location),\n      _getEdgeAlign2 = _slicedToArray(_getEdgeAlign, 2),\n      edge = _getEdgeAlign2[0],\n      align = _getEdgeAlign2[1];\n\n  var perp = perpendicularEdge[edge];\n\n  var style = _objectSpread({\n    pointerEvents: 'none',\n    position: 'absolute'\n  }, getPosition(edge, align, size), (_objectSpread2 = {}, _defineProperty(_objectSpread2, \"margin\".concat(perp), align ? null : -size), _defineProperty(_objectSpread2, \"marginTop\", '-1px'), _objectSpread2)); // note: these arrays represent points in the form [x, y]\n\n\n  var a = [-size, 0];\n  var b = [0, size];\n  var c = [size, 0]; // spaces are optional in path `d` attribute, and points are\n  // represented in the form `x,y` -- which is what the arrays above\n  // become when stringified!\n\n  var triangle = \"M\".concat(a, \"L\").concat(b, \"L\").concat(c, \"L\").concat(a, \"Z\");\n  var line = \"M\".concat(a, \"L\").concat(b, \"L\").concat(c);\n  var transform = {\n    top: \"translate(\".concat([size, size * 2], \") rotate(180)\"),\n    right: \"translate(\".concat([0, size], \") rotate(-90)\"),\n    bottom: \"translate(\".concat([size, 0], \")\"),\n    left: \"translate(\".concat([size * 2, size], \") rotate(90)\")\n  }[edge];\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: size * 2,\n    height: size * 2,\n    style: style\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: transform\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: triangle,\n    fill: bg\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: line,\n    fill: \"none\",\n    stroke: borderColor,\n    strokeWidth: borderWidth\n  })));\n}\n\nCaret.displayName = \"Caret\";\nCaret.locations = ['top', 'top-left', 'top-right', 'right', 'right-top', 'right-bottom', 'bottom', 'bottom-left', 'bottom-right', 'left', 'left-top', 'left-bottom'];\nCaret.defaultProps = {\n  bg: 'white',\n  borderColor: 'gray.2',\n  borderWidth: 1,\n  location: 'bottom',\n  size: 8,\n  theme: theme\n};\nCaret.propTypes = {\n  /* eslint-disable react/sort-prop-types  */\n  // eslint can't determine whether these props are used\n  // because they're accessed inside of styled-system.\n\n  /* eslint-disable react/no-unused-prop-types */\n  bg: PropTypes.string,\n  borderColor: PropTypes.string,\n  borderWidth: PropTypes.number,\n  size: PropTypes.number,\n  location: PropTypes.oneOf(Caret.locations)\n  /* eslint-enable */\n\n};\nexport default Caret;","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/node_modules/@primer/components/lib-esm/Caret.js"],"names":["_objectSpread","_defineProperty","_slicedToArray","React","PropTypes","style","theme","oppositeEdge","top","right","bottom","left","perpendicularEdge","getEdgeAlign","location","_location$split","split","_location$split2","edge","align","getPosition","spacing","_ref","opposite","toLowerCase","perp","getBg","prop","key","getBorderColor","getBorderWidth","scale","Caret","props","_objectSpread2","_getBg","bg","_getBorderColor","borderColor","_getBorderWidth","borderWidth","size","_getEdgeAlign","_getEdgeAlign2","pointerEvents","position","concat","a","b","c","triangle","line","transform","createElement","width","height","d","fill","stroke","strokeWidth","displayName","locations","defaultProps","propTypes","string","number","oneOf"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { style } from 'styled-system';\nimport theme from './theme';\nvar oppositeEdge = {\n  top: 'Bottom',\n  right: 'Left',\n  bottom: 'Top',\n  left: 'Right'\n};\nvar perpendicularEdge = {\n  top: 'Left',\n  right: 'Top',\n  bottom: 'Left',\n  left: 'Top'\n};\n\nfunction getEdgeAlign(location) {\n  var _location$split = location.split('-'),\n      _location$split2 = _slicedToArray(_location$split, 2),\n      edge = _location$split2[0],\n      align = _location$split2[1];\n\n  return [edge, align];\n}\n\nfunction getPosition(edge, align, spacing) {\n  var _ref;\n\n  var opposite = oppositeEdge[edge].toLowerCase();\n  var perp = perpendicularEdge[edge].toLowerCase();\n  return _ref = {}, _defineProperty(_ref, opposite, '100%'), _defineProperty(_ref, align || perp, align ? spacing : '50%'), _ref;\n}\n\nvar getBg = style({\n  prop: 'bg',\n  key: 'colors'\n});\nvar getBorderColor = style({\n  prop: 'borderColor',\n  key: 'colors'\n});\nvar getBorderWidth = style({\n  prop: 'borderWidth',\n  key: 'borderWidths',\n  scale: [0, 1]\n});\n\nfunction Caret(props) {\n  var _objectSpread2;\n\n  var _getBg = getBg(props),\n      bg = _getBg.bg;\n\n  var _getBorderColor = getBorderColor(props),\n      borderColor = _getBorderColor.borderColor;\n\n  var _getBorderWidth = getBorderWidth(props),\n      borderWidth = _getBorderWidth.borderWidth;\n\n  var size = props.size,\n      location = props.location;\n\n  var _getEdgeAlign = getEdgeAlign(location),\n      _getEdgeAlign2 = _slicedToArray(_getEdgeAlign, 2),\n      edge = _getEdgeAlign2[0],\n      align = _getEdgeAlign2[1];\n\n  var perp = perpendicularEdge[edge];\n\n  var style = _objectSpread({\n    pointerEvents: 'none',\n    position: 'absolute'\n  }, getPosition(edge, align, size), (_objectSpread2 = {}, _defineProperty(_objectSpread2, \"margin\".concat(perp), align ? null : -size), _defineProperty(_objectSpread2, \"marginTop\", '-1px'), _objectSpread2)); // note: these arrays represent points in the form [x, y]\n\n\n  var a = [-size, 0];\n  var b = [0, size];\n  var c = [size, 0]; // spaces are optional in path `d` attribute, and points are\n  // represented in the form `x,y` -- which is what the arrays above\n  // become when stringified!\n\n  var triangle = \"M\".concat(a, \"L\").concat(b, \"L\").concat(c, \"L\").concat(a, \"Z\");\n  var line = \"M\".concat(a, \"L\").concat(b, \"L\").concat(c);\n  var transform = {\n    top: \"translate(\".concat([size, size * 2], \") rotate(180)\"),\n    right: \"translate(\".concat([0, size], \") rotate(-90)\"),\n    bottom: \"translate(\".concat([size, 0], \")\"),\n    left: \"translate(\".concat([size * 2, size], \") rotate(90)\")\n  }[edge];\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: size * 2,\n    height: size * 2,\n    style: style\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: transform\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: triangle,\n    fill: bg\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: line,\n    fill: \"none\",\n    stroke: borderColor,\n    strokeWidth: borderWidth\n  })));\n}\n\nCaret.displayName = \"Caret\";\nCaret.locations = ['top', 'top-left', 'top-right', 'right', 'right-top', 'right-bottom', 'bottom', 'bottom-left', 'bottom-right', 'left', 'left-top', 'left-bottom'];\nCaret.defaultProps = {\n  bg: 'white',\n  borderColor: 'gray.2',\n  borderWidth: 1,\n  location: 'bottom',\n  size: 8,\n  theme: theme\n};\nCaret.propTypes = {\n  /* eslint-disable react/sort-prop-types  */\n  // eslint can't determine whether these props are used\n  // because they're accessed inside of styled-system.\n\n  /* eslint-disable react/no-unused-prop-types */\n  bg: PropTypes.string,\n  borderColor: PropTypes.string,\n  borderWidth: PropTypes.number,\n  size: PropTypes.number,\n  location: PropTypes.oneOf(Caret.locations)\n  /* eslint-enable */\n\n};\nexport default Caret;"]},"metadata":{},"sourceType":"module"}
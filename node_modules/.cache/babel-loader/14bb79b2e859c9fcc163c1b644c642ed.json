{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import TimeSeries from'./timeseries';import'intersection-observer';import Observer from'@researchgate/react-intersection-observer';import equal from'fast-deep-equal';import React,{useState}from'react';import*as Icon from'react-feather';import{useTranslation}from'react-i18next';import{useLocalStorage}from'react-use';var isEqual=function isEqual(prevProps,currProps){if(!equal(currProps.activeStateCode,prevProps.activeStateCode)){return false;}if(!equal(currProps.anchor,prevProps.anchor)){return false;}return true;};function TimeSeriesExplorer(_ref){var timeseries=_ref.timeseries,activeStateCode=_ref.activeStateCode,onHighlightState=_ref.onHighlightState,states=_ref.states,anchor=_ref.anchor,setAnchor=_ref.setAnchor;var _useLocalStorage=useLocalStorage('timeseriesChartType',1),_useLocalStorage2=_slicedToArray(_useLocalStorage,2),chartType=_useLocalStorage2[0],setChartType=_useLocalStorage2[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isTimeseriesIntersecting=_useState2[0],setIsTimeseriesIntersecting=_useState2[1];var _useLocalStorage3=useLocalStorage('timeseriesMode',true),_useLocalStorage4=_slicedToArray(_useLocalStorage3,2),timeseriesMode=_useLocalStorage4[0],setTimeseriesMode=_useLocalStorage4[1];var _useLocalStorage5=useLocalStorage('timeseriesLogMode',false),_useLocalStorage6=_slicedToArray(_useLocalStorage5,2),timeseriesLogMode=_useLocalStorage6[0],setTimeseriesLogMode=_useLocalStorage6[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var options={rootMargin:'0px 0px 0px 0px'};return/*#__PURE__*/React.createElement(Observer,{options:options,onChange:function onChange(_ref2){var isIntersecting=_ref2.isIntersecting;return setIsTimeseriesIntersecting(isIntersecting);}},/*#__PURE__*/React.createElement(\"div\",{className:\"TimeSeriesExplorer \".concat(anchor==='timeseries'?'stickied':''),style:{display:anchor==='mapexplorer'?'none':''}},/*#__PURE__*/React.createElement(\"div\",{className:\"timeseries-header fadeInUp\",style:{animationDelay:'2.5s'}},window.innerWidth>769&&anchor!==undefined&&/*#__PURE__*/React.createElement(\"div\",{className:\"anchor \".concat(anchor==='timeseries'?'stickied':''),onClick:function onClick(){setAnchor(anchor==='timeseries'?null:'timeseries');}},/*#__PURE__*/React.createElement(Icon.Anchor,null)),/*#__PURE__*/React.createElement(\"h1\",null,t('Spread Trends')),/*#__PURE__*/React.createElement(\"div\",{className:\"tabs\"},/*#__PURE__*/React.createElement(\"div\",{className:\"tab \".concat(chartType===1?'focused':''),onClick:function onClick(){setChartType(1);}},/*#__PURE__*/React.createElement(\"h4\",null,t('Cumulative'))),/*#__PURE__*/React.createElement(\"div\",{className:\"tab \".concat(chartType===2?'focused':''),onClick:function onClick(){setChartType(2);}},/*#__PURE__*/React.createElement(\"h4\",null,t('Daily')))),/*#__PURE__*/React.createElement(\"div\",{className:\"scale-modes\"},/*#__PURE__*/React.createElement(\"label\",{className:\"main\"},t('Scale Modes')),/*#__PURE__*/React.createElement(\"div\",{className:\"timeseries-mode\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"timeseries-mode\"},t('Uniform')),/*#__PURE__*/React.createElement(\"input\",{id:\"timeseries-mode\",type:\"checkbox\",checked:timeseriesMode,className:\"switch\",\"aria-label\":t('Checked by default to scale uniformly.'),onChange:function onChange(event){setTimeseriesMode(!timeseriesMode);}})),/*#__PURE__*/React.createElement(\"div\",{className:\"timeseries-logmode \".concat(chartType!==1?'disabled':'')},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"timeseries-logmode\"},t('Logarithmic')),/*#__PURE__*/React.createElement(\"input\",{id:\"timeseries-logmode\",type:\"checkbox\",checked:chartType===1&&timeseriesLogMode,className:\"switch\",disabled:chartType!==1,onChange:function onChange(event){setTimeseriesLogMode(!timeseriesLogMode);}}))),states&&/*#__PURE__*/React.createElement(\"div\",{className:\"trends-state-name\"},/*#__PURE__*/React.createElement(\"select\",{value:activeStateCode,onChange:function onChange(_ref3){var target=_ref3.target;var selectedState=target.selectedOptions[0].getAttribute('statedata');onHighlightState(JSON.parse(selectedState));}},states.map(function(s){return/*#__PURE__*/React.createElement(\"option\",{value:s.statecode,key:s.statecode,statedata:JSON.stringify(s)},s.statecode==='TT'?t('All States'):t(s.state));})))),timeseries&&/*#__PURE__*/React.createElement(TimeSeries,{timeseriesProp:timeseries,chartType:chartType,mode:timeseriesMode,logMode:timeseriesLogMode,stateCode:activeStateCode,isIntersecting:isTimeseriesIntersecting}),/*#__PURE__*/React.createElement(\"div\",{className:\"alert\"},/*#__PURE__*/React.createElement(Icon.AlertOctagon,null),/*#__PURE__*/React.createElement(\"div\",{className:\"alert-right\"},t('Tested chart is independent of uniform scaling')))));}export default React.memo(TimeSeriesExplorer,isEqual);","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/src/components/timeseriesexplorer.js"],"names":["TimeSeries","Observer","equal","React","useState","Icon","useTranslation","useLocalStorage","isEqual","prevProps","currProps","activeStateCode","anchor","TimeSeriesExplorer","timeseries","onHighlightState","states","setAnchor","chartType","setChartType","isTimeseriesIntersecting","setIsTimeseriesIntersecting","timeseriesMode","setTimeseriesMode","timeseriesLogMode","setTimeseriesLogMode","t","options","rootMargin","isIntersecting","display","animationDelay","window","innerWidth","undefined","event","target","selectedState","selectedOptions","getAttribute","JSON","parse","map","s","statecode","stringify","state","memo"],"mappings":"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","sourcesContent":["import TimeSeries from './timeseries';\r\n\r\nimport 'intersection-observer';\r\nimport Observer from '@researchgate/react-intersection-observer';\r\nimport equal from 'fast-deep-equal';\r\nimport React, {useState} from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {useLocalStorage} from 'react-use';\r\n\r\nconst isEqual = (prevProps, currProps) => {\r\n  if (!equal(currProps.activeStateCode, prevProps.activeStateCode)) {\r\n    return false;\r\n  }\r\n  if (!equal(currProps.anchor, prevProps.anchor)) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nfunction TimeSeriesExplorer({\r\n  timeseries,\r\n  activeStateCode,\r\n  onHighlightState,\r\n  states,\r\n  anchor,\r\n  setAnchor,\r\n}) {\r\n  const [chartType, setChartType] = useLocalStorage('timeseriesChartType', 1);\r\n  const [isTimeseriesIntersecting, setIsTimeseriesIntersecting] = useState(\r\n    false\r\n  );\r\n\r\n  const [timeseriesMode, setTimeseriesMode] = useLocalStorage(\r\n    'timeseriesMode',\r\n    true\r\n  );\r\n  const [timeseriesLogMode, setTimeseriesLogMode] = useLocalStorage(\r\n    'timeseriesLogMode',\r\n    false\r\n  );\r\n  const {t} = useTranslation();\r\n\r\n  const options = {\r\n    rootMargin: '0px 0px 0px 0px',\r\n  };\r\n\r\n  return (\r\n    <Observer\r\n      options={options}\r\n      onChange={({isIntersecting}) =>\r\n        setIsTimeseriesIntersecting(isIntersecting)\r\n      }\r\n    >\r\n      <div\r\n        className={`TimeSeriesExplorer ${\r\n          anchor === 'timeseries' ? 'stickied' : ''\r\n        }`}\r\n        style={{display: anchor === 'mapexplorer' ? 'none' : ''}}\r\n      >\r\n        <div\r\n          className=\"timeseries-header fadeInUp\"\r\n          style={{animationDelay: '2.5s'}}\r\n        >\r\n          {window.innerWidth > 769 && anchor !== undefined && (\r\n            <div\r\n              className={`anchor ${anchor === 'timeseries' ? 'stickied' : ''}`}\r\n              onClick={() => {\r\n                setAnchor(anchor === 'timeseries' ? null : 'timeseries');\r\n              }}\r\n            >\r\n              <Icon.Anchor />\r\n            </div>\r\n          )}\r\n\r\n          <h1>{t('Spread Trends')}</h1>\r\n          <div className=\"tabs\">\r\n            <div\r\n              className={`tab ${chartType === 1 ? 'focused' : ''}`}\r\n              onClick={() => {\r\n                setChartType(1);\r\n              }}\r\n            >\r\n              <h4>{t('Cumulative')}</h4>\r\n            </div>\r\n            <div\r\n              className={`tab ${chartType === 2 ? 'focused' : ''}`}\r\n              onClick={() => {\r\n                setChartType(2);\r\n              }}\r\n            >\r\n              <h4>{t('Daily')}</h4>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"scale-modes\">\r\n            <label className=\"main\">{t('Scale Modes')}</label>\r\n            <div className=\"timeseries-mode\">\r\n              <label htmlFor=\"timeseries-mode\">{t('Uniform')}</label>\r\n              <input\r\n                id=\"timeseries-mode\"\r\n                type=\"checkbox\"\r\n                checked={timeseriesMode}\r\n                className=\"switch\"\r\n                aria-label={t('Checked by default to scale uniformly.')}\r\n                onChange={(event) => {\r\n                  setTimeseriesMode(!timeseriesMode);\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              className={`timeseries-logmode ${\r\n                chartType !== 1 ? 'disabled' : ''\r\n              }`}\r\n            >\r\n              <label htmlFor=\"timeseries-logmode\">{t('Logarithmic')}</label>\r\n              <input\r\n                id=\"timeseries-logmode\"\r\n                type=\"checkbox\"\r\n                checked={chartType === 1 && timeseriesLogMode}\r\n                className=\"switch\"\r\n                disabled={chartType !== 1}\r\n                onChange={(event) => {\r\n                  setTimeseriesLogMode(!timeseriesLogMode);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {states && (\r\n            <div className=\"trends-state-name\">\r\n              <select\r\n                value={activeStateCode}\r\n                onChange={({target}) => {\r\n                  const selectedState = target.selectedOptions[0].getAttribute(\r\n                    'statedata'\r\n                  );\r\n                  onHighlightState(JSON.parse(selectedState));\r\n                }}\r\n              >\r\n                {states.map((s) => {\r\n                  return (\r\n                    <option\r\n                      value={s.statecode}\r\n                      key={s.statecode}\r\n                      statedata={JSON.stringify(s)}\r\n                    >\r\n                      {s.statecode === 'TT' ? t('All States') : t(s.state)}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {timeseries && (\r\n          <TimeSeries\r\n            timeseriesProp={timeseries}\r\n            chartType={chartType}\r\n            mode={timeseriesMode}\r\n            logMode={timeseriesLogMode}\r\n            stateCode={activeStateCode}\r\n            isIntersecting={isTimeseriesIntersecting}\r\n          />\r\n        )}\r\n\r\n        <div className=\"alert\">\r\n          <Icon.AlertOctagon />\r\n          <div className=\"alert-right\">\r\n            {t('Tested chart is independent of uniform scaling')}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Observer>\r\n  );\r\n}\r\n\r\nexport default React.memo(TimeSeriesExplorer, isEqual);\r\n"]},"metadata":{},"sourceType":"module"}
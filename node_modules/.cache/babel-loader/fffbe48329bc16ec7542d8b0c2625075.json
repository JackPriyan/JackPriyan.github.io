{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _defineProperty from\"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _asyncToGenerator from\"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import Clusters from'./clusters';import DeltaBarGraph from'./deltabargraph';import Footer from'./footer';import Level from'./level';import MapExplorer from'./mapexplorer';import Minigraph from'./minigraph';import StateMeta from'./statemeta';import TimeSeriesExplorer from'./timeseriesexplorer';import{STATE_CODES,STATE_POPULATIONS}from'../constants';import{formatDateAbsolute,formatNumber,mergeTimeseries,parseStateTimeseries,parseStateTestData,parseStateTestTimeseries,parseDistrictZones}from'../utils/commonfunctions';import Breadcrumb from'@primer/components/lib/Breadcrumb';import Dropdown from'@primer/components/lib/Dropdown';import anime from'animejs';import axios from'axios';import{format,parse}from'date-fns';import React,{useState}from'react';import*as Icon from'react-feather';import{Helmet}from'react-helmet';import{useTranslation}from'react-i18next';import{Link,useParams,Redirect}from'react-router-dom';import{useMeasure,useEffectOnce}from'react-use';function PureBreadcrumbs(_ref){var stateName=_ref.stateName,stateCode=_ref.stateCode,fetched=_ref.fetched,allStateData=_ref.allStateData;var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/React.createElement(\"div\",{className:\"breadcrumb\"},/*#__PURE__*/React.createElement(Breadcrumb,null,/*#__PURE__*/React.createElement(Breadcrumb.Item,{href:\"/\"},t('Home')),/*#__PURE__*/React.createElement(Dropdown,{direction:\"w\"},/*#__PURE__*/React.createElement(\"summary\",null,/*#__PURE__*/React.createElement(Breadcrumb.Item,{href:\"\".concat(stateCode),selected:true},t(stateName)),/*#__PURE__*/React.createElement(Dropdown.Caret,{className:\"caret\"})),fetched&&/*#__PURE__*/React.createElement(Dropdown.Menu,{direction:\"se\"},allStateData.map(function(state){return/*#__PURE__*/React.createElement(Dropdown.Item,{key:state.statecode,className:\"item\"},/*#__PURE__*/React.createElement(Link,{to:\"\".concat(state.statecode)},t(STATE_CODES[state.statecode])));})))));}var Breadcrumbs=React.memo(PureBreadcrumbs);function State(props){var stateCode=useParams().stateCode.toUpperCase();var stateName=STATE_CODES[stateCode];var _useState=useState({}),_useState2=_slicedToArray(_useState,2),allStateData=_useState2[0],setAllStateData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),fetched=_useState4[0],setFetched=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),districtZones=_useState6[0],setDistrictZones=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),timeseries=_useState8[0],setTimeseries=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),stateData=_useState10[0],setStateData=_useState10[1];var _useState11=useState({}),_useState12=_slicedToArray(_useState11,2),testData=_useState12[0],setTestData=_useState12[1];var _useState13=useState({}),_useState14=_slicedToArray(_useState13,2),sources=_useState14[0],setSources=_useState14[1];var _useState15=useState({}),_useState16=_slicedToArray(_useState15,2),districtData=_useState16[0],setDistrictData=_useState16[1];var _useState17=useState('confirmed'),_useState18=_slicedToArray(_useState17,2),mapOption=_useState18[0],setMapOption=_useState18[1];var _useMeasure=useMeasure(),_useMeasure2=_slicedToArray(_useMeasure,2),mapSwitcher=_useMeasure2[0],width=_useMeasure2[1].width;var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),showAllDistricts=_useState20[0],setShowAllDistricts=_useState20[1];var _useState21=useState({state:stateName}),_useState22=_slicedToArray(_useState21,2),regionHighlighted=_useState22[0],setRegionHighlighted=_useState22[1];useEffectOnce(function(){getState();});var _useTranslation2=useTranslation(),t=_useTranslation2.t;var getState=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$Promise$all,_yield$Promise$all2,dataResponse,stateDistrictWiseResponse,statesDailyResponse,stateTestResponse,sourcesResponse,zonesResponse,states,ts,testTs,tsMerged,sourceList,stateTestData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return Promise.all([axios.get('https://api.covid19india.org/data.json'),axios.get('https://api.covid19india.org/state_district_wise.json'),axios.get('https://api.covid19india.org/states_daily.json'),axios.get('https://api.covid19india.org/state_test_data.json'),axios.get('https://api.covid19india.org/sources_list.json'),axios.get('https://api.covid19india.org/zones.json')]);case 3:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,6);dataResponse=_yield$Promise$all2[0].data;stateDistrictWiseResponse=_yield$Promise$all2[1].data;statesDailyResponse=_yield$Promise$all2[2].data;stateTestResponse=_yield$Promise$all2[3].data;sourcesResponse=_yield$Promise$all2[4].data;zonesResponse=_yield$Promise$all2[5].data;states=dataResponse.statewise;setAllStateData(states.filter(function(state){return state.statecode!==stateCode;}));setStateData([states.find(function(s){return s.statecode===stateCode;})]);// Timeseries\nts=parseStateTimeseries(statesDailyResponse)[stateCode];testTs=parseStateTestTimeseries(stateTestResponse.states_tested_data)[stateCode];// Merge\ntsMerged=mergeTimeseries(_defineProperty({},stateCode,ts),_defineProperty({},stateCode,testTs));setTimeseries(tsMerged[stateCode]);// District data\nsetDistrictData(_defineProperty({},stateName,stateDistrictWiseResponse[stateName]));sourceList=sourcesResponse.sources_list;setSources(sourceList.filter(function(state){return state.statecode===stateCode;}));stateTestData=parseStateTestData(stateTestResponse.states_tested_data);setTestData(_defineProperty({},stateName,stateTestData[stateName]));setDistrictZones(parseDistrictZones(zonesResponse.zones,stateName));setFetched(true);anime({targets:'.highlight',duration:200,delay:3000,translateX:mapOption==='confirmed'?\"\".concat(width*0,\"px\"):mapOption==='active'?\"\".concat(width*0.25,\"px\"):mapOption==='recovered'?\"\".concat(width*0.5,\"px\"):mapOption==='deceased'?\"\".concat(width*0.75,\"px\"):'0px',easing:'spring(1, 80, 90, 10)',opacity:1});_context.next=31;break;case 28:_context.prev=28;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 31:case\"end\":return _context.stop();}}},_callee,null,[[0,28]]);}));return function getState(){return _ref2.apply(this,arguments);};}();var testObj=testData[stateName];var population=STATE_POPULATIONS[stateName];function toggleShowAllDistricts(){setShowAllDistricts(!showAllDistricts);}var getGridRowCount=function getGridRowCount(){var gridColumnCount=window.innerWidth>=540?3:2;var districtCount=districtData[stateName]&&Object.keys(districtData[stateName].districtData).length||0;var gridRowCount=Math.ceil(districtCount/gridColumnCount);return gridRowCount;};var gridRowCount=getGridRowCount();if(!stateName){return/*#__PURE__*/React.createElement(Redirect,{to:\"/\"});}else{var _districtData$stateNa,_districtData$stateNa2;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Helmet,null,/*#__PURE__*/React.createElement(\"title\",null,\"Coronavirus Outbreak in \",STATE_CODES[stateCode],\" - covid19india.org\"),/*#__PURE__*/React.createElement(\"meta\",{name:\"title\",content:\"Coronavirus Outbreak in \".concat(STATE_CODES[stateCode],\": Latest Map and Case Count\")})),/*#__PURE__*/React.createElement(\"div\",{className:\"State\"},/*#__PURE__*/React.createElement(\"div\",{className:\"state-left\"},/*#__PURE__*/React.createElement(Breadcrumbs,{stateName:stateName,stateCode:stateCode,fetched:fetched,allStateData:allStateData}),/*#__PURE__*/React.createElement(\"div\",{className:\"header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"header-left fadeInUp\",style:{animationDelay:'0.3s'}},/*#__PURE__*/React.createElement(\"h1\",null,t(stateName)),/*#__PURE__*/React.createElement(\"h5\",null,\"Last Updated on\",' ',stateData&&Object.keys(stateData[0]).length?formatDateAbsolute(stateData[0].lastupdatedtime):'')),/*#__PURE__*/React.createElement(\"div\",{className:\"header-right fadeInUp\",style:{animationDelay:'0.5s'}},/*#__PURE__*/React.createElement(\"h5\",null,t('Tested')),/*#__PURE__*/React.createElement(\"h2\",null,formatNumber(testObj===null||testObj===void 0?void 0:testObj.totaltested)),/*#__PURE__*/React.createElement(\"h5\",{className:\"timestamp\"},!isNaN(parse(testObj===null||testObj===void 0?void 0:testObj.updatedon,'dd/MM/yyyy',new Date()))?\"As of \".concat(format(parse(testObj===null||testObj===void 0?void 0:testObj.updatedon,'dd/MM/yyyy',new Date()),'dd MMM')):''),/*#__PURE__*/React.createElement(\"h5\",null,'per ',(testObj===null||testObj===void 0?void 0:testObj.totaltested)&&/*#__PURE__*/React.createElement(\"a\",{href:testObj===null||testObj===void 0?void 0:testObj.source,target:\"_noblank\"},\"source\")))),fetched&&/*#__PURE__*/React.createElement(\"div\",{className:\"map-switcher\",ref:mapSwitcher},/*#__PURE__*/React.createElement(\"div\",{className:\"highlight \".concat(mapOption),style:{transform:\"translateX(\".concat(width*0,\"px)\"),opacity:0}}),/*#__PURE__*/React.createElement(\"div\",{className:\"clickable\",onClick:function onClick(){setMapOption('confirmed');anime({targets:'.highlight',translateX:\"\".concat(width*0,\"px\"),easing:'spring(1, 80, 90, 10)'});}}),/*#__PURE__*/React.createElement(\"div\",{className:\"clickable\",onClick:function onClick(){setMapOption('active');anime({targets:'.highlight',translateX:\"\".concat(width*0.25,\"px\"),easing:'spring(1, 80, 90, 10)'});}}),/*#__PURE__*/React.createElement(\"div\",{className:\"clickable\",onClick:function onClick(){setMapOption('recovered');anime({targets:'.highlight',translateX:\"\".concat(width*0.5,\"px\"),easing:'spring(1, 80, 90, 10)'});}}),/*#__PURE__*/React.createElement(\"div\",{className:\"clickable\",onClick:function onClick(){setMapOption('deceased');anime({targets:'.highlight',translateX:\"\".concat(width*0.75,\"px\"),easing:'spring(1, 80, 90, 10)'});}})),fetched&&/*#__PURE__*/React.createElement(Level,{data:stateData[0]}),fetched&&/*#__PURE__*/React.createElement(Minigraph,{timeseries:timeseries}),fetched&&/*#__PURE__*/React.createElement(MapExplorer,{mapName:stateName,states:stateData,districts:districtData,zones:districtZones,stateTestData:testData,regionHighlighted:regionHighlighted,setRegionHighlighted:setRegionHighlighted,mapOption:mapOption,isCountryLoaded:false}),fetched&&/*#__PURE__*/React.createElement(\"div\",{className:\"meta-secondary\"},/*#__PURE__*/React.createElement(\"div\",{className:\"alert\"},/*#__PURE__*/React.createElement(Icon.AlertCircle,null),/*#__PURE__*/React.createElement(\"div\",{className:\"alert-right\"},\"Awaiting district details for\",' ',((_districtData$stateNa=districtData[stateName])===null||_districtData$stateNa===void 0?void 0:(_districtData$stateNa2=_districtData$stateNa.districtData['Unknown'])===null||_districtData$stateNa2===void 0?void 0:_districtData$stateNa2.confirmed)||'0',' ',\"cases\")),/*#__PURE__*/React.createElement(\"div\",{className:\"alert\"},/*#__PURE__*/React.createElement(Icon.Compass,null),/*#__PURE__*/React.createElement(\"div\",{className:\"alert-right\"},\"Data collected from sources\",' ',sources.length>0?Object.keys(sources[0]).map(function(key,index){if(key.match('source')&&sources[0][key]!==''){var num=key.match(/\\d+/);return/*#__PURE__*/React.createElement(React.Fragment,{key:index},num>1?',':'',/*#__PURE__*/React.createElement(\"a\",{href:sources[0][key]},num));}return null;}):''))),fetched&&/*#__PURE__*/React.createElement(StateMeta,{stateData:stateData[0],testObject:testObj,population:population,lastSevenDaysData:timeseries.slice(-7),totalData:allStateData.filter(function(state){return state.statecode==='TT';})}),fetched&&/*#__PURE__*/React.createElement(\"div\",{className:\"Clusters fadeInUp\",style:{animationDelay:'0.8s'}},/*#__PURE__*/React.createElement(\"h1\",null,\"Network of Transmission\"),/*#__PURE__*/React.createElement(Clusters,{stateCode:stateCode}))),/*#__PURE__*/React.createElement(\"div\",{className:\"state-right\"},fetched&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"district-bar\",style:!showAllDistricts?{display:'flex'}:{}},/*#__PURE__*/React.createElement(\"div\",{className:\"district-bar-left fadeInUp\",style:{animationDelay:'0.6s'}},/*#__PURE__*/React.createElement(\"h2\",{className:mapOption},\"Top districts\"),/*#__PURE__*/React.createElement(\"div\",{className:\"districts \".concat(showAllDistricts?'is-grid':''),style:showAllDistricts?{gridTemplateRows:\"repeat(\".concat(gridRowCount,\", 2rem)\")}:{}},districtData[stateName]?Object.keys(districtData[stateName].districtData).filter(function(d){return d!=='Unknown';}).sort(function(a,b){var districtB=districtData[stateName].districtData[b];var districtA=districtData[stateName].districtData[a];return districtB[mapOption]-districtA[mapOption];}).slice(0,showAllDistricts?undefined:5).map(function(district,index){var cases=districtData[stateName].districtData[district];return/*#__PURE__*/React.createElement(\"div\",{key:index,className:\"district\"},/*#__PURE__*/React.createElement(\"h2\",null,cases[mapOption]),/*#__PURE__*/React.createElement(\"h5\",null,t(district)),mapOption!=='active'&&/*#__PURE__*/React.createElement(\"div\",{className:\"delta\"},/*#__PURE__*/React.createElement(Icon.ArrowUp,{className:mapOption}),/*#__PURE__*/React.createElement(\"h6\",{className:mapOption},cases.delta[mapOption])));}):''),districtData[stateName]&&Object.keys(districtData[stateName].districtData).length>5&&/*#__PURE__*/React.createElement(\"button\",{className:\"button\",onClick:toggleShowAllDistricts},showAllDistricts?\"View less\":\"View all\")),/*#__PURE__*/React.createElement(\"div\",{className:\"district-bar-right\"},(mapOption==='confirmed'||mapOption==='deceased')&&/*#__PURE__*/React.createElement(\"div\",{className:\"happy-sign fadeInUp\",style:{animationDelay:'0.6s'}},timeseries.slice(-5).every(function(day){return day[\"daily\".concat(mapOption)]===0;})&&/*#__PURE__*/React.createElement(\"div\",{className:\"alert \".concat(mapOption==='confirmed'?'is-green':'')},/*#__PURE__*/React.createElement(Icon.Smile,null),/*#__PURE__*/React.createElement(\"div\",{className:\"alert-right\"},\"No new \",mapOption,\" cases in the past five days\"))),/*#__PURE__*/React.createElement(DeltaBarGraph,{timeseries:timeseries.slice(-5),caseType:\"daily\".concat(mapOption)}))),/*#__PURE__*/React.createElement(TimeSeriesExplorer,{timeseries:timeseries})))),/*#__PURE__*/React.createElement(Footer,null));}}export default React.memo(State);","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/src/components/state.js"],"names":["Clusters","DeltaBarGraph","Footer","Level","MapExplorer","Minigraph","StateMeta","TimeSeriesExplorer","STATE_CODES","STATE_POPULATIONS","formatDateAbsolute","formatNumber","mergeTimeseries","parseStateTimeseries","parseStateTestData","parseStateTestTimeseries","parseDistrictZones","Breadcrumb","Dropdown","anime","axios","format","parse","React","useState","Icon","Helmet","useTranslation","Link","useParams","Redirect","useMeasure","useEffectOnce","PureBreadcrumbs","stateName","stateCode","fetched","allStateData","t","map","state","statecode","Breadcrumbs","memo","State","props","toUpperCase","setAllStateData","setFetched","districtZones","setDistrictZones","timeseries","setTimeseries","stateData","setStateData","testData","setTestData","sources","setSources","districtData","setDistrictData","mapOption","setMapOption","mapSwitcher","width","showAllDistricts","setShowAllDistricts","regionHighlighted","setRegionHighlighted","getState","Promise","all","get","dataResponse","data","stateDistrictWiseResponse","statesDailyResponse","stateTestResponse","sourcesResponse","zonesResponse","states","statewise","filter","find","s","ts","testTs","states_tested_data","tsMerged","sourceList","sources_list","stateTestData","zones","targets","duration","delay","translateX","easing","opacity","console","log","testObj","population","toggleShowAllDistricts","getGridRowCount","gridColumnCount","window","innerWidth","districtCount","Object","keys","length","gridRowCount","Math","ceil","animationDelay","lastupdatedtime","totaltested","isNaN","updatedon","Date","source","transform","confirmed","key","index","match","num","slice","display","gridTemplateRows","d","sort","a","b","districtB","districtA","undefined","district","cases","delta","every","day"],"mappings":"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","sourcesContent":["import Clusters from './clusters';\r\nimport DeltaBarGraph from './deltabargraph';\r\nimport Footer from './footer';\r\nimport Level from './level';\r\nimport MapExplorer from './mapexplorer';\r\nimport Minigraph from './minigraph';\r\nimport StateMeta from './statemeta';\r\nimport TimeSeriesExplorer from './timeseriesexplorer';\r\n\r\nimport {STATE_CODES, STATE_POPULATIONS} from '../constants';\r\nimport {\r\n  formatDateAbsolute,\r\n  formatNumber,\r\n  mergeTimeseries,\r\n  parseStateTimeseries,\r\n  parseStateTestData,\r\n  parseStateTestTimeseries,\r\n  parseDistrictZones,\r\n} from '../utils/commonfunctions';\r\n\r\nimport Breadcrumb from '@primer/components/lib/Breadcrumb';\r\nimport Dropdown from '@primer/components/lib/Dropdown';\r\nimport anime from 'animejs';\r\nimport axios from 'axios';\r\nimport {format, parse} from 'date-fns';\r\nimport React, {useState} from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport {Helmet} from 'react-helmet';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {Link, useParams, Redirect} from 'react-router-dom';\r\nimport {useMeasure, useEffectOnce} from 'react-use';\r\n\r\nfunction PureBreadcrumbs({stateName, stateCode, fetched, allStateData}) {\r\n  const {t} = useTranslation();\r\n\r\n  return (\r\n    <div className=\"breadcrumb\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/\">{t('Home')}</Breadcrumb.Item>\r\n        <Dropdown direction=\"w\">\r\n          <summary>\r\n            <Breadcrumb.Item href={`${stateCode}`} selected>\r\n              {t(stateName)}\r\n            </Breadcrumb.Item>\r\n            <Dropdown.Caret className=\"caret\" />\r\n          </summary>\r\n          {fetched && (\r\n            <Dropdown.Menu direction=\"se\">\r\n              {allStateData.map((state) => (\r\n                <Dropdown.Item key={state.statecode} className=\"item\">\r\n                  <Link to={`${state.statecode}`}>\r\n                    {t(STATE_CODES[state.statecode])}\r\n                  </Link>\r\n                </Dropdown.Item>\r\n              ))}\r\n            </Dropdown.Menu>\r\n          )}\r\n        </Dropdown>\r\n      </Breadcrumb>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Breadcrumbs = React.memo(PureBreadcrumbs);\r\n\r\nfunction State(props) {\r\n  const stateCode = useParams().stateCode.toUpperCase();\r\n  const stateName = STATE_CODES[stateCode];\r\n\r\n  const [allStateData, setAllStateData] = useState({});\r\n  const [fetched, setFetched] = useState(false);\r\n  const [districtZones, setDistrictZones] = useState(null);\r\n  const [timeseries, setTimeseries] = useState({});\r\n  const [stateData, setStateData] = useState(null);\r\n  const [testData, setTestData] = useState({});\r\n  const [sources, setSources] = useState({});\r\n  const [districtData, setDistrictData] = useState({});\r\n  const [mapOption, setMapOption] = useState('confirmed');\r\n  const [mapSwitcher, {width}] = useMeasure();\r\n  const [showAllDistricts, setShowAllDistricts] = useState(false);\r\n  const [regionHighlighted, setRegionHighlighted] = useState({\r\n    state: stateName,\r\n  });\r\n\r\n  useEffectOnce(() => {\r\n    getState();\r\n  });\r\n\r\n  const {t} = useTranslation();\r\n\r\n  const getState = async () => {\r\n    try {\r\n      const [\r\n        {data: dataResponse},\r\n        {data: stateDistrictWiseResponse},\r\n        {data: statesDailyResponse},\r\n        {data: stateTestResponse},\r\n        {data: sourcesResponse},\r\n        {data: zonesResponse},\r\n      ] = await Promise.all([\r\n        axios.get('https://api.covid19india.org/data.json'),\r\n        axios.get('https://api.covid19india.org/state_district_wise.json'),\r\n        axios.get('https://api.covid19india.org/states_daily.json'),\r\n        axios.get('https://api.covid19india.org/state_test_data.json'),\r\n        axios.get('https://api.covid19india.org/sources_list.json'),\r\n        axios.get('https://api.covid19india.org/zones.json'),\r\n      ]);\r\n      const states = dataResponse.statewise;\r\n      setAllStateData(states.filter((state) => state.statecode !== stateCode));\r\n      setStateData([states.find((s) => s.statecode === stateCode)]);\r\n      // Timeseries\r\n      const ts = parseStateTimeseries(statesDailyResponse)[stateCode];\r\n      const testTs = parseStateTestTimeseries(\r\n        stateTestResponse.states_tested_data\r\n      )[stateCode];\r\n      // Merge\r\n      const tsMerged = mergeTimeseries(\r\n        {[stateCode]: ts},\r\n        {[stateCode]: testTs}\r\n      );\r\n      setTimeseries(tsMerged[stateCode]);\r\n      // District data\r\n      setDistrictData({\r\n        [stateName]: stateDistrictWiseResponse[stateName],\r\n      });\r\n      const sourceList = sourcesResponse.sources_list;\r\n      setSources(sourceList.filter((state) => state.statecode === stateCode));\r\n\r\n      const stateTestData = parseStateTestData(\r\n        stateTestResponse.states_tested_data\r\n      );\r\n      setTestData({[stateName]: stateTestData[stateName]});\r\n\r\n      setDistrictZones(parseDistrictZones(zonesResponse.zones, stateName));\r\n\r\n      setFetched(true);\r\n      anime({\r\n        targets: '.highlight',\r\n        duration: 200,\r\n        delay: 3000,\r\n        translateX:\r\n          mapOption === 'confirmed'\r\n            ? `${width * 0}px`\r\n            : mapOption === 'active'\r\n            ? `${width * 0.25}px`\r\n            : mapOption === 'recovered'\r\n            ? `${width * 0.5}px`\r\n            : mapOption === 'deceased'\r\n            ? `${width * 0.75}px`\r\n            : '0px',\r\n        easing: 'spring(1, 80, 90, 10)',\r\n        opacity: 1,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const testObj = testData[stateName];\r\n  const population = STATE_POPULATIONS[stateName];\r\n\r\n  function toggleShowAllDistricts() {\r\n    setShowAllDistricts(!showAllDistricts);\r\n  }\r\n\r\n  const getGridRowCount = () => {\r\n    const gridColumnCount = window.innerWidth >= 540 ? 3 : 2;\r\n    const districtCount =\r\n      (districtData[stateName] &&\r\n        Object.keys(districtData[stateName].districtData).length) ||\r\n      0;\r\n    const gridRowCount = Math.ceil(districtCount / gridColumnCount);\r\n    return gridRowCount;\r\n  };\r\n  const gridRowCount = getGridRowCount();\r\n\r\n  if (!stateName) {\r\n    return <Redirect to=\"/\" />;\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <Helmet>\r\n          <title>\r\n            Coronavirus Outbreak in {STATE_CODES[stateCode]} - covid19india.org\r\n          </title>\r\n          <meta\r\n            name=\"title\"\r\n            content={`Coronavirus Outbreak in ${STATE_CODES[stateCode]}: Latest Map and Case Count`}\r\n          />\r\n        </Helmet>\r\n\r\n        <div className=\"State\">\r\n          <div className=\"state-left\">\r\n            <Breadcrumbs\r\n              stateName={stateName}\r\n              stateCode={stateCode}\r\n              fetched={fetched}\r\n              allStateData={allStateData}\r\n            />\r\n\r\n            <div className=\"header\">\r\n              <div\r\n                className=\"header-left fadeInUp\"\r\n                style={{animationDelay: '0.3s'}}\r\n              >\r\n                <h1>{t(stateName)}</h1>\r\n                <h5>\r\n                  Last Updated on{' '}\r\n                  {stateData && Object.keys(stateData[0]).length\r\n                    ? formatDateAbsolute(stateData[0].lastupdatedtime)\r\n                    : ''}\r\n                </h5>\r\n              </div>\r\n\r\n              <div\r\n                className=\"header-right fadeInUp\"\r\n                style={{animationDelay: '0.5s'}}\r\n              >\r\n                <h5>{t('Tested')}</h5>\r\n                <h2>{formatNumber(testObj?.totaltested)}</h2>\r\n                <h5 className=\"timestamp\">\r\n                  {!isNaN(parse(testObj?.updatedon, 'dd/MM/yyyy', new Date()))\r\n                    ? `As of ${format(\r\n                        parse(testObj?.updatedon, 'dd/MM/yyyy', new Date()),\r\n                        'dd MMM'\r\n                      )}`\r\n                    : ''}\r\n                </h5>\r\n                <h5>\r\n                  {'per '}\r\n                  {testObj?.totaltested && (\r\n                    <a href={testObj?.source} target=\"_noblank\">\r\n                      source\r\n                    </a>\r\n                  )}\r\n                </h5>\r\n              </div>\r\n            </div>\r\n\r\n            {fetched && (\r\n              <div className=\"map-switcher\" ref={mapSwitcher}>\r\n                <div\r\n                  className={`highlight ${mapOption}`}\r\n                  style={{\r\n                    transform: `translateX(${width * 0}px)`,\r\n                    opacity: 0,\r\n                  }}\r\n                ></div>\r\n                <div\r\n                  className=\"clickable\"\r\n                  onClick={() => {\r\n                    setMapOption('confirmed');\r\n                    anime({\r\n                      targets: '.highlight',\r\n                      translateX: `${width * 0}px`,\r\n                      easing: 'spring(1, 80, 90, 10)',\r\n                    });\r\n                  }}\r\n                ></div>\r\n                <div\r\n                  className=\"clickable\"\r\n                  onClick={() => {\r\n                    setMapOption('active');\r\n                    anime({\r\n                      targets: '.highlight',\r\n                      translateX: `${width * 0.25}px`,\r\n                      easing: 'spring(1, 80, 90, 10)',\r\n                    });\r\n                  }}\r\n                ></div>\r\n                <div\r\n                  className=\"clickable\"\r\n                  onClick={() => {\r\n                    setMapOption('recovered');\r\n                    anime({\r\n                      targets: '.highlight',\r\n                      translateX: `${width * 0.5}px`,\r\n                      easing: 'spring(1, 80, 90, 10)',\r\n                    });\r\n                  }}\r\n                ></div>\r\n                <div\r\n                  className=\"clickable\"\r\n                  onClick={() => {\r\n                    setMapOption('deceased');\r\n                    anime({\r\n                      targets: '.highlight',\r\n                      translateX: `${width * 0.75}px`,\r\n                      easing: 'spring(1, 80, 90, 10)',\r\n                    });\r\n                  }}\r\n                ></div>\r\n              </div>\r\n            )}\r\n\r\n            {fetched && <Level data={stateData[0]} />}\r\n            {fetched && <Minigraph timeseries={timeseries} />}\r\n            {fetched && (\r\n              <MapExplorer\r\n                mapName={stateName}\r\n                states={stateData}\r\n                districts={districtData}\r\n                zones={districtZones}\r\n                stateTestData={testData}\r\n                regionHighlighted={regionHighlighted}\r\n                setRegionHighlighted={setRegionHighlighted}\r\n                mapOption={mapOption}\r\n                isCountryLoaded={false}\r\n              />\r\n            )}\r\n\r\n            {fetched && (\r\n              <div className=\"meta-secondary\">\r\n                <div className=\"alert\">\r\n                  <Icon.AlertCircle />\r\n                  <div className=\"alert-right\">\r\n                    Awaiting district details for{' '}\r\n                    {districtData[stateName]?.districtData['Unknown']\r\n                      ?.confirmed || '0'}{' '}\r\n                    cases\r\n                  </div>\r\n                </div>\r\n                <div className=\"alert\">\r\n                  <Icon.Compass />\r\n                  <div className=\"alert-right\">\r\n                    Data collected from sources{' '}\r\n                    {sources.length > 0\r\n                      ? Object.keys(sources[0]).map((key, index) => {\r\n                          if (key.match('source') && sources[0][key] !== '') {\r\n                            const num = key.match(/\\d+/);\r\n                            return (\r\n                              <React.Fragment key={index}>\r\n                                {num > 1 ? ',' : ''}\r\n                                <a href={sources[0][key]}>{num}</a>\r\n                              </React.Fragment>\r\n                            );\r\n                          }\r\n                          return null;\r\n                        })\r\n                      : ''}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {fetched && (\r\n              <StateMeta\r\n                stateData={stateData[0]}\r\n                testObject={testObj}\r\n                population={population}\r\n                lastSevenDaysData={timeseries.slice(-7)}\r\n                totalData={allStateData.filter(\r\n                  (state) => state.statecode === 'TT'\r\n                )}\r\n              />\r\n            )}\r\n\r\n            {fetched && (\r\n              <div\r\n                className=\"Clusters fadeInUp\"\r\n                style={{animationDelay: '0.8s'}}\r\n              >\r\n                <h1>Network of Transmission</h1>\r\n                <Clusters stateCode={stateCode} />\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"state-right\">\r\n            {fetched && (\r\n              <React.Fragment>\r\n                <div\r\n                  className=\"district-bar\"\r\n                  style={!showAllDistricts ? {display: 'flex'} : {}}\r\n                >\r\n                  <div\r\n                    className=\"district-bar-left fadeInUp\"\r\n                    style={{animationDelay: '0.6s'}}\r\n                  >\r\n                    <h2 className={mapOption}>Top districts</h2>\r\n                    <div\r\n                      className={`districts ${\r\n                        showAllDistricts ? 'is-grid' : ''\r\n                      }`}\r\n                      style={\r\n                        showAllDistricts\r\n                          ? {gridTemplateRows: `repeat(${gridRowCount}, 2rem)`}\r\n                          : {}\r\n                      }\r\n                    >\r\n                      {districtData[stateName]\r\n                        ? Object.keys(districtData[stateName].districtData)\r\n                            .filter((d) => d !== 'Unknown')\r\n                            .sort((a, b) => {\r\n                              const districtB =\r\n                                districtData[stateName].districtData[b];\r\n                              const districtA =\r\n                                districtData[stateName].districtData[a];\r\n                              return (\r\n                                districtB[mapOption] - districtA[mapOption]\r\n                              );\r\n                            })\r\n                            .slice(0, showAllDistricts ? undefined : 5)\r\n                            .map((district, index) => {\r\n                              const cases =\r\n                                districtData[stateName].districtData[district];\r\n                              return (\r\n                                <div key={index} className=\"district\">\r\n                                  <h2>{cases[mapOption]}</h2>\r\n                                  <h5>{t(district)}</h5>\r\n                                  {mapOption !== 'active' && (\r\n                                    <div className=\"delta\">\r\n                                      <Icon.ArrowUp className={mapOption} />\r\n                                      <h6 className={mapOption}>\r\n                                        {cases.delta[mapOption]}\r\n                                      </h6>\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                              );\r\n                            })\r\n                        : ''}\r\n                    </div>\r\n                    {districtData[stateName] &&\r\n                      Object.keys(districtData[stateName].districtData).length >\r\n                        5 && (\r\n                        <button\r\n                          className=\"button\"\r\n                          onClick={toggleShowAllDistricts}\r\n                        >\r\n                          {showAllDistricts ? `View less` : `View all`}\r\n                        </button>\r\n                      )}\r\n                  </div>\r\n                  <div className=\"district-bar-right\">\r\n                    {(mapOption === 'confirmed' ||\r\n                      mapOption === 'deceased') && (\r\n                      <div\r\n                        className=\"happy-sign fadeInUp\"\r\n                        style={{animationDelay: '0.6s'}}\r\n                      >\r\n                        {timeseries\r\n                          .slice(-5)\r\n                          .every((day) => day[`daily${mapOption}`] === 0) && (\r\n                          <div\r\n                            className={`alert ${\r\n                              mapOption === 'confirmed' ? 'is-green' : ''\r\n                            }`}\r\n                          >\r\n                            <Icon.Smile />\r\n                            <div className=\"alert-right\">\r\n                              No new {mapOption} cases in the past five days\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                    {\r\n                      <DeltaBarGraph\r\n                        timeseries={timeseries.slice(-5)}\r\n                        caseType={`daily${mapOption}`}\r\n                      />\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <TimeSeriesExplorer timeseries={timeseries} />\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default React.memo(State);\r\n"]},"metadata":{},"sourceType":"module"}
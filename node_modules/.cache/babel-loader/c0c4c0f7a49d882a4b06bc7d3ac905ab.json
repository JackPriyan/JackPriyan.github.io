{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{Label,LabelGroup,CounterLabel}from'@primer/components';import axios from'axios';import classnames from'classnames';import produce from'immer';import L from'leaflet';import*as Knn from'leaflet-knn';import React,{useState,useEffect,useCallback}from'react';import{ExternalLink,Phone}from'react-feather';import{useEffectOnce}from'react-use';function medFilter(feature){return feature.properties.priority;}function othersFilter(feature){return!feature.properties.priority;}function getDistance(p1,p2){// p1 and p2 => [lat1, long1], [lat2, long2]\nvar phi1=p1[0]*Math.PI/180;var phi2=p2[0]*Math.PI/180;var dLambda=(p2[1]-p1[1])*Math.PI/180;var R=6371e3;var d=Math.acos(Math.sin(phi1)*Math.sin(phi2)+Math.cos(phi1)*Math.cos(phi2)*Math.cos(dLambda))*R;return Number((d/1000).toFixed(2));}// function panFilter(feature){\n//   const city = feature.properties.city\n//   const state = feature.properties.state\n//   return (city.includes(\"PAN\") && ( state.includes(\"India\") || state.includes(userState) ));\n// }\nfunction KnnResults(_ref){var userLocation=_ref.userLocation,userState=_ref.userState;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),geoData=_useState2[0],setGeoData=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),results=_useState4[0],setResults=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),categories=_useState6[0],setCategories=_useState6[1];useEffectOnce(function(){getJSON();},[]);var getJSON=useCallback(function(){axios.get('https://raw.githubusercontent.com/aswaathb/covid19india-react/publish/newResources/geoResources.json').then(function(response){setGeoData(response.data);}).catch(function(error){console.log(error);});},[]);useEffect(function(){var medKnn;var restKnn;var panKnn;var hK=5;// K nearest hospitals/labs wrt user location\nvar rK=100;// K nearest essentials wrt user location\nvar rad=10*1000;// Max distance of the K points, in meters ; aim to be  ~(avg city radius)\nif(userLocation){var _geoData$features;medKnn=new Knn(L.geoJSON(geoData,{filter:medFilter})).nearestLayer([userLocation[1],userLocation[0]],hK);restKnn=new Knn(L.geoJSON(geoData,{filter:othersFilter})).nearestLayer([userLocation[1],userLocation[0]],rK,rad);panKnn=geoData===null||geoData===void 0?void 0:(_geoData$features=geoData.features)===null||_geoData$features===void 0?void 0:_geoData$features.filter(function(feat){return feat.properties.state==='PAN India'||feat.properties.state.includes('PAN')&&feat.properties.state.includes(userState);});}var result={name:'NearestK-Essentials',type:'FeatureCollection',features:[]};if(medKnn){var i=0;for(i=0;i<medKnn.length;i++){result.features.push({type:'Feature',geometry:{type:'Point',coordinates:medKnn[i].layer.feature.geometry.coordinates},properties:{name:medKnn[i].layer.feature.properties.name,desc:medKnn[i].layer.feature.properties.desc,addr:medKnn[i].layer.feature.properties.addr,phone:medKnn[i].layer.feature.properties.phone,contact:medKnn[i].layer.feature.properties.contact,icon:medKnn[i].layer.feature.properties.icon,recordid:medKnn[i].layer.feature.properties.recordid,dist:getDistance(userLocation,medKnn[i].layer.feature.geometry.coordinates.reverse())}});}}if(restKnn){var j=0;for(j=0;j<restKnn.length;j++){result.features.push({type:'Feature',geometry:{type:'Point',coordinates:restKnn[j].layer.feature.geometry.coordinates},properties:{name:restKnn[j].layer.feature.properties.name,desc:restKnn[j].layer.feature.properties.desc,addr:restKnn[j].layer.feature.properties.addr,phone:restKnn[j].layer.feature.properties.phone,contact:restKnn[j].layer.feature.properties.contact,icon:restKnn[j].layer.feature.properties.icon,recordid:restKnn[j].layer.feature.properties.recordid,dist:getDistance(userLocation,restKnn[j].layer.feature.geometry.coordinates.reverse())}});}}if(panKnn){var k=0;for(k=0;k<panKnn.length;k++){result.features.push(panKnn[k]);}}setResults(result);},[geoData,userLocation,userState]);var toggleFilter=function toggleFilter(categoryName,newIsSelected){setCategories(produce(function(draft){draft[categoryName].isSelected=newIsSelected;}));};useEffect(function(){var categories={};if(results){results.features.map(function(feature){var _feature$properties;return feature===null||feature===void 0?void 0:(_feature$properties=feature.properties)===null||_feature$properties===void 0?void 0:_feature$properties.icon;}).reduce(function(acc,e){return acc.set(e,(acc.get(e)||0)+1);},new Map()).forEach(function(value,key,map){var categoryMeta={count:value,isSelected:true};categories[key]=categoryMeta;});}setCategories(categories);},[results]);if(results)return/*#__PURE__*/React.createElement(\"div\",{className:\"results fadeInUp\",style:{animationDelay:'0.5s'}},/*#__PURE__*/React.createElement(\"div\",{className:\"labels\"},/*#__PURE__*/React.createElement(LabelGroup,null,Object.keys(categories).map(function(categoryName){return/*#__PURE__*/React.createElement(Label,{variant:\"xl\",key:categoryName,className:classnames('label-item',{'is-selected':categories[categoryName].isSelected}),onClick:function onClick(){return toggleFilter(categoryName,!categories[categoryName].isSelected);}},categoryName,/*#__PURE__*/React.createElement(CounterLabel,{className:\"counter\"},categories[categoryName].count));}))),results===null||results===void 0?void 0:results.features.filter(function(feature){return Object.keys(categories).filter(function(categoryName){return categories[categoryName].isSelected===true;}).includes(feature.properties.icon);}).map(function(result,i){return/*#__PURE__*/React.createElement(\"div\",{key:result.properties.recordid?result.properties.recordid:i,className:\"essential-result\"},/*#__PURE__*/React.createElement(\"div\",{className:\"result-top\"},/*#__PURE__*/React.createElement(\"div\",{className:\"result-top-left\"},/*#__PURE__*/React.createElement(\"div\",{className:\"result-name\"},result.properties.name),/*#__PURE__*/React.createElement(\"div\",{className:\"result-location\"},result.properties.addr),result.properties.dist&&/*#__PURE__*/React.createElement(\"div\",{className:\"result-distance\"},result.properties.dist+' km away')),/*#__PURE__*/React.createElement(\"a\",{className:\"result-category\",href:result.properties.contact,target:\"_noblank\"},/*#__PURE__*/React.createElement(\"span\",null,result.properties.icon),/*#__PURE__*/React.createElement(ExternalLink,null))),/*#__PURE__*/React.createElement(\"div\",{className:\"result-description\"},result.properties.desc),result.properties.phone?/*#__PURE__*/React.createElement(\"a\",{className:\"result-contact\",href:\"tel:\".concat(result.properties.phone)},/*#__PURE__*/React.createElement(Phone,null),/*#__PURE__*/React.createElement(\"div\",null,result.properties.phone)):null);}));else return null;}export default KnnResults;","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/src/components/knnresults.js"],"names":["Label","LabelGroup","CounterLabel","axios","classnames","produce","L","Knn","React","useState","useEffect","useCallback","ExternalLink","Phone","useEffectOnce","medFilter","feature","properties","priority","othersFilter","getDistance","p1","p2","phi1","Math","PI","phi2","dLambda","R","d","acos","sin","cos","Number","toFixed","KnnResults","userLocation","userState","geoData","setGeoData","results","setResults","categories","setCategories","getJSON","get","then","response","data","catch","error","console","log","medKnn","restKnn","panKnn","hK","rK","rad","geoJSON","filter","nearestLayer","features","feat","state","includes","result","name","type","i","length","push","geometry","coordinates","layer","desc","addr","phone","contact","icon","recordid","dist","reverse","j","k","toggleFilter","categoryName","newIsSelected","draft","isSelected","map","reduce","acc","e","set","Map","forEach","value","key","categoryMeta","count","animationDelay","Object","keys"],"mappings":"mKAAA,OAAQA,KAAR,CAAeC,UAAf,CAA2BC,YAA3B,KAA8C,oBAA9C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,OAApB,CACA,MAAOC,CAAAA,CAAP,KAAc,SAAd,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,aAArB,CACA,MAAOC,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,CAAoCC,WAApC,KAAsD,OAAtD,CACA,OAAQC,YAAR,CAAsBC,KAAtB,KAAkC,eAAlC,CACA,OAAQC,aAAR,KAA4B,WAA5B,CAEA,QAASC,CAAAA,SAAT,CAAmBC,OAAnB,CAA4B,CAC1B,MAAOA,CAAAA,OAAO,CAACC,UAAR,CAAmBC,QAA1B,CACD,CAED,QAASC,CAAAA,YAAT,CAAsBH,OAAtB,CAA+B,CAC7B,MAAO,CAACA,OAAO,CAACC,UAAR,CAAmBC,QAA3B,CACD,CAED,QAASE,CAAAA,WAAT,CAAqBC,EAArB,CAAyBC,EAAzB,CAA6B,CAC3B;AACA,GAAMC,CAAAA,IAAI,CAAIF,EAAE,CAAC,CAAD,CAAF,CAAQG,IAAI,CAACC,EAAd,CAAoB,GAAjC,CACA,GAAMC,CAAAA,IAAI,CAAIJ,EAAE,CAAC,CAAD,CAAF,CAAQE,IAAI,CAACC,EAAd,CAAoB,GAAjC,CACA,GAAME,CAAAA,OAAO,CAAI,CAACL,EAAE,CAAC,CAAD,CAAF,CAAQD,EAAE,CAAC,CAAD,CAAX,EAAkBG,IAAI,CAACC,EAAxB,CAA8B,GAA9C,CACA,GAAMG,CAAAA,CAAC,CAAG,MAAV,CACA,GAAMC,CAAAA,CAAC,CACLL,IAAI,CAACM,IAAL,CACEN,IAAI,CAACO,GAAL,CAASR,IAAT,EAAiBC,IAAI,CAACO,GAAL,CAASL,IAAT,CAAjB,CACEF,IAAI,CAACQ,GAAL,CAAST,IAAT,EAAiBC,IAAI,CAACQ,GAAL,CAASN,IAAT,CAAjB,CAAkCF,IAAI,CAACQ,GAAL,CAASL,OAAT,CAFtC,EAGIC,CAJN,CAKA,MAAOK,CAAAA,MAAM,CAAC,CAACJ,CAAC,CAAG,IAAL,EAAWK,OAAX,CAAmB,CAAnB,CAAD,CAAb,CACD,CAED;AACA;AACA;AACA;AACA;AAEA,QAASC,CAAAA,UAAT,MAA+C,IAA1BC,CAAAA,YAA0B,MAA1BA,YAA0B,CAAZC,SAAY,MAAZA,SAAY,eACf5B,QAAQ,CAAC,EAAD,CADO,wCACtC6B,OADsC,eAC7BC,UAD6B,8BAEf9B,QAAQ,EAFO,yCAEtC+B,OAFsC,eAE7BC,UAF6B,8BAGThC,QAAQ,CAAC,EAAD,CAHC,yCAGtCiC,UAHsC,eAG1BC,aAH0B,eAK7C7B,aAAa,CAAC,UAAM,CAClB8B,OAAO,GACR,CAFY,CAEV,EAFU,CAAb,CAIA,GAAMA,CAAAA,OAAO,CAAGjC,WAAW,CAAC,UAAM,CAChCR,KAAK,CACF0C,GADH,CAEI,sGAFJ,EAIGC,IAJH,CAIQ,SAACC,QAAD,CAAc,CAClBR,UAAU,CAACQ,QAAQ,CAACC,IAAV,CAAV,CACD,CANH,EAOGC,KAPH,CAOS,SAACC,KAAD,CAAW,CAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACD,CATH,EAUD,CAX0B,CAWxB,EAXwB,CAA3B,CAaAxC,SAAS,CAAC,UAAM,CACd,GAAI2C,CAAAA,MAAJ,CACA,GAAIC,CAAAA,OAAJ,CACA,GAAIC,CAAAA,MAAJ,CAEA,GAAMC,CAAAA,EAAE,CAAG,CAAX,CAAc;AACd,GAAMC,CAAAA,EAAE,CAAG,GAAX,CAAgB;AAChB,GAAMC,CAAAA,GAAG,CAAG,GAAK,IAAjB,CAAuB;AAEvB,GAAItB,YAAJ,CAAkB,uBAChBiB,MAAM,CAAG,GAAI9C,CAAAA,GAAJ,CAAQD,CAAC,CAACqD,OAAF,CAAUrB,OAAV,CAAmB,CAACsB,MAAM,CAAE7C,SAAT,CAAnB,CAAR,EAAiD8C,YAAjD,CACP,CAACzB,YAAY,CAAC,CAAD,CAAb,CAAkBA,YAAY,CAAC,CAAD,CAA9B,CADO,CAEPoB,EAFO,CAAT,CAIAF,OAAO,CAAG,GAAI/C,CAAAA,GAAJ,CACRD,CAAC,CAACqD,OAAF,CAAUrB,OAAV,CAAmB,CAACsB,MAAM,CAAEzC,YAAT,CAAnB,CADQ,EAER0C,YAFQ,CAEK,CAACzB,YAAY,CAAC,CAAD,CAAb,CAAkBA,YAAY,CAAC,CAAD,CAA9B,CAFL,CAEyCqB,EAFzC,CAE6CC,GAF7C,CAAV,CAGAH,MAAM,CAAGjB,OAAH,SAAGA,OAAH,oCAAGA,OAAO,CAAEwB,QAAZ,4CAAG,kBAAmBF,MAAnB,CACP,SAACG,IAAD,QACEA,CAAAA,IAAI,CAAC9C,UAAL,CAAgB+C,KAAhB,GAA0B,WAA1B,EACCD,IAAI,CAAC9C,UAAL,CAAgB+C,KAAhB,CAAsBC,QAAtB,CAA+B,KAA/B,GACCF,IAAI,CAAC9C,UAAL,CAAgB+C,KAAhB,CAAsBC,QAAtB,CAA+B5B,SAA/B,CAHJ,EADO,CAAT,CAMD,CAED,GAAM6B,CAAAA,MAAM,CAAG,CACbC,IAAI,CAAE,qBADO,CAEbC,IAAI,CAAE,mBAFO,CAGbN,QAAQ,CAAE,EAHG,CAAf,CAMA,GAAIT,MAAJ,CAAY,CACV,GAAIgB,CAAAA,CAAC,CAAG,CAAR,CACA,IAAKA,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGhB,MAAM,CAACiB,MAAvB,CAA+BD,CAAC,EAAhC,CAAoC,CAClCH,MAAM,CAACJ,QAAP,CAAgBS,IAAhB,CAAqB,CACnBH,IAAI,CAAE,SADa,CAEnBI,QAAQ,CAAE,CACRJ,IAAI,CAAE,OADE,CAERK,WAAW,CAAEpB,MAAM,CAACgB,CAAD,CAAN,CAAUK,KAAV,CAAgB1D,OAAhB,CAAwBwD,QAAxB,CAAiCC,WAFtC,CAFS,CAMnBxD,UAAU,CAAE,CACVkD,IAAI,CAAEd,MAAM,CAACgB,CAAD,CAAN,CAAUK,KAAV,CAAgB1D,OAAhB,CAAwBC,UAAxB,CAAmCkD,IAD/B,CAEVQ,IAAI,CAAEtB,MAAM,CAACgB,CAAD,CAAN,CAAUK,KAAV,CAAgB1D,OAAhB,CAAwBC,UAAxB,CAAmC0D,IAF/B,CAGVC,IAAI,CAAEvB,MAAM,CAACgB,CAAD,CAAN,CAAUK,KAAV,CAAgB1D,OAAhB,CAAwBC,UAAxB,CAAmC2D,IAH/B,CAIVC,KAAK,CAAExB,MAAM,CAACgB,CAAD,CAAN,CAAUK,KAAV,CAAgB1D,OAAhB,CAAwBC,UAAxB,CAAmC4D,KAJhC,CAKVC,OAAO,CAAEzB,MAAM,CAACgB,CAAD,CAAN,CAAUK,KAAV,CAAgB1D,OAAhB,CAAwBC,UAAxB,CAAmC6D,OALlC,CAMVC,IAAI,CAAE1B,MAAM,CAACgB,CAAD,CAAN,CAAUK,KAAV,CAAgB1D,OAAhB,CAAwBC,UAAxB,CAAmC8D,IAN/B,CAOVC,QAAQ,CAAE3B,MAAM,CAACgB,CAAD,CAAN,CAAUK,KAAV,CAAgB1D,OAAhB,CAAwBC,UAAxB,CAAmC+D,QAPnC,CAQVC,IAAI,CAAE7D,WAAW,CACfgB,YADe,CAEfiB,MAAM,CAACgB,CAAD,CAAN,CAAUK,KAAV,CAAgB1D,OAAhB,CAAwBwD,QAAxB,CAAiCC,WAAjC,CAA6CS,OAA7C,EAFe,CARP,CANO,CAArB,EAoBD,CACF,CAED,GAAI5B,OAAJ,CAAa,CACX,GAAI6B,CAAAA,CAAC,CAAG,CAAR,CACA,IAAKA,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAG7B,OAAO,CAACgB,MAAxB,CAAgCa,CAAC,EAAjC,CAAqC,CACnCjB,MAAM,CAACJ,QAAP,CAAgBS,IAAhB,CAAqB,CACnBH,IAAI,CAAE,SADa,CAEnBI,QAAQ,CAAE,CACRJ,IAAI,CAAE,OADE,CAERK,WAAW,CAAEnB,OAAO,CAAC6B,CAAD,CAAP,CAAWT,KAAX,CAAiB1D,OAAjB,CAAyBwD,QAAzB,CAAkCC,WAFvC,CAFS,CAMnBxD,UAAU,CAAE,CACVkD,IAAI,CAAEb,OAAO,CAAC6B,CAAD,CAAP,CAAWT,KAAX,CAAiB1D,OAAjB,CAAyBC,UAAzB,CAAoCkD,IADhC,CAEVQ,IAAI,CAAErB,OAAO,CAAC6B,CAAD,CAAP,CAAWT,KAAX,CAAiB1D,OAAjB,CAAyBC,UAAzB,CAAoC0D,IAFhC,CAGVC,IAAI,CAAEtB,OAAO,CAAC6B,CAAD,CAAP,CAAWT,KAAX,CAAiB1D,OAAjB,CAAyBC,UAAzB,CAAoC2D,IAHhC,CAIVC,KAAK,CAAEvB,OAAO,CAAC6B,CAAD,CAAP,CAAWT,KAAX,CAAiB1D,OAAjB,CAAyBC,UAAzB,CAAoC4D,KAJjC,CAKVC,OAAO,CAAExB,OAAO,CAAC6B,CAAD,CAAP,CAAWT,KAAX,CAAiB1D,OAAjB,CAAyBC,UAAzB,CAAoC6D,OALnC,CAMVC,IAAI,CAAEzB,OAAO,CAAC6B,CAAD,CAAP,CAAWT,KAAX,CAAiB1D,OAAjB,CAAyBC,UAAzB,CAAoC8D,IANhC,CAOVC,QAAQ,CAAE1B,OAAO,CAAC6B,CAAD,CAAP,CAAWT,KAAX,CAAiB1D,OAAjB,CAAyBC,UAAzB,CAAoC+D,QAPpC,CAQVC,IAAI,CAAE7D,WAAW,CACfgB,YADe,CAEfkB,OAAO,CAAC6B,CAAD,CAAP,CAAWT,KAAX,CAAiB1D,OAAjB,CAAyBwD,QAAzB,CAAkCC,WAAlC,CAA8CS,OAA9C,EAFe,CARP,CANO,CAArB,EAoBD,CACF,CAED,GAAI3B,MAAJ,CAAY,CACV,GAAI6B,CAAAA,CAAC,CAAG,CAAR,CACA,IAAKA,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAG7B,MAAM,CAACe,MAAvB,CAA+Bc,CAAC,EAAhC,CAAoC,CAClClB,MAAM,CAACJ,QAAP,CAAgBS,IAAhB,CAAqBhB,MAAM,CAAC6B,CAAD,CAA3B,EACD,CACF,CAED3C,UAAU,CAACyB,MAAD,CAAV,CACD,CA3FQ,CA2FN,CAAC5B,OAAD,CAAUF,YAAV,CAAwBC,SAAxB,CA3FM,CAAT,CA6FA,GAAMgD,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,YAAD,CAAeC,aAAf,CAAiC,CACpD5C,aAAa,CACXtC,OAAO,CAAC,SAACmF,KAAD,CAAW,CACjBA,KAAK,CAACF,YAAD,CAAL,CAAoBG,UAApB,CAAiCF,aAAjC,CACD,CAFM,CADI,CAAb,CAKD,CAND,CAQA7E,SAAS,CAAC,UAAM,CACd,GAAMgC,CAAAA,UAAU,CAAG,EAAnB,CACA,GAAIF,OAAJ,CAAa,CACXA,OAAO,CAACsB,QAAR,CACG4B,GADH,CACO,SAAU1E,OAAV,CAAmB,yBACtB,MAAOA,CAAAA,OAAP,SAAOA,OAAP,sCAAOA,OAAO,CAAEC,UAAhB,8CAAO,oBAAqB8D,IAA5B,CACD,CAHH,EAIGY,MAJH,CAIU,SAACC,GAAD,CAAMC,CAAN,QAAYD,CAAAA,GAAG,CAACE,GAAJ,CAAQD,CAAR,CAAW,CAACD,GAAG,CAAC/C,GAAJ,CAAQgD,CAAR,GAAc,CAAf,EAAoB,CAA/B,CAAZ,EAJV,CAIyD,GAAIE,CAAAA,GAAJ,EAJzD,EAKGC,OALH,CAKW,SAACC,KAAD,CAAQC,GAAR,CAAaR,GAAb,CAAqB,CAC5B,GAAMS,CAAAA,YAAY,CAAG,CAACC,KAAK,CAAEH,KAAR,CAAeR,UAAU,CAAE,IAA3B,CAArB,CACA/C,UAAU,CAACwD,GAAD,CAAV,CAAkBC,YAAlB,CACD,CARH,EASD,CACDxD,aAAa,CAACD,UAAD,CAAb,CACD,CAdQ,CAcN,CAACF,OAAD,CAdM,CAAT,CAgBA,GAAIA,OAAJ,CACE,mBACE,2BAAK,SAAS,CAAC,kBAAf,CAAkC,KAAK,CAAE,CAAC6D,cAAc,CAAE,MAAjB,CAAzC,eACE,2BAAK,SAAS,CAAC,QAAf,eACE,oBAAC,UAAD,MACGC,MAAM,CAACC,IAAP,CAAY7D,UAAZ,EAAwBgD,GAAxB,CAA4B,SAACJ,YAAD,qBAC3B,oBAAC,KAAD,EACE,OAAO,CAAC,IADV,CAEE,GAAG,CAAEA,YAFP,CAGE,SAAS,CAAElF,UAAU,CAAC,YAAD,CAAe,CAClC,cAAesC,UAAU,CAAC4C,YAAD,CAAV,CAAyBG,UADN,CAAf,CAHvB,CAME,OAAO,CAAE,yBACPJ,CAAAA,YAAY,CACVC,YADU,CAEV,CAAC5C,UAAU,CAAC4C,YAAD,CAAV,CAAyBG,UAFhB,CADL,EANX,EAaGH,YAbH,cAcE,oBAAC,YAAD,EAAc,SAAS,CAAC,SAAxB,EACG5C,UAAU,CAAC4C,YAAD,CAAV,CAAyBc,KAD5B,CAdF,CAD2B,EAA5B,CADH,CADF,CADF,CA0BG5D,OA1BH,SA0BGA,OA1BH,iBA0BGA,OAAO,CAAEsB,QAAT,CACEF,MADF,CACS,SAAC5C,OAAD,CAAa,CACnB,MAAOsF,CAAAA,MAAM,CAACC,IAAP,CAAY7D,UAAZ,EACJkB,MADI,CAEH,SAAC0B,YAAD,QAAkB5C,CAAAA,UAAU,CAAC4C,YAAD,CAAV,CAAyBG,UAAzB,GAAwC,IAA1D,EAFG,EAIJxB,QAJI,CAIKjD,OAAO,CAACC,UAAR,CAAmB8D,IAJxB,CAAP,CAKD,CAPF,EAQEW,GARF,CAQM,SAACxB,MAAD,CAASG,CAAT,qBACH,2BACE,GAAG,CAAEH,MAAM,CAACjD,UAAP,CAAkB+D,QAAlB,CAA6Bd,MAAM,CAACjD,UAAP,CAAkB+D,QAA/C,CAA0DX,CADjE,CAEE,SAAS,CAAC,kBAFZ,eAIE,2BAAK,SAAS,CAAC,YAAf,eACE,2BAAK,SAAS,CAAC,iBAAf,eACE,2BAAK,SAAS,CAAC,aAAf,EAA8BH,MAAM,CAACjD,UAAP,CAAkBkD,IAAhD,CADF,cAEE,2BAAK,SAAS,CAAC,iBAAf,EACGD,MAAM,CAACjD,UAAP,CAAkB2D,IADrB,CAFF,CAKGV,MAAM,CAACjD,UAAP,CAAkBgE,IAAlB,eACC,2BAAK,SAAS,CAAC,iBAAf,EACGf,MAAM,CAACjD,UAAP,CAAkBgE,IAAlB,CAAyB,UAD5B,CANJ,CADF,cAYE,yBACE,SAAS,CAAC,iBADZ,CAEE,IAAI,CAAEf,MAAM,CAACjD,UAAP,CAAkB6D,OAF1B,CAGE,MAAM,CAAC,UAHT,eAKE,gCAAOZ,MAAM,CAACjD,UAAP,CAAkB8D,IAAzB,CALF,cAME,oBAAC,YAAD,MANF,CAZF,CAJF,cAyBE,2BAAK,SAAS,CAAC,oBAAf,EAAqCb,MAAM,CAACjD,UAAP,CAAkB0D,IAAvD,CAzBF,CA0BGT,MAAM,CAACjD,UAAP,CAAkB4D,KAAlB,cACC,yBACE,SAAS,CAAC,gBADZ,CAEE,IAAI,eAASX,MAAM,CAACjD,UAAP,CAAkB4D,KAA3B,CAFN,eAIE,oBAAC,KAAD,MAJF,cAKE,+BAAMX,MAAM,CAACjD,UAAP,CAAkB4D,KAAxB,CALF,CADD,CAQG,IAlCN,CADG,EARN,CA1BH,CADF,CADF,IA4EK,OAAO,KAAP,CACN,CAED,cAAe1C,CAAAA,UAAf","sourcesContent":["import {Label, LabelGroup, CounterLabel} from '@primer/components';\r\nimport axios from 'axios';\r\nimport classnames from 'classnames';\r\nimport produce from 'immer';\r\nimport L from 'leaflet';\r\nimport * as Knn from 'leaflet-knn';\r\nimport React, {useState, useEffect, useCallback} from 'react';\r\nimport {ExternalLink, Phone} from 'react-feather';\r\nimport {useEffectOnce} from 'react-use';\r\n\r\nfunction medFilter(feature) {\r\n  return feature.properties.priority;\r\n}\r\n\r\nfunction othersFilter(feature) {\r\n  return !feature.properties.priority;\r\n}\r\n\r\nfunction getDistance(p1, p2) {\r\n  // p1 and p2 => [lat1, long1], [lat2, long2]\r\n  const phi1 = (p1[0] * Math.PI) / 180;\r\n  const phi2 = (p2[0] * Math.PI) / 180;\r\n  const dLambda = ((p2[1] - p1[1]) * Math.PI) / 180;\r\n  const R = 6371e3;\r\n  const d =\r\n    Math.acos(\r\n      Math.sin(phi1) * Math.sin(phi2) +\r\n        Math.cos(phi1) * Math.cos(phi2) * Math.cos(dLambda)\r\n    ) * R;\r\n  return Number((d / 1000).toFixed(2));\r\n}\r\n\r\n// function panFilter(feature){\r\n//   const city = feature.properties.city\r\n//   const state = feature.properties.state\r\n//   return (city.includes(\"PAN\") && ( state.includes(\"India\") || state.includes(userState) ));\r\n// }\r\n\r\nfunction KnnResults({userLocation, userState}) {\r\n  const [geoData, setGeoData] = useState([]);\r\n  const [results, setResults] = useState();\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  useEffectOnce(() => {\r\n    getJSON();\r\n  }, []);\r\n\r\n  const getJSON = useCallback(() => {\r\n    axios\r\n      .get(\r\n        'https://raw.githubusercontent.com/aswaathb/covid19india-react/publish/newResources/geoResources.json'\r\n      )\r\n      .then((response) => {\r\n        setGeoData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let medKnn;\r\n    let restKnn;\r\n    let panKnn;\r\n\r\n    const hK = 5; // K nearest hospitals/labs wrt user location\r\n    const rK = 100; // K nearest essentials wrt user location\r\n    const rad = 10 * 1000; // Max distance of the K points, in meters ; aim to be  ~(avg city radius)\r\n\r\n    if (userLocation) {\r\n      medKnn = new Knn(L.geoJSON(geoData, {filter: medFilter})).nearestLayer(\r\n        [userLocation[1], userLocation[0]],\r\n        hK\r\n      );\r\n      restKnn = new Knn(\r\n        L.geoJSON(geoData, {filter: othersFilter})\r\n      ).nearestLayer([userLocation[1], userLocation[0]], rK, rad);\r\n      panKnn = geoData?.features?.filter(\r\n        (feat) =>\r\n          feat.properties.state === 'PAN India' ||\r\n          (feat.properties.state.includes('PAN') &&\r\n            feat.properties.state.includes(userState))\r\n      );\r\n    }\r\n\r\n    const result = {\r\n      name: 'NearestK-Essentials',\r\n      type: 'FeatureCollection',\r\n      features: [],\r\n    };\r\n\r\n    if (medKnn) {\r\n      let i = 0;\r\n      for (i = 0; i < medKnn.length; i++) {\r\n        result.features.push({\r\n          type: 'Feature',\r\n          geometry: {\r\n            type: 'Point',\r\n            coordinates: medKnn[i].layer.feature.geometry.coordinates,\r\n          },\r\n          properties: {\r\n            name: medKnn[i].layer.feature.properties.name,\r\n            desc: medKnn[i].layer.feature.properties.desc,\r\n            addr: medKnn[i].layer.feature.properties.addr,\r\n            phone: medKnn[i].layer.feature.properties.phone,\r\n            contact: medKnn[i].layer.feature.properties.contact,\r\n            icon: medKnn[i].layer.feature.properties.icon,\r\n            recordid: medKnn[i].layer.feature.properties.recordid,\r\n            dist: getDistance(\r\n              userLocation,\r\n              medKnn[i].layer.feature.geometry.coordinates.reverse()\r\n            ),\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    if (restKnn) {\r\n      let j = 0;\r\n      for (j = 0; j < restKnn.length; j++) {\r\n        result.features.push({\r\n          type: 'Feature',\r\n          geometry: {\r\n            type: 'Point',\r\n            coordinates: restKnn[j].layer.feature.geometry.coordinates,\r\n          },\r\n          properties: {\r\n            name: restKnn[j].layer.feature.properties.name,\r\n            desc: restKnn[j].layer.feature.properties.desc,\r\n            addr: restKnn[j].layer.feature.properties.addr,\r\n            phone: restKnn[j].layer.feature.properties.phone,\r\n            contact: restKnn[j].layer.feature.properties.contact,\r\n            icon: restKnn[j].layer.feature.properties.icon,\r\n            recordid: restKnn[j].layer.feature.properties.recordid,\r\n            dist: getDistance(\r\n              userLocation,\r\n              restKnn[j].layer.feature.geometry.coordinates.reverse()\r\n            ),\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    if (panKnn) {\r\n      let k = 0;\r\n      for (k = 0; k < panKnn.length; k++) {\r\n        result.features.push(panKnn[k]);\r\n      }\r\n    }\r\n\r\n    setResults(result);\r\n  }, [geoData, userLocation, userState]);\r\n\r\n  const toggleFilter = (categoryName, newIsSelected) => {\r\n    setCategories(\r\n      produce((draft) => {\r\n        draft[categoryName].isSelected = newIsSelected;\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const categories = {};\r\n    if (results) {\r\n      results.features\r\n        .map(function (feature) {\r\n          return feature?.properties?.icon;\r\n        })\r\n        .reduce((acc, e) => acc.set(e, (acc.get(e) || 0) + 1), new Map())\r\n        .forEach((value, key, map) => {\r\n          const categoryMeta = {count: value, isSelected: true};\r\n          categories[key] = categoryMeta;\r\n        });\r\n    }\r\n    setCategories(categories);\r\n  }, [results]);\r\n\r\n  if (results)\r\n    return (\r\n      <div className=\"results fadeInUp\" style={{animationDelay: '0.5s'}}>\r\n        <div className=\"labels\">\r\n          <LabelGroup>\r\n            {Object.keys(categories).map((categoryName) => (\r\n              <Label\r\n                variant=\"xl\"\r\n                key={categoryName}\r\n                className={classnames('label-item', {\r\n                  'is-selected': categories[categoryName].isSelected,\r\n                })}\r\n                onClick={() =>\r\n                  toggleFilter(\r\n                    categoryName,\r\n                    !categories[categoryName].isSelected\r\n                  )\r\n                }\r\n              >\r\n                {categoryName}\r\n                <CounterLabel className=\"counter\">\r\n                  {categories[categoryName].count}\r\n                </CounterLabel>\r\n              </Label>\r\n            ))}\r\n          </LabelGroup>\r\n        </div>\r\n\r\n        {results?.features\r\n          .filter((feature) => {\r\n            return Object.keys(categories)\r\n              .filter(\r\n                (categoryName) => categories[categoryName].isSelected === true\r\n              )\r\n              .includes(feature.properties.icon);\r\n          })\r\n          .map((result, i) => (\r\n            <div\r\n              key={result.properties.recordid ? result.properties.recordid : i}\r\n              className=\"essential-result\"\r\n            >\r\n              <div className=\"result-top\">\r\n                <div className=\"result-top-left\">\r\n                  <div className=\"result-name\">{result.properties.name}</div>\r\n                  <div className=\"result-location\">\r\n                    {result.properties.addr}\r\n                  </div>\r\n                  {result.properties.dist && (\r\n                    <div className=\"result-distance\">\r\n                      {result.properties.dist + ' km away'}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <a\r\n                  className=\"result-category\"\r\n                  href={result.properties.contact}\r\n                  target=\"_noblank\"\r\n                >\r\n                  <span>{result.properties.icon}</span>\r\n                  <ExternalLink />\r\n                </a>\r\n              </div>\r\n              <div className=\"result-description\">{result.properties.desc}</div>\r\n              {result.properties.phone ? (\r\n                <a\r\n                  className=\"result-contact\"\r\n                  href={`tel:${result.properties.phone}`}\r\n                >\r\n                  <Phone />\r\n                  <div>{result.properties.phone}</div>\r\n                </a>\r\n              ) : null}\r\n            </div>\r\n          ))}\r\n      </div>\r\n    );\r\n  else return null;\r\n}\r\n\r\nexport default KnnResults;\r\n"]},"metadata":{},"sourceType":"module"}
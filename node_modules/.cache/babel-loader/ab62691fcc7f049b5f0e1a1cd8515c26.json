{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\src\\\\components\\\\timeseries.js\";\nimport { testedToolTip } from './tooltips';\nimport { sliceTimeseriesFromEnd, formatNumber, formatTimeseriesDate, formatTimeseriesTickX } from '../utils/commonfunctions';\nimport { useResizeObserver } from '../utils/hooks';\nimport * as d3 from 'd3';\nimport { addDays, subDays } from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst isEqual = (prevProps, currProps) => {\n  if (!currProps.isIntersecting) return true;\n  if (!prevProps.isIntersecting) return false;\n\n  if (!equal(currProps.chartType, prevProps.chartType)) {\n    return false;\n  }\n\n  if (!equal(currProps.mode, prevProps.mode)) {\n    return false;\n  }\n\n  if (!equal(currProps.logMode, prevProps.logMode)) {\n    return false;\n  }\n\n  if (!equal(currProps.stateCode, prevProps.stateCode)) {\n    return false;\n  }\n\n  return true;\n};\n\nfunction TimeSeries({\n  timeseriesProp,\n  chartType,\n  mode,\n  logMode,\n  stateCode\n}) {\n  const {\n    t\n  } = useTranslation();\n  const [lastDaysCount, setLastDaysCount] = useState(window.innerWidth > 512 ? Infinity : 30);\n  const [timeseries, setTimeseries] = useState({});\n  const [datapoint, setDatapoint] = useState({});\n  const [index, setIndex] = useState(0);\n  const [moving, setMoving] = useState(false);\n  const svgRef1 = useRef();\n  const svgRef2 = useRef();\n  const svgRef3 = useRef();\n  const svgRef4 = useRef();\n  const svgRef5 = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  const transformTimeSeries = useCallback(timeseries => {\n    if (timeseries.length > 1) {\n      const slicedTimeseries = sliceTimeseriesFromEnd(timeseries, lastDaysCount);\n      setIndex(slicedTimeseries.length - 1);\n      setTimeseries(slicedTimeseries);\n    }\n  }, [lastDaysCount]);\n  useEffect(() => {\n    transformTimeSeries(timeseriesProp);\n  }, [lastDaysCount, timeseriesProp, transformTimeSeries]);\n  const graphData = useCallback(timeseries => {\n    const {\n      width,\n      height\n    } = dimensions || wrapperRef.current.getBoundingClientRect(); // Margins\n\n    const margin = {\n      top: 15,\n      right: 35,\n      bottom: 25,\n      left: 25\n    };\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n    const T = timeseries.length;\n    const yBufferTop = 1.2;\n    const yBufferBottom = 1.1;\n    setDatapoint(timeseries[T - 1]);\n    setIndex(T - 1);\n    const svg1 = d3.select(svgRef1.current);\n    const svg2 = d3.select(svgRef2.current);\n    const svg3 = d3.select(svgRef3.current);\n    const svg4 = d3.select(svgRef4.current);\n    const svg5 = d3.select(svgRef5.current);\n    const dateMin = subDays(timeseries[0].date, 1);\n    const dateMax = addDays(timeseries[T - 1].date, 1);\n    const xScale = d3.scaleTime().clamp(true).domain([dateMin, dateMax]).range([margin.left, chartRight]); // Number of x-axis ticks\n\n    const numTicksX = width < 480 ? 4 : 7;\n\n    const xAxis = g => g.attr('class', 'x-axis').call(d3.axisBottom(xScale).ticks(numTicksX).tickFormat(tick => {\n      return formatTimeseriesTickX(tick);\n    }));\n\n    const xAxis2 = (g, yScale) => {\n      g.attr('class', 'x-axis2').call(d3.axisBottom(xScale).tickValues([]).tickSize(0)).select('.domain').style('transform', `translateY(${yScale(0)}px)`);\n      if (yScale(0) !== chartBottom) g.select('.domain').attr('opacity', 0.4);else g.select('.domain').attr('opacity', 0);\n    };\n\n    const yAxis = (g, yScale) => g.attr('class', 'y-axis').call(d3.axisRight(yScale).ticks(4, '0~s').tickPadding(5)); // Arrays of objects\n\n\n    const plotTotal = chartType === 1;\n    const dataTypesTotal = ['totalconfirmed', 'totalactive', 'totalrecovered', 'totaldeceased', 'totaltested'];\n    const dataTypesDaily = ['dailyconfirmed', 'dailyactive', 'dailyrecovered', 'dailydeceased', 'dailytested'];\n    const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d', '#201aa2'];\n    const svgArray = [svg1, svg2, svg3, svg4, svg5];\n    let yScales;\n\n    if (plotTotal) {\n      const uniformScaleMin = d3.min(timeseries, d => Math.min(d.totalactive, d.totalrecovered, d.totaldeceased));\n      const uniformScaleMax = d3.max(timeseries, d => d.totalconfirmed);\n      const yScaleUniformLinear = d3.scaleLinear().clamp(true).domain([uniformScaleMin, Math.max(1, yBufferTop * uniformScaleMax)]).nice().range([chartBottom, margin.top]);\n      const yScaleUniformLog = d3.scaleLog().clamp(true).domain([Math.max(1, uniformScaleMin), Math.max(10, yBufferTop * uniformScaleMax)]).nice().range([chartBottom, margin.top]);\n      yScales = dataTypesTotal.map(type => {\n        const yScaleLinear = d3.scaleLinear().clamp(true).domain([d3.min(timeseries, d => d[type]), Math.max(1, yBufferTop * d3.max(timeseries, d => d[type]))]).nice().range([chartBottom, margin.top]);\n        const yScaleLog = d3.scaleLog().clamp(true).domain([Math.max(1, d3.min(timeseries, d => d[type])), Math.max(10, yBufferTop * d3.max(timeseries, d => d[type]))]).nice().range([chartBottom, margin.top]);\n        if (mode && type !== 'totaltested') return logMode ? yScaleUniformLog : yScaleUniformLinear;else return logMode ? yScaleLog : yScaleLinear;\n      });\n    } else {\n      const yScaleDailyUniform = d3.scaleLinear().clamp(true).domain([yBufferBottom * Math.min(0, d3.min(timeseries, d => d.dailyactive)), Math.max(1, yBufferTop * d3.max(timeseries, d => Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)))]).nice().range([chartBottom, margin.top]);\n      yScales = dataTypesDaily.map(type => {\n        if (mode && type !== 'dailytested') return yScaleDailyUniform;\n        const yScaleLinear = d3.scaleLinear().clamp(true).domain([yBufferBottom * Math.min(0, d3.min(timeseries, d => d[type])), Math.max(1, yBufferTop * d3.max(timeseries, d => d[type]))]).nice().range([chartBottom, margin.top]);\n        return yScaleLinear;\n      });\n    }\n    /* Focus dots */\n\n\n    const focus = svgArray.map((svg, i) => {\n      return svg.selectAll('.focus').data([timeseries[T - 1]], d => d.date).join(enter => enter.append('circle').attr('cx', d => xScale(d.date))).attr('class', 'focus').attr('fill', colors[i]).attr('stroke', colors[i]).attr('r', 4);\n    });\n\n    function mousemove() {\n      const xm = d3.mouse(this)[0];\n      const date = xScale.invert(xm);\n      const bisectDate = d3.bisector(d => d.date).left;\n      let i = bisectDate(timeseries, date, 1);\n\n      if (0 <= i && i < T) {\n        if (date - timeseries[i - 1].date < timeseries[i].date - date) --i;\n        setDatapoint(timeseries[i]);\n        setIndex(i);\n        setMoving(true);\n        const d = timeseries[i];\n        focus.forEach((f, j) => {\n          const yScale = yScales[j];\n          const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n          if (!isNaN(d[type])) f.attr('cx', xScale(d.date)).attr('cy', yScale(d[type])).attr('opacity', 1);else f.attr('opacity', 0);\n        });\n      }\n    }\n\n    function mouseout() {\n      setDatapoint(timeseries[T - 1]);\n      setIndex(T - 1);\n      setMoving(false);\n      focus.forEach((f, j) => {\n        const yScale = yScales[j];\n        const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n        if (!isNaN(timeseries[T - 1][type])) f.attr('cx', xScale(timeseries[T - 1].date)).attr('cy', yScale(timeseries[T - 1][type])).attr('opacity', 1);else f.attr('opacity', 0);\n      });\n    }\n    /* Begin drawing charts */\n\n\n    svgArray.forEach((svg, i) => {\n      // Transition interval\n      const t = svg.transition().duration(500);\n      const typeTotal = dataTypesTotal[i];\n      const typeDaily = dataTypesDaily[i];\n      const type = plotTotal ? typeTotal : typeDaily;\n      const filteredTimeseries = timeseries.filter(d => !isNaN(d[type]));\n      const color = colors[i];\n      const yScale = yScales[i];\n      /* X axis */\n\n      svg.select('.x-axis').style('transform', `translateY(${chartBottom}px)`).transition(t).call(xAxis);\n      svg.select('.x-axis2').transition(t).call(xAxis2, yScale);\n      /* Y axis */\n\n      svg.select('.y-axis').style('transform', `translateX(${chartRight}px)`).transition(t).call(yAxis, yScale);\n      /* Path dots */\n\n      svg.selectAll('.dot').data(filteredTimeseries, d => d.date).join(enter => enter.append('circle').attr('cy', chartBottom).attr('cx', d => xScale(d.date))).attr('class', 'dot').attr('fill', color).attr('stroke', color).attr('r', 2).transition(t).attr('cx', d => xScale(d.date)).attr('cy', d => yScale(d[type]));\n      if (!isNaN(timeseries[T - 1][type])) focus[i].transition(t).attr('cx', d => xScale(d.date)).attr('cy', d => yScale(d[type])).attr('opacity', 1);else focus[i].transition(t).attr('opacity', 0);\n\n      if (plotTotal) {\n        /* TOTAL TRENDS */\n        svg.selectAll('.stem').remove();\n        const path = svg.selectAll('.trend').data([[...filteredTimeseries].reverse()]).join('path').attr('class', 'trend').attr('fill', 'none').attr('stroke', color + '99').attr('stroke-width', 4); // HACK\n        // Path interpolation is non-trivial. Ideally, a custom path tween\n        // function should be defined which takes care that old path dots\n        // transition synchronously along with the path transition. This hack\n        // simulates that behaviour.\n\n        if (path.attr('d')) {\n          const n = path.node().getTotalLength();\n          const p = path.node().getPointAtLength(n); // Append points at end of path for better interpolation\n\n          path.attr('d', () => path.attr('d') + `L${p.x},${p.y}`.repeat(3 * T));\n        }\n\n        path.transition(t).attr('opacity', plotTotal ? 1 : 0).attr('d', d3.line().x(d => xScale(d.date)).y(d => yScale(d[typeTotal])).curve(d3.curveMonotoneX));\n      } else {\n        /* DAILY TRENDS */\n        svg.selectAll('.trend').remove();\n        svg.selectAll('.stem').data(filteredTimeseries, d => d.date).join(enter => enter.append('line').attr('x1', d => xScale(d.date)).attr('y1', chartBottom).attr('x2', d => xScale(d.date)).attr('y2', chartBottom)).attr('class', 'stem').style('stroke', color + '99').style('stroke-width', 4).transition(t).attr('x1', d => xScale(d.date)).attr('y1', yScale(0)).attr('x2', d => xScale(d.date)).attr('y2', d => yScale(d[typeDaily]));\n      }\n\n      svg.on('mousemove', mousemove).on('touchmove', mousemove).on('mouseout', mouseout).on('touchend', mouseout);\n    });\n  }, [chartType, dimensions, logMode, mode]);\n  useEffect(() => {\n    if (timeseries.length > 1) {\n      graphData(timeseries);\n    }\n  }, [timeseries, graphData]);\n  const dateStr = datapoint.date ? formatTimeseriesDate(datapoint.date) : '';\n  const chartKey1 = chartType === 1 ? 'totalconfirmed' : 'dailyconfirmed';\n  const chartKey2 = chartType === 1 ? 'totalactive' : 'dailyactive';\n  const chartKey3 = chartType === 1 ? 'totalrecovered' : 'dailyrecovered';\n  const chartKey4 = chartType === 1 ? 'totaldeceased' : 'dailydeceased';\n  const chartKey5 = chartType === 1 ? 'totaltested' : 'dailytested'; // Function for calculate increased/decreased count for each type of data\n\n  const currentStatusCount = chartType => {\n    if (timeseries.length <= 0 || index <= 0 || index >= timeseries.length) return '';\n    const currentDiff = timeseries[index][chartType] - timeseries[index - 1][chartType];\n    const formatedDiff = formatNumber(currentDiff);\n    return currentDiff >= 0 ? `+${formatedDiff}` : formatedDiff;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TimeSeries fadeInUp\",\n    style: {\n      animationDelay: '2.7s'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svg-parent\",\n    ref: wrapperRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: `${!moving ? 'title' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 13\n    }\n  }, t('Confirmed')), /*#__PURE__*/React.createElement(\"h5\", {\n    className: `${moving ? 'title' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 13\n    }\n  }, `${dateStr}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 15\n    }\n  }, formatNumber(datapoint[chartKey1])), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 15\n    }\n  }, currentStatusCount(chartKey1)))), /*#__PURE__*/React.createElement(\"svg\", {\n    ref: svgRef1,\n    preserveAspectRatio: \"xMidYMid meet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    className: \"x-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"x-axis2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"y-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svg-parent is-blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats is-blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: `${!moving ? 'title' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 13\n    }\n  }, t('Active')), /*#__PURE__*/React.createElement(\"h5\", {\n    className: `${moving ? 'title' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 13\n    }\n  }, `${dateStr}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 15\n    }\n  }, formatNumber(datapoint[chartKey2])), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 15\n    }\n  }, currentStatusCount(chartKey2)))), /*#__PURE__*/React.createElement(\"svg\", {\n    ref: svgRef2,\n    preserveAspectRatio: \"xMidYMid meet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    className: \"x-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"x-axis2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"y-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svg-parent is-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats is-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: `${!moving ? 'title' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 13\n    }\n  }, t('Recovered')), /*#__PURE__*/React.createElement(\"h5\", {\n    className: `${moving ? 'title' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 13\n    }\n  }, `${dateStr}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 15\n    }\n  }, formatNumber(datapoint[chartKey3])), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 15\n    }\n  }, currentStatusCount(chartKey3)))), /*#__PURE__*/React.createElement(\"svg\", {\n    ref: svgRef3,\n    preserveAspectRatio: \"xMidYMid meet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    className: \"x-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"x-axis2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"y-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svg-parent is-gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats is-gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: `${!moving ? 'title' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 13\n    }\n  }, t('Deceased')), /*#__PURE__*/React.createElement(\"h5\", {\n    className: `${moving ? 'title' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 13\n    }\n  }, `${dateStr}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 15\n    }\n  }, formatNumber(datapoint[chartKey4])), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 15\n    }\n  }, currentStatusCount(chartKey4)))), /*#__PURE__*/React.createElement(\"svg\", {\n    ref: svgRef4,\n    preserveAspectRatio: \"xMidYMid meet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    className: \"x-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"x-axis2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"y-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svg-parent is-purple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats is-purple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: `${!moving ? 'title' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 13\n    }\n  }, t('Tested'), \" \", stateCode === 'TT' ? testedToolTip : ''), /*#__PURE__*/React.createElement(\"h5\", {\n    className: `${moving ? 'title' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 13\n    }\n  }, `${dateStr}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 15\n    }\n  }, formatNumber(datapoint[chartKey5])), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 15\n    }\n  }, currentStatusCount(chartKey5)))), /*#__PURE__*/React.createElement(\"svg\", {\n    ref: svgRef5,\n    preserveAspectRatio: \"xMidYMid meet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    className: \"x-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"x-axis2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"y-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pills\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setLastDaysCount(Infinity),\n    className: lastDaysCount === Infinity ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 9\n    }\n  }, t('Beginning')), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setLastDaysCount(30),\n    className: lastDaysCount === 30 ? 'selected' : '',\n    \"aria-label\": \"1 month\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 9\n    }\n  }, `1 ${t('Month')}`), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setLastDaysCount(14),\n    className: lastDaysCount === 14 ? 'selected' : '',\n    \"aria-label\": \"14 days\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 9\n    }\n  }, `2 ${t('Weeks')}`)));\n}\n\nexport default React.memo(TimeSeries, isEqual);","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/src/components/timeseries.js"],"names":["testedToolTip","sliceTimeseriesFromEnd","formatNumber","formatTimeseriesDate","formatTimeseriesTickX","useResizeObserver","d3","addDays","subDays","equal","React","useState","useEffect","useRef","useCallback","useTranslation","isEqual","prevProps","currProps","isIntersecting","chartType","mode","logMode","stateCode","TimeSeries","timeseriesProp","t","lastDaysCount","setLastDaysCount","window","innerWidth","Infinity","timeseries","setTimeseries","datapoint","setDatapoint","index","setIndex","moving","setMoving","svgRef1","svgRef2","svgRef3","svgRef4","svgRef5","wrapperRef","dimensions","transformTimeSeries","length","slicedTimeseries","graphData","width","height","current","getBoundingClientRect","margin","top","right","bottom","left","chartRight","chartBottom","T","yBufferTop","yBufferBottom","svg1","select","svg2","svg3","svg4","svg5","dateMin","date","dateMax","xScale","scaleTime","clamp","domain","range","numTicksX","xAxis","g","attr","call","axisBottom","ticks","tickFormat","tick","xAxis2","yScale","tickValues","tickSize","style","yAxis","axisRight","tickPadding","plotTotal","dataTypesTotal","dataTypesDaily","colors","svgArray","yScales","uniformScaleMin","min","d","Math","totalactive","totalrecovered","totaldeceased","uniformScaleMax","max","totalconfirmed","yScaleUniformLinear","scaleLinear","nice","yScaleUniformLog","scaleLog","map","type","yScaleLinear","yScaleLog","yScaleDailyUniform","dailyactive","dailyconfirmed","dailyrecovered","dailydeceased","focus","svg","i","selectAll","data","join","enter","append","mousemove","xm","mouse","invert","bisectDate","bisector","forEach","f","j","isNaN","mouseout","transition","duration","typeTotal","typeDaily","filteredTimeseries","filter","color","remove","path","reverse","n","node","getTotalLength","p","getPointAtLength","x","y","repeat","line","curve","curveMonotoneX","on","dateStr","chartKey1","chartKey2","chartKey3","chartKey4","chartKey5","currentStatusCount","currentDiff","formatedDiff","animationDelay","memo"],"mappings":"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","sourcesContent":["import {testedToolTip} from './tooltips';\r\n\r\nimport {\r\n  sliceTimeseriesFromEnd,\r\n  formatNumber,\r\n  formatTimeseriesDate,\r\n  formatTimeseriesTickX,\r\n} from '../utils/commonfunctions';\r\nimport {useResizeObserver} from '../utils/hooks';\r\n\r\nimport * as d3 from 'd3';\r\nimport {addDays, subDays} from 'date-fns';\r\nimport equal from 'fast-deep-equal';\r\nimport React, {useState, useEffect, useRef, useCallback} from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nconst isEqual = (prevProps, currProps) => {\r\n  if (!currProps.isIntersecting) return true;\r\n  if (!prevProps.isIntersecting) return false;\r\n  if (!equal(currProps.chartType, prevProps.chartType)) {\r\n    return false;\r\n  }\r\n  if (!equal(currProps.mode, prevProps.mode)) {\r\n    return false;\r\n  }\r\n  if (!equal(currProps.logMode, prevProps.logMode)) {\r\n    return false;\r\n  }\r\n  if (!equal(currProps.stateCode, prevProps.stateCode)) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nfunction TimeSeries({timeseriesProp, chartType, mode, logMode, stateCode}) {\r\n  const {t} = useTranslation();\r\n  const [lastDaysCount, setLastDaysCount] = useState(\r\n    window.innerWidth > 512 ? Infinity : 30\r\n  );\r\n  const [timeseries, setTimeseries] = useState({});\r\n  const [datapoint, setDatapoint] = useState({});\r\n  const [index, setIndex] = useState(0);\r\n  const [moving, setMoving] = useState(false);\r\n\r\n  const svgRef1 = useRef();\r\n  const svgRef2 = useRef();\r\n  const svgRef3 = useRef();\r\n  const svgRef4 = useRef();\r\n  const svgRef5 = useRef();\r\n\r\n  const wrapperRef = useRef();\r\n  const dimensions = useResizeObserver(wrapperRef);\r\n\r\n  const transformTimeSeries = useCallback(\r\n    (timeseries) => {\r\n      if (timeseries.length > 1) {\r\n        const slicedTimeseries = sliceTimeseriesFromEnd(\r\n          timeseries,\r\n          lastDaysCount\r\n        );\r\n        setIndex(slicedTimeseries.length - 1);\r\n        setTimeseries(slicedTimeseries);\r\n      }\r\n    },\r\n    [lastDaysCount]\r\n  );\r\n\r\n  useEffect(() => {\r\n    transformTimeSeries(timeseriesProp);\r\n  }, [lastDaysCount, timeseriesProp, transformTimeSeries]);\r\n\r\n  const graphData = useCallback(\r\n    (timeseries) => {\r\n      const {width, height} =\r\n        dimensions || wrapperRef.current.getBoundingClientRect();\r\n\r\n      // Margins\r\n      const margin = {top: 15, right: 35, bottom: 25, left: 25};\r\n      const chartRight = width - margin.right;\r\n      const chartBottom = height - margin.bottom;\r\n\r\n      const T = timeseries.length;\r\n      const yBufferTop = 1.2;\r\n      const yBufferBottom = 1.1;\r\n\r\n      setDatapoint(timeseries[T - 1]);\r\n      setIndex(T - 1);\r\n\r\n      const svg1 = d3.select(svgRef1.current);\r\n      const svg2 = d3.select(svgRef2.current);\r\n      const svg3 = d3.select(svgRef3.current);\r\n      const svg4 = d3.select(svgRef4.current);\r\n      const svg5 = d3.select(svgRef5.current);\r\n\r\n      const dateMin = subDays(timeseries[0].date, 1);\r\n      const dateMax = addDays(timeseries[T - 1].date, 1);\r\n\r\n      const xScale = d3\r\n        .scaleTime()\r\n        .clamp(true)\r\n        .domain([dateMin, dateMax])\r\n        .range([margin.left, chartRight]);\r\n\r\n      // Number of x-axis ticks\r\n      const numTicksX = width < 480 ? 4 : 7;\r\n\r\n      const xAxis = (g) =>\r\n        g.attr('class', 'x-axis').call(\r\n          d3\r\n            .axisBottom(xScale)\r\n            .ticks(numTicksX)\r\n            .tickFormat((tick) => {\r\n              return formatTimeseriesTickX(tick);\r\n            })\r\n        );\r\n\r\n      const xAxis2 = (g, yScale) => {\r\n        g.attr('class', 'x-axis2')\r\n          .call(d3.axisBottom(xScale).tickValues([]).tickSize(0))\r\n          .select('.domain')\r\n          .style('transform', `translateY(${yScale(0)}px)`);\r\n\r\n        if (yScale(0) !== chartBottom) g.select('.domain').attr('opacity', 0.4);\r\n        else g.select('.domain').attr('opacity', 0);\r\n      };\r\n\r\n      const yAxis = (g, yScale) =>\r\n        g\r\n          .attr('class', 'y-axis')\r\n          .call(d3.axisRight(yScale).ticks(4, '0~s').tickPadding(5));\r\n\r\n      // Arrays of objects\r\n      const plotTotal = chartType === 1;\r\n      const dataTypesTotal = [\r\n        'totalconfirmed',\r\n        'totalactive',\r\n        'totalrecovered',\r\n        'totaldeceased',\r\n        'totaltested',\r\n      ];\r\n      const dataTypesDaily = [\r\n        'dailyconfirmed',\r\n        'dailyactive',\r\n        'dailyrecovered',\r\n        'dailydeceased',\r\n        'dailytested',\r\n      ];\r\n\r\n      const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d', '#201aa2'];\r\n\r\n      const svgArray = [svg1, svg2, svg3, svg4, svg5];\r\n\r\n      let yScales;\r\n      if (plotTotal) {\r\n        const uniformScaleMin = d3.min(timeseries, (d) =>\r\n          Math.min(d.totalactive, d.totalrecovered, d.totaldeceased)\r\n        );\r\n        const uniformScaleMax = d3.max(timeseries, (d) => d.totalconfirmed);\r\n        const yScaleUniformLinear = d3\r\n          .scaleLinear()\r\n          .clamp(true)\r\n          .domain([uniformScaleMin, Math.max(1, yBufferTop * uniformScaleMax)])\r\n          .nice()\r\n          .range([chartBottom, margin.top]);\r\n\r\n        const yScaleUniformLog = d3\r\n          .scaleLog()\r\n          .clamp(true)\r\n          .domain([\r\n            Math.max(1, uniformScaleMin),\r\n            Math.max(10, yBufferTop * uniformScaleMax),\r\n          ])\r\n          .nice()\r\n          .range([chartBottom, margin.top]);\r\n\r\n        yScales = dataTypesTotal.map((type) => {\r\n          const yScaleLinear = d3\r\n            .scaleLinear()\r\n            .clamp(true)\r\n            .domain([\r\n              d3.min(timeseries, (d) => d[type]),\r\n              Math.max(1, yBufferTop * d3.max(timeseries, (d) => d[type])),\r\n            ])\r\n            .nice()\r\n            .range([chartBottom, margin.top]);\r\n          const yScaleLog = d3\r\n            .scaleLog()\r\n            .clamp(true)\r\n            .domain([\r\n              Math.max(\r\n                1,\r\n                d3.min(timeseries, (d) => d[type])\r\n              ),\r\n              Math.max(10, yBufferTop * d3.max(timeseries, (d) => d[type])),\r\n            ])\r\n            .nice()\r\n            .range([chartBottom, margin.top]);\r\n          if (mode && type !== 'totaltested')\r\n            return logMode ? yScaleUniformLog : yScaleUniformLinear;\r\n          else return logMode ? yScaleLog : yScaleLinear;\r\n        });\r\n      } else {\r\n        const yScaleDailyUniform = d3\r\n          .scaleLinear()\r\n          .clamp(true)\r\n          .domain([\r\n            yBufferBottom *\r\n              Math.min(\r\n                0,\r\n                d3.min(timeseries, (d) => d.dailyactive)\r\n              ),\r\n            Math.max(\r\n              1,\r\n              yBufferTop *\r\n                d3.max(timeseries, (d) =>\r\n                  Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)\r\n                )\r\n            ),\r\n          ])\r\n          .nice()\r\n          .range([chartBottom, margin.top]);\r\n\r\n        yScales = dataTypesDaily.map((type) => {\r\n          if (mode && type !== 'dailytested') return yScaleDailyUniform;\r\n          const yScaleLinear = d3\r\n            .scaleLinear()\r\n            .clamp(true)\r\n            .domain([\r\n              yBufferBottom *\r\n                Math.min(\r\n                  0,\r\n                  d3.min(timeseries, (d) => d[type])\r\n                ),\r\n              Math.max(1, yBufferTop * d3.max(timeseries, (d) => d[type])),\r\n            ])\r\n            .nice()\r\n            .range([chartBottom, margin.top]);\r\n          return yScaleLinear;\r\n        });\r\n      }\r\n\r\n      /* Focus dots */\r\n      const focus = svgArray.map((svg, i) => {\r\n        return svg\r\n          .selectAll('.focus')\r\n          .data([timeseries[T - 1]], (d) => d.date)\r\n          .join((enter) =>\r\n            enter.append('circle').attr('cx', (d) => xScale(d.date))\r\n          )\r\n          .attr('class', 'focus')\r\n          .attr('fill', colors[i])\r\n          .attr('stroke', colors[i])\r\n          .attr('r', 4);\r\n      });\r\n\r\n      function mousemove() {\r\n        const xm = d3.mouse(this)[0];\r\n        const date = xScale.invert(xm);\r\n        const bisectDate = d3.bisector((d) => d.date).left;\r\n        let i = bisectDate(timeseries, date, 1);\r\n        if (0 <= i && i < T) {\r\n          if (date - timeseries[i - 1].date < timeseries[i].date - date) --i;\r\n          setDatapoint(timeseries[i]);\r\n          setIndex(i);\r\n          setMoving(true);\r\n          const d = timeseries[i];\r\n          focus.forEach((f, j) => {\r\n            const yScale = yScales[j];\r\n            const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\r\n            if (!isNaN(d[type]))\r\n              f.attr('cx', xScale(d.date))\r\n                .attr('cy', yScale(d[type]))\r\n                .attr('opacity', 1);\r\n            else f.attr('opacity', 0);\r\n          });\r\n        }\r\n      }\r\n\r\n      function mouseout() {\r\n        setDatapoint(timeseries[T - 1]);\r\n        setIndex(T - 1);\r\n        setMoving(false);\r\n        focus.forEach((f, j) => {\r\n          const yScale = yScales[j];\r\n          const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\r\n          if (!isNaN(timeseries[T - 1][type]))\r\n            f.attr('cx', xScale(timeseries[T - 1].date))\r\n              .attr('cy', yScale(timeseries[T - 1][type]))\r\n              .attr('opacity', 1);\r\n          else f.attr('opacity', 0);\r\n        });\r\n      }\r\n\r\n      /* Begin drawing charts */\r\n      svgArray.forEach((svg, i) => {\r\n        // Transition interval\r\n        const t = svg.transition().duration(500);\r\n        const typeTotal = dataTypesTotal[i];\r\n        const typeDaily = dataTypesDaily[i];\r\n        const type = plotTotal ? typeTotal : typeDaily;\r\n\r\n        const filteredTimeseries = timeseries.filter((d) => !isNaN(d[type]));\r\n        const color = colors[i];\r\n        const yScale = yScales[i];\r\n\r\n        /* X axis */\r\n        svg\r\n          .select('.x-axis')\r\n          .style('transform', `translateY(${chartBottom}px)`)\r\n          .transition(t)\r\n          .call(xAxis);\r\n        svg.select('.x-axis2').transition(t).call(xAxis2, yScale);\r\n        /* Y axis */\r\n        svg\r\n          .select('.y-axis')\r\n          .style('transform', `translateX(${chartRight}px)`)\r\n          .transition(t)\r\n          .call(yAxis, yScale);\r\n\r\n        /* Path dots */\r\n        svg\r\n          .selectAll('.dot')\r\n          .data(filteredTimeseries, (d) => d.date)\r\n          .join((enter) =>\r\n            enter\r\n              .append('circle')\r\n              .attr('cy', chartBottom)\r\n              .attr('cx', (d) => xScale(d.date))\r\n          )\r\n          .attr('class', 'dot')\r\n          .attr('fill', color)\r\n          .attr('stroke', color)\r\n          .attr('r', 2)\r\n          .transition(t)\r\n          .attr('cx', (d) => xScale(d.date))\r\n          .attr('cy', (d) => yScale(d[type]));\r\n\r\n        if (!isNaN(timeseries[T - 1][type]))\r\n          focus[i]\r\n            .transition(t)\r\n            .attr('cx', (d) => xScale(d.date))\r\n            .attr('cy', (d) => yScale(d[type]))\r\n            .attr('opacity', 1);\r\n        else focus[i].transition(t).attr('opacity', 0);\r\n\r\n        if (plotTotal) {\r\n          /* TOTAL TRENDS */\r\n          svg.selectAll('.stem').remove();\r\n          const path = svg\r\n            .selectAll('.trend')\r\n            .data([[...filteredTimeseries].reverse()])\r\n            .join('path')\r\n            .attr('class', 'trend')\r\n            .attr('fill', 'none')\r\n            .attr('stroke', color + '99')\r\n            .attr('stroke-width', 4);\r\n          // HACK\r\n          // Path interpolation is non-trivial. Ideally, a custom path tween\r\n          // function should be defined which takes care that old path dots\r\n          // transition synchronously along with the path transition. This hack\r\n          // simulates that behaviour.\r\n          if (path.attr('d')) {\r\n            const n = path.node().getTotalLength();\r\n            const p = path.node().getPointAtLength(n);\r\n            // Append points at end of path for better interpolation\r\n            path.attr(\r\n              'd',\r\n              () => path.attr('d') + `L${p.x},${p.y}`.repeat(3 * T)\r\n            );\r\n          }\r\n          path\r\n            .transition(t)\r\n            .attr('opacity', plotTotal ? 1 : 0)\r\n            .attr(\r\n              'd',\r\n              d3\r\n                .line()\r\n                .x((d) => xScale(d.date))\r\n                .y((d) => yScale(d[typeTotal]))\r\n                .curve(d3.curveMonotoneX)\r\n            );\r\n        } else {\r\n          /* DAILY TRENDS */\r\n          svg.selectAll('.trend').remove();\r\n          svg\r\n            .selectAll('.stem')\r\n            .data(filteredTimeseries, (d) => d.date)\r\n            .join((enter) =>\r\n              enter\r\n                .append('line')\r\n                .attr('x1', (d) => xScale(d.date))\r\n                .attr('y1', chartBottom)\r\n                .attr('x2', (d) => xScale(d.date))\r\n                .attr('y2', chartBottom)\r\n            )\r\n            .attr('class', 'stem')\r\n            .style('stroke', color + '99')\r\n            .style('stroke-width', 4)\r\n            .transition(t)\r\n            .attr('x1', (d) => xScale(d.date))\r\n            .attr('y1', yScale(0))\r\n            .attr('x2', (d) => xScale(d.date))\r\n            .attr('y2', (d) => yScale(d[typeDaily]));\r\n        }\r\n\r\n        svg\r\n          .on('mousemove', mousemove)\r\n          .on('touchmove', mousemove)\r\n          .on('mouseout', mouseout)\r\n          .on('touchend', mouseout);\r\n      });\r\n    },\r\n    [chartType, dimensions, logMode, mode]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (timeseries.length > 1) {\r\n      graphData(timeseries);\r\n    }\r\n  }, [timeseries, graphData]);\r\n\r\n  const dateStr = datapoint.date ? formatTimeseriesDate(datapoint.date) : '';\r\n\r\n  const chartKey1 = chartType === 1 ? 'totalconfirmed' : 'dailyconfirmed';\r\n  const chartKey2 = chartType === 1 ? 'totalactive' : 'dailyactive';\r\n  const chartKey3 = chartType === 1 ? 'totalrecovered' : 'dailyrecovered';\r\n  const chartKey4 = chartType === 1 ? 'totaldeceased' : 'dailydeceased';\r\n  const chartKey5 = chartType === 1 ? 'totaltested' : 'dailytested';\r\n\r\n  // Function for calculate increased/decreased count for each type of data\r\n  const currentStatusCount = (chartType) => {\r\n    if (timeseries.length <= 0 || index <= 0 || index >= timeseries.length)\r\n      return '';\r\n    const currentDiff =\r\n      timeseries[index][chartType] - timeseries[index - 1][chartType];\r\n    const formatedDiff = formatNumber(currentDiff);\r\n    return currentDiff >= 0 ? `+${formatedDiff}` : formatedDiff;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"TimeSeries fadeInUp\" style={{animationDelay: '2.7s'}}>\r\n        <div className=\"svg-parent\" ref={wrapperRef}>\r\n          <div className=\"stats\">\r\n            <h5 className={`${!moving ? 'title' : ''}`}>{t('Confirmed')}</h5>\r\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{formatNumber(datapoint[chartKey1])}</h2>\r\n              <h6>{currentStatusCount(chartKey1)}</h6>\r\n            </div>\r\n          </div>\r\n          <svg ref={svgRef1} preserveAspectRatio=\"xMidYMid meet\">\r\n            <g className=\"x-axis\" />\r\n            <g className=\"x-axis2\" />\r\n            <g className=\"y-axis\" />\r\n          </svg>\r\n        </div>\r\n\r\n        <div className=\"svg-parent is-blue\">\r\n          <div className=\"stats is-blue\">\r\n            <h5 className={`${!moving ? 'title' : ''}`}>{t('Active')}</h5>\r\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{formatNumber(datapoint[chartKey2])}</h2>\r\n              <h6>{currentStatusCount(chartKey2)}</h6>\r\n            </div>\r\n          </div>\r\n          <svg ref={svgRef2} preserveAspectRatio=\"xMidYMid meet\">\r\n            <g className=\"x-axis\" />\r\n            <g className=\"x-axis2\" />\r\n            <g className=\"y-axis\" />\r\n          </svg>\r\n        </div>\r\n\r\n        <div className=\"svg-parent is-green\">\r\n          <div className=\"stats is-green\">\r\n            <h5 className={`${!moving ? 'title' : ''}`}>{t('Recovered')}</h5>\r\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{formatNumber(datapoint[chartKey3])}</h2>\r\n              <h6>{currentStatusCount(chartKey3)}</h6>\r\n            </div>\r\n          </div>\r\n          <svg ref={svgRef3} preserveAspectRatio=\"xMidYMid meet\">\r\n            <g className=\"x-axis\" />\r\n            <g className=\"x-axis2\" />\r\n            <g className=\"y-axis\" />\r\n          </svg>\r\n        </div>\r\n\r\n        <div className=\"svg-parent is-gray\">\r\n          <div className=\"stats is-gray\">\r\n            <h5 className={`${!moving ? 'title' : ''}`}>{t('Deceased')}</h5>\r\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{formatNumber(datapoint[chartKey4])}</h2>\r\n              <h6>{currentStatusCount(chartKey4)}</h6>\r\n            </div>\r\n          </div>\r\n          <svg ref={svgRef4} preserveAspectRatio=\"xMidYMid meet\">\r\n            <g className=\"x-axis\" />\r\n            <g className=\"x-axis2\" />\r\n            <g className=\"y-axis\" />\r\n          </svg>\r\n        </div>\r\n\r\n        <div className=\"svg-parent is-purple\">\r\n          <div className=\"stats is-purple\">\r\n            <h5 className={`${!moving ? 'title' : ''}`}>\r\n              {t('Tested')} {stateCode === 'TT' ? testedToolTip : ''}\r\n            </h5>\r\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{formatNumber(datapoint[chartKey5])}</h2>\r\n              <h6>{currentStatusCount(chartKey5)}</h6>\r\n            </div>\r\n          </div>\r\n          <svg ref={svgRef5} preserveAspectRatio=\"xMidYMid meet\">\r\n            <g className=\"x-axis\" />\r\n            <g className=\"x-axis2\" />\r\n            <g className=\"y-axis\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"pills\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setLastDaysCount(Infinity)}\r\n          className={lastDaysCount === Infinity ? 'selected' : ''}\r\n        >\r\n          {t('Beginning')}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setLastDaysCount(30)}\r\n          className={lastDaysCount === 30 ? 'selected' : ''}\r\n          aria-label=\"1 month\"\r\n        >\r\n          {`1 ${t('Month')}`}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setLastDaysCount(14)}\r\n          className={lastDaysCount === 14 ? 'selected' : ''}\r\n          aria-label=\"14 days\"\r\n        >\r\n          {`2 ${t('Weeks')}`}\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default React.memo(TimeSeries, isEqual);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\src\\\\components\\\\languageswitcher.js\";\nimport locales from '../i18n/locales.json';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocalStorage } from 'react-use';\nexport default function LanguageSwitcher() {\n  const [language, setLanguage] = useLocalStorage('language', 'english');\n  const {\n    i18n\n  } = useTranslation();\n  useEffect(() => {\n    if (i18n) i18n.changeLanguage(language);\n  }, [i18n, language]);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"LanguageSwitcher\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-controls\": \"simple-menu\",\n    \"aria-haspopup\": \"true\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, locales[language]), /*#__PURE__*/React.createElement(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, Object.entries(locales).map(([key, language]) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: key,\n    onClick: () => {\n      setLanguage(key);\n      handleClose();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, language))));\n}","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/src/components/languageswitcher.js"],"names":["locales","Menu","MenuItem","React","useEffect","useTranslation","useLocalStorage","LanguageSwitcher","language","setLanguage","i18n","changeLanguage","anchorEl","setAnchorEl","useState","handleClick","event","currentTarget","handleClose","Boolean","Object","entries","map","key"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,sBAApB;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,SAAQC,eAAR,QAA8B,WAA9B;AAEA,eAAe,SAASC,gBAAT,GAA4B;AACzC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,eAAe,CAAC,UAAD,EAAa,SAAb,CAA/C;AACA,QAAM;AAACI,IAAAA;AAAD,MAASL,cAAc,EAA7B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,IAAJ,EAAUA,IAAI,CAACC,cAAL,CAAoBH,QAApB;AACX,GAFQ,EAEN,CAACE,IAAD,EAAOF,QAAP,CAFM,CAAT;AAIA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BV,KAAK,CAACW,QAAN,CAAe,IAAf,CAAhC;;AAEA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7BH,IAAAA,WAAW,CAACG,KAAK,CAACC,aAAP,CAAX;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxBL,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,qBAAc,aADhB;AAEE,qBAAc,MAFhB;AAGE,IAAA,OAAO,EAAEE,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGf,OAAO,CAACQ,QAAD,CALV,CADF,eAQE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,QAAQ,EAAEI,QAFZ;AAGE,IAAA,WAAW,MAHb;AAIE,IAAA,IAAI,EAAEO,OAAO,CAACP,QAAD,CAJf;AAKE,IAAA,OAAO,EAAEM,WALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGE,MAAM,CAACC,OAAP,CAAerB,OAAf,EAAwBsB,GAAxB,CAA4B,CAAC,CAACC,GAAD,EAAMf,QAAN,CAAD,kBAC3B,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEe,GADP;AAEE,IAAA,OAAO,EAAE,MAAM;AACbd,MAAAA,WAAW,CAACc,GAAD,CAAX;AACAL,MAAAA,WAAW;AACZ,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGV,QAPH,CADD,CAPH,CARF,CADF;AA8BD","sourcesContent":["import locales from '../i18n/locales.json';\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport React, {useEffect} from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {useLocalStorage} from 'react-use';\r\n\r\nexport default function LanguageSwitcher() {\r\n  const [language, setLanguage] = useLocalStorage('language', 'english');\r\n  const {i18n} = useTranslation();\r\n\r\n  useEffect(() => {\r\n    if (i18n) i18n.changeLanguage(language);\r\n  }, [i18n, language]);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"LanguageSwitcher\">\r\n      <div\r\n        aria-controls=\"simple-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        {locales[language]}\r\n      </div>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {Object.entries(locales).map(([key, language]) => (\r\n          <MenuItem\r\n            key={key}\r\n            onClick={() => {\r\n              setLanguage(key);\r\n              handleClose();\r\n            }}\r\n          >\r\n            {language}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
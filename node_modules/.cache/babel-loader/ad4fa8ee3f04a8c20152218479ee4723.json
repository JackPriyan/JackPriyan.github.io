{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import axios from'axios';import{formatDistance,format}from'date-fns';import React,{useState,useLayoutEffect}from'react';import{useEffectOnce}from'react-use';var newDate=new Date();var currentDate=newDate;function Updates(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),updates=_useState2[0],setUpdates=_useState2[1];useEffectOnce(function(){axios.get('https://api.covid19india.org/updatelog/log.json').then(function(response){setUpdates(response.data);}).catch(function(err){console.log(err);});});// reset the currentDate after rendering is complete\n// in case the currentDate was changed during addHeader\nuseLayoutEffect(function(){currentDate=newDate;});return/*#__PURE__*/React.createElement(\"div\",{className:\"updates\"},/*#__PURE__*/React.createElement(\"div\",{className:\"updates-header\"},/*#__PURE__*/React.createElement(\"h2\",null,format(currentDate,'d MMM'))),updates.slice(-5).reverse().map(function(activity,index){activity.update=activity.update.replace('\\n','<br/>');var activityDate=new Date(activity.timestamp*1000);var addHeader=function addHeader(){currentDate=activityDate;return/*#__PURE__*/React.createElement(React.Fragment,null,index===0?/*#__PURE__*/React.createElement(\"div\",{className:\"update\"},/*#__PURE__*/React.createElement(\"h4\",null,\"No updates yet!\")):'',/*#__PURE__*/React.createElement(\"div\",{className:\"updates-header\"},/*#__PURE__*/React.createElement(\"h2\",null,format(activityDate,'d MMM'))));};return/*#__PURE__*/React.createElement(React.Fragment,{key:index},activityDate.getDate()!==currentDate.getDate()?addHeader():' ',/*#__PURE__*/React.createElement(\"div\",{key:index,className:\"update\"},/*#__PURE__*/React.createElement(\"h5\",null,formatDistance(new Date(activity.timestamp*1000),new Date())+' ago'),/*#__PURE__*/React.createElement(\"h4\",{dangerouslySetInnerHTML:{__html:activity.update}})));}));}export default Updates;","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/src/components/updates.js"],"names":["axios","formatDistance","format","React","useState","useLayoutEffect","useEffectOnce","newDate","Date","currentDate","Updates","props","updates","setUpdates","get","then","response","data","catch","err","console","log","slice","reverse","map","activity","index","update","replace","activityDate","timestamp","addHeader","getDate","__html"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,cAAR,CAAwBC,MAAxB,KAAqC,UAArC,CACA,MAAOC,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,eAAzB,KAA+C,OAA/C,CACA,OAAQC,aAAR,KAA4B,WAA5B,CAEA,GAAMC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,IAAJ,EAAhB,CACA,GAAIC,CAAAA,WAAW,CAAGF,OAAlB,CAEA,QAASG,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,eACQP,QAAQ,CAAC,EAAD,CADhB,wCACfQ,OADe,eACNC,UADM,eAGtBP,aAAa,CAAC,UAAM,CAClBN,KAAK,CACFc,GADH,CACO,iDADP,EAEGC,IAFH,CAEQ,SAACC,QAAD,CAAc,CAClBH,UAAU,CAACG,QAAQ,CAACC,IAAV,CAAV,CACD,CAJH,EAKGC,KALH,CAKS,SAACC,GAAD,CAAS,CACdC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACD,CAPH,EAQD,CATY,CAAb,CAWA;AACA;AACAd,eAAe,CAAC,UAAM,CACpBI,WAAW,CAAGF,OAAd,CACD,CAFc,CAAf,CAIA,mBACE,2BAAK,SAAS,CAAC,SAAf,eACE,2BAAK,SAAS,CAAC,gBAAf,eACE,8BAAKL,MAAM,CAACO,WAAD,CAAc,OAAd,CAAX,CADF,CADF,CAKGG,OAAO,CACLU,KADF,CACQ,CAAC,CADT,EAEEC,OAFF,GAGEC,GAHF,CAGM,SAAUC,QAAV,CAAoBC,KAApB,CAA2B,CAC9BD,QAAQ,CAACE,MAAT,CAAkBF,QAAQ,CAACE,MAAT,CAAgBC,OAAhB,CAAwB,IAAxB,CAA8B,OAA9B,CAAlB,CACA,GAAMC,CAAAA,YAAY,CAAG,GAAIrB,CAAAA,IAAJ,CAASiB,QAAQ,CAACK,SAAT,CAAqB,IAA9B,CAArB,CACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBtB,WAAW,CAAGoB,YAAd,CAEA,mBACE,oBAAC,KAAD,CAAO,QAAP,MACGH,KAAK,GAAK,CAAV,cACC,2BAAK,SAAS,CAAC,QAAf,eACE,gDADF,CADD,CAKC,EANJ,cAQE,2BAAK,SAAS,CAAC,gBAAf,eACE,8BAAKxB,MAAM,CAAC2B,YAAD,CAAe,OAAf,CAAX,CADF,CARF,CADF,CAcD,CAjBD,CAmBA,mBACE,oBAAC,KAAD,CAAO,QAAP,EAAgB,GAAG,CAAEH,KAArB,EACGG,YAAY,CAACG,OAAb,KAA2BvB,WAAW,CAACuB,OAAZ,EAA3B,CACGD,SAAS,EADZ,CAEG,GAHN,cAIE,2BAAK,GAAG,CAAEL,KAAV,CAAiB,SAAS,CAAC,QAA3B,eACE,8BACGzB,cAAc,CACb,GAAIO,CAAAA,IAAJ,CAASiB,QAAQ,CAACK,SAAT,CAAqB,IAA9B,CADa,CAEb,GAAItB,CAAAA,IAAJ,EAFa,CAAd,CAGG,MAJN,CADF,cAOE,0BACE,uBAAuB,CAAE,CACvByB,MAAM,CAAER,QAAQ,CAACE,MADM,CAD3B,EAPF,CAJF,CADF,CAoBD,CA7CF,CALH,CADF,CAsDD,CAED,cAAejB,CAAAA,OAAf","sourcesContent":["import axios from 'axios';\r\nimport {formatDistance, format} from 'date-fns';\r\nimport React, {useState, useLayoutEffect} from 'react';\r\nimport {useEffectOnce} from 'react-use';\r\n\r\nconst newDate = new Date();\r\nlet currentDate = newDate;\r\n\r\nfunction Updates(props) {\r\n  const [updates, setUpdates] = useState([]);\r\n\r\n  useEffectOnce(() => {\r\n    axios\r\n      .get('https://api.covid19india.org/updatelog/log.json')\r\n      .then((response) => {\r\n        setUpdates(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  });\r\n\r\n  // reset the currentDate after rendering is complete\r\n  // in case the currentDate was changed during addHeader\r\n  useLayoutEffect(() => {\r\n    currentDate = newDate;\r\n  });\r\n\r\n  return (\r\n    <div className=\"updates\">\r\n      <div className=\"updates-header\">\r\n        <h2>{format(currentDate, 'd MMM')}</h2>\r\n      </div>\r\n\r\n      {updates\r\n        .slice(-5)\r\n        .reverse()\r\n        .map(function (activity, index) {\r\n          activity.update = activity.update.replace('\\n', '<br/>');\r\n          const activityDate = new Date(activity.timestamp * 1000);\r\n          const addHeader = () => {\r\n            currentDate = activityDate;\r\n\r\n            return (\r\n              <React.Fragment>\r\n                {index === 0 ? (\r\n                  <div className=\"update\">\r\n                    <h4>No updates yet!</h4>\r\n                  </div>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <div className=\"updates-header\">\r\n                  <h2>{format(activityDate, 'd MMM')}</h2>\r\n                </div>\r\n              </React.Fragment>\r\n            );\r\n          };\r\n\r\n          return (\r\n            <React.Fragment key={index}>\r\n              {activityDate.getDate() !== currentDate.getDate()\r\n                ? addHeader()\r\n                : ' '}\r\n              <div key={index} className=\"update\">\r\n                <h5>\r\n                  {formatDistance(\r\n                    new Date(activity.timestamp * 1000),\r\n                    new Date()\r\n                  ) + ' ago'}\r\n                </h5>\r\n                <h4\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: activity.update,\r\n                  }}\r\n                ></h4>\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Updates;\r\n"]},"metadata":{},"sourceType":"module"}
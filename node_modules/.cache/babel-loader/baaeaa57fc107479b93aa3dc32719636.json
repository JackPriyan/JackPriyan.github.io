{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\src\\\\components\\\\Charts\\\\dailyconfirmedchart.js\";\nimport { defaultOptions, xAxisDefaults, yAxisDefaults, formatNumber } from './chart-defaults';\nimport { format, parse } from 'date-fns';\nimport deepmerge from 'deepmerge';\nimport React from 'react';\nimport { Bar, defaults } from 'react-chartjs-2';\n\nfunction DailyConfirmedChart(props) {\n  const dates = [];\n  const confirmed = [];\n  const recovered = [];\n  const deceased = [];\n\n  if (!props.timeseries || props.timeseries.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    });\n  }\n\n  props.timeseries.forEach((data, index) => {\n    if (index >= 31) {\n      const date = parse(data.date, 'dd MMMM', new Date(2020, 0, 1));\n      dates.push(format(date, 'dd MMM'));\n      confirmed.push(data.dailyconfirmed);\n      recovered.push(data.dailyrecovered);\n      deceased.push(data.dailydeceased);\n    }\n  });\n  const barDataSet = {\n    labels: dates,\n    datasets: [{\n      data: recovered,\n      label: 'Recovered',\n      backgroundColor: '#7ebf80'\n    }, {\n      data: deceased,\n      label: 'Deceased',\n      backgroundColor: '#6c757d'\n    }, {\n      data: confirmed,\n      label: 'Confirmed',\n      backgroundColor: '#ff6862'\n    }]\n  };\n  const options = deepmerge(defaultOptions, {\n    tooltips: {\n      mode: 'index'\n    },\n    legend: {\n      display: true,\n      reverse: true,\n      labels: {\n        usePointStyle: true,\n        // Required to change pointstyle to 'rectRounded' from 'circle'\n        generateLabels: chart => {\n          const labels = defaults.global.legend.labels.generateLabels(chart);\n          labels.forEach(label => {\n            label.pointStyle = 'rectRounded';\n          });\n          return labels;\n        }\n      }\n    },\n    scales: {\n      xAxes: [deepmerge(xAxisDefaults, {\n        stacked: true\n      })],\n      yAxes: [deepmerge(yAxisDefaults, {\n        stacked: true,\n        ticks: {\n          callback: value => formatNumber(value)\n        }\n      })]\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"charts-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: barDataSet,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default DailyConfirmedChart;","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/src/components/Charts/dailyconfirmedchart.js"],"names":["defaultOptions","xAxisDefaults","yAxisDefaults","formatNumber","format","parse","deepmerge","React","Bar","defaults","DailyConfirmedChart","props","dates","confirmed","recovered","deceased","timeseries","length","forEach","data","index","date","Date","push","dailyconfirmed","dailyrecovered","dailydeceased","barDataSet","labels","datasets","label","backgroundColor","options","tooltips","mode","legend","display","reverse","usePointStyle","generateLabels","chart","global","pointStyle","scales","xAxes","stacked","yAxes","ticks","callback","value","title"],"mappings":"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","sourcesContent":["import {\r\n  defaultOptions,\r\n  xAxisDefaults,\r\n  yAxisDefaults,\r\n  formatNumber,\r\n} from './chart-defaults';\r\n\r\nimport {format, parse} from 'date-fns';\r\nimport deepmerge from 'deepmerge';\r\nimport React from 'react';\r\nimport {Bar, defaults} from 'react-chartjs-2';\r\n\r\nfunction DailyConfirmedChart(props) {\r\n  const dates = [];\r\n  const confirmed = [];\r\n  const recovered = [];\r\n  const deceased = [];\r\n\r\n  if (!props.timeseries || props.timeseries.length === 0) {\r\n    return <div></div>;\r\n  }\r\n\r\n  props.timeseries.forEach((data, index) => {\r\n    if (index >= 31) {\r\n      const date = parse(data.date, 'dd MMMM', new Date(2020, 0, 1));\r\n      dates.push(format(date, 'dd MMM'));\r\n      confirmed.push(data.dailyconfirmed);\r\n      recovered.push(data.dailyrecovered);\r\n      deceased.push(data.dailydeceased);\r\n    }\r\n  });\r\n\r\n  const barDataSet = {\r\n    labels: dates,\r\n    datasets: [\r\n      {\r\n        data: recovered,\r\n        label: 'Recovered',\r\n        backgroundColor: '#7ebf80',\r\n      },\r\n      {\r\n        data: deceased,\r\n        label: 'Deceased',\r\n        backgroundColor: '#6c757d',\r\n      },\r\n      {\r\n        data: confirmed,\r\n        label: 'Confirmed',\r\n        backgroundColor: '#ff6862',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = deepmerge(defaultOptions, {\r\n    tooltips: {\r\n      mode: 'index',\r\n    },\r\n    legend: {\r\n      display: true,\r\n      reverse: true,\r\n      labels: {\r\n        usePointStyle: true, // Required to change pointstyle to 'rectRounded' from 'circle'\r\n        generateLabels: (chart) => {\r\n          const labels = defaults.global.legend.labels.generateLabels(chart);\r\n          labels.forEach((label) => {\r\n            label.pointStyle = 'rectRounded';\r\n          });\r\n          return labels;\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        deepmerge(xAxisDefaults, {\r\n          stacked: true,\r\n        }),\r\n      ],\r\n      yAxes: [\r\n        deepmerge(yAxisDefaults, {\r\n          stacked: true,\r\n          ticks: {\r\n            callback: (value) => formatNumber(value),\r\n          },\r\n        }),\r\n      ],\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"charts-header\">\r\n      <div className=\"chart-title\">{props.title}</div>\r\n      <div className=\"chart-content\">\r\n        <Bar data={barDataSet} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DailyConfirmedChart;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import{formatNumber}from'./chart-defaults';import React from'react';import{Doughnut}from'react-chartjs-2';function NationalityChart(props){if(!props.data||props.data.length===0){return/*#__PURE__*/React.createElement(\"div\",null);}var nationality={};props.data.forEach(function(patient){if(!patient.nationality){return;}if(!nationality.hasOwnProperty(patient.nationality.toLowerCase())){nationality[patient.nationality.toLowerCase()]=0;}nationality[patient.nationality.toLowerCase()]++;});// delete nationality.india;\nvar data=[];var labels=[];Object.keys(nationality).forEach(function(country){if(country){labels.push(country.toUpperCase());data.push(nationality[country]);}});var chartData={datasets:[{data:data,backgroundColor:['#ff8a66','#718af0','#7dd6fa','#59b3aa','#9bc26b','#e5d22f','#ffb041','#db6b8f','#bd66cc','#8e8e8e']}],labels:labels};var chartOptions={layout:{padding:{left:20,right:20,top:0,bottom:20}},legend:{display:false},responsive:true,maintainAspectRatio:false,tooltips:{mode:'point',backgroundColor:'rgba(0, 0, 0, 0.8)',borderColor:'rgba(0, 0, 0, 0)',bodyFontColor:'white',titleFontColor:'white',events:['mousemove','mouseout','touchstart','touchmove','touchend'],callbacks:{label:function label(tooltipItem,data){var dataset=data.datasets[tooltipItem.datasetIndex];var meta=dataset._meta[Object.keys(dataset._meta)[0]];var total=meta.total;var currentValue=dataset.data[tooltipItem.index];var percentage=parseFloat((currentValue/total*100).toFixed(1));return currentValue+' ('+percentage+'%)';},title:function title(tooltipItem,data){return data.labels[tooltipItem[0].index];}}}};var sampleSize=data.reduce(function(a,b){return a+b;},0);return/*#__PURE__*/React.createElement(\"div\",{className:\"charts-header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"chart-title\"},props.title),/*#__PURE__*/React.createElement(\"div\",{className:\"chart-content doughnut\"},/*#__PURE__*/React.createElement(Doughnut,{data:chartData,options:chartOptions})),/*#__PURE__*/React.createElement(\"div\",{className:\"chart-note\"},\"Sample size: \",formatNumber(sampleSize),\" patients\"));}export default NationalityChart;","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/src/components/Charts/nationalitychart.js"],"names":["formatNumber","React","Doughnut","NationalityChart","props","data","length","nationality","forEach","patient","hasOwnProperty","toLowerCase","labels","Object","keys","country","push","toUpperCase","chartData","datasets","backgroundColor","chartOptions","layout","padding","left","right","top","bottom","legend","display","responsive","maintainAspectRatio","tooltips","mode","borderColor","bodyFontColor","titleFontColor","events","callbacks","label","tooltipItem","dataset","datasetIndex","meta","_meta","total","currentValue","index","percentage","parseFloat","toFixed","title","sampleSize","reduce","a","b"],"mappings":"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","sourcesContent":["import {formatNumber} from './chart-defaults';\r\n\r\nimport React from 'react';\r\nimport {Doughnut} from 'react-chartjs-2';\r\n\r\nfunction NationalityChart(props) {\r\n  if (!props.data || props.data.length === 0) {\r\n    return <div></div>;\r\n  }\r\n\r\n  const nationality = {};\r\n\r\n  props.data.forEach((patient) => {\r\n    if (!patient.nationality) {\r\n      return;\r\n    }\r\n    if (!nationality.hasOwnProperty(patient.nationality.toLowerCase())) {\r\n      nationality[patient.nationality.toLowerCase()] = 0;\r\n    }\r\n    nationality[patient.nationality.toLowerCase()]++;\r\n  });\r\n\r\n  // delete nationality.india;\r\n  const data = [];\r\n  const labels = [];\r\n\r\n  Object.keys(nationality).forEach((country) => {\r\n    if (country) {\r\n      labels.push(country.toUpperCase());\r\n      data.push(nationality[country]);\r\n    }\r\n  });\r\n\r\n  const chartData = {\r\n    datasets: [\r\n      {\r\n        data: data,\r\n        backgroundColor: [\r\n          '#ff8a66',\r\n          '#718af0',\r\n          '#7dd6fa',\r\n          '#59b3aa',\r\n          '#9bc26b',\r\n          '#e5d22f',\r\n          '#ffb041',\r\n          '#db6b8f',\r\n          '#bd66cc',\r\n          '#8e8e8e',\r\n        ],\r\n      },\r\n    ],\r\n    labels: labels,\r\n  };\r\n\r\n  const chartOptions = {\r\n    layout: {\r\n      padding: {\r\n        left: 20,\r\n        right: 20,\r\n        top: 0,\r\n        bottom: 20,\r\n      },\r\n    },\r\n    legend: {\r\n      display: false,\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n      mode: 'point',\r\n      backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n      borderColor: 'rgba(0, 0, 0, 0)',\r\n      bodyFontColor: 'white',\r\n      titleFontColor: 'white',\r\n      events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\r\n      callbacks: {\r\n        label: function (tooltipItem, data) {\r\n          const dataset = data.datasets[tooltipItem.datasetIndex];\r\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\r\n          const total = meta.total;\r\n          const currentValue = dataset.data[tooltipItem.index];\r\n          const percentage = parseFloat(\r\n            ((currentValue / total) * 100).toFixed(1)\r\n          );\r\n          return currentValue + ' (' + percentage + '%)';\r\n        },\r\n        title: function (tooltipItem, data) {\r\n          return data.labels[tooltipItem[0].index];\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const sampleSize = data.reduce((a, b) => a + b, 0);\r\n\r\n  return (\r\n    <div className=\"charts-header\">\r\n      <div className=\"chart-title\">{props.title}</div>\r\n      <div className=\"chart-content doughnut\">\r\n        <Doughnut data={chartData} options={chartOptions} />\r\n      </div>\r\n      <div className=\"chart-note\">\r\n        Sample size: {formatNumber(sampleSize)} patients\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NationalityChart;\r\n"]},"metadata":{},"sourceType":"module"}
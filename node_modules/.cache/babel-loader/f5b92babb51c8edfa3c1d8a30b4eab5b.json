{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\src\\\\components\\\\demographics.js\";\nimport DownloadBlock from './downloadblock';\nimport Footer from './footer';\nimport Patients from './patients';\nimport { RAW_DATA_PARTITIONS } from '../constants';\nimport axios from 'axios';\nimport { format, subDays, isWithinInterval, parse } from 'date-fns';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport DatePicker from 'react-date-picker';\nimport * as Icon from 'react-feather';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router-dom';\nimport { useLocalStorage } from 'react-use';\n\nfunction filterByObject(obj, filters) {\n  const keys = Object.keys(filters);\n  return obj.filter(p => {\n    return keys.every(key => {\n      if (!filters[key].length) return true;\n      return p[key] === filters[key];\n    });\n  });\n}\n\nfunction Demographics(props) {\n  const [fetched, setFetched] = useState(false);\n  const [patients, setPatients] = useState([]);\n  const [filteredPatients, setFilteredPatients] = useState([]);\n  const {\n    pathname\n  } = useLocation();\n  const [colorMode, setColorMode] = useState('genders');\n  const [scaleMode, setScaleMode] = useState(false);\n  const [filterDate, setFilterDate] = useState(subDays(new Date(), 1));\n  const [showReminder, setShowReminder] = useLocalStorage('showReminder', true);\n  const [message, setMessage] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [filters, setFilters] = useState({\n    detectedstate: '',\n    detecteddistrict: '',\n    detectedcity: '',\n    dateannounced: format(subDays(new Date(), 1), 'dd/MM/yyyy')\n  });\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n  const getPartition = useCallback(() => {\n    const chosenDate = parse(filters.dateannounced, 'dd/MM/yyyy', new Date());\n\n    if (isWithinInterval(chosenDate, RAW_DATA_PARTITIONS.v1)) {\n      return 1;\n    } else if (isWithinInterval(chosenDate, RAW_DATA_PARTITIONS.v2)) {\n      return 2;\n    } else if (isWithinInterval(chosenDate, RAW_DATA_PARTITIONS.v3)) {\n      return 3;\n    } else if (isWithinInterval(chosenDate, RAW_DATA_PARTITIONS.v4)) {\n      return 4;\n    }\n  }, [filters.dateannounced]);\n  useEffect(() => {\n    try {\n      axios.get(`https://api.covid19india.org/raw_data${getPartition()}.json`).then(response => {\n        setPatients(response.data.raw_data.reverse());\n        setFetched(true);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }, [filters.dateannounced, getPartition]);\n  useEffect(() => {\n    const datePickers = document.querySelectorAll('.react-date-picker__inputGroup input');\n    datePickers.forEach(el => el.setAttribute('readOnly', true));\n  }, []);\n\n  const handleFilters = (label, value) => {\n    setFilters(f => {\n      // Create new object (deep copy)\n      const newFilters = { ...f\n      };\n      newFilters[label] = value;\n\n      if (label === 'detectedstate') {\n        const district = document.getElementById('district');\n        const city = document.getElementById('city'); // Hide boxes\n\n        if (value === '') district.style.display = 'none';else district.style.display = 'inline';\n        city.style.display = 'none'; // Default to empty selection\n\n        district.selectedIndex = 0;\n        city.selectedIndex = 0;\n        newFilters['detecteddistrict'] = '';\n        newFilters['detectedcity'] = '';\n      } else if (label === 'detecteddistrict') {\n        const city = document.getElementById('city'); // Hide box\n\n        if (value === '') city.style.display = 'none';else city.style.display = 'inline'; // Default to empty selection\n\n        city.selectedIndex = 0;\n        newFilters['detectedcity'] = '';\n      }\n\n      return newFilters;\n    });\n  };\n\n  useEffect(() => {\n    if (filterByObject(patients, filters).length > 0) {\n      setFilteredPatients(filterByObject(patients, filters));\n      setMessage(false);\n      setLoading(false);\n    } else {\n      setMessage(true);\n    }\n  }, [patients, filters]);\n\n  function getSortedValues(obj, key) {\n    const setValues = new Set(obj.map(p => p[key]));\n    if (setValues.size > 1) setValues.add('');\n    if (key === 'dateannounced') return Array.from(setValues);\n    return Array.from(setValues).sort();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Demographics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"Demographics - covid19india.org\"), /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"title\",\n    content: `Demographics - covid19india.org`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"description\",\n    content: \"A demographical overview of the Indian population affected by the coronavirus.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters fadeInUp\",\n    style: {\n      animationDelay: '0.2s'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    style: {\n      animationDelay: '0.3s'\n    },\n    id: \"state\",\n    onChange: event => {\n      handleFilters('detectedstate', event.target.value);\n    },\n    defaultValue: filters.detectedstate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"Select State\"), getSortedValues(patients, 'detectedstate').map((state, index) => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, state === '' ? 'All' : state);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    style: {\n      animationDelay: '0.4s',\n      display: 'none'\n    },\n    id: \"district\",\n    onChange: event => {\n      handleFilters('detecteddistrict', event.target.value);\n    },\n    defaultValue: filters.detecteddistrict,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, \"Select District\"), getSortedValues(filterByObject(patients, {\n    detectedstate: filters.detectedstate\n  }), 'detecteddistrict').map((district, index) => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: district,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 19\n      }\n    }, district === '' ? 'All' : district);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    style: {\n      animationDelay: '0.4s',\n      display: 'none'\n    },\n    id: \"city\",\n    onChange: event => {\n      handleFilters('detectedcity', event.target.value);\n    },\n    defaultValue: filters.detectedcity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }, \"Select City\"), getSortedValues(filterByObject(patients, {\n    detectedstate: filters.detectedstate,\n    detecteddistrict: filters.detecteddistrict\n  }), 'detectedcity').map((city, index) => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 19\n      }\n    }, city === '' ? 'All' : city);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    style: {\n      animationDelay: '0.4s',\n      display: 'none'\n    },\n    id: \"city\",\n    onChange: event => {\n      handleFilters('detectedcity', event.target.value);\n    },\n    defaultValue: filters.detectedcity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }\n  }, \"Select City\"), getSortedValues(filterByObject(patients, {\n    detectedstate: filters.detectedstate,\n    detecteddistrict: filters.detecteddistrict\n  }), 'detectedcity').map((city, index) => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 19\n      }\n    }, city === '' ? 'All' : city);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    value: filterDate,\n    minDate: new Date('30-Jan-2020'),\n    maxDate: subDays(new Date(), 1),\n    format: \"dd/MM/y\",\n    calendarIcon: /*#__PURE__*/React.createElement(Icon.Calendar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 29\n      }\n    }),\n    inputProps: onkeydown = e => {\n      e.preventDefault();\n    },\n    clearIcon: /*#__PURE__*/React.createElement(Icon.XCircle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 26\n      }\n    }),\n    onChange: date => {\n      setFilterDate(date);\n      const fomattedDate = !!date ? format(date, 'dd/MM/yyyy') : '';\n      handleFilters('dateannounced', fomattedDate);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  }, colorMode === 'genders' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"legend-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"circle is-female\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"is-female\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  }, \"Female\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"circle is-male\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"is-male\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 15\n    }\n  }, \"Male\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 15\n    }\n  }, \"Unknown\")), colorMode === 'transmission' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"legend-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"circle is-local\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"is-local\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 15\n    }\n  }, \"Local\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"circle is-imported\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"is-imported\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 15\n    }\n  }, \"Imported\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 15\n    }\n  }, \"Unknown\")), colorMode === 'nationality' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"legend-left nationality\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"circle is-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"is-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 15\n    }\n  }, \"In\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"circle is-uk\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"is-uk\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 15\n    }\n  }, \"Uk\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"circle is-us\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"is-us\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 15\n    }\n  }, \"Us\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"circle is-th\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"is-thailand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  }, \"Th\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"circle is-ph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"is-ph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 15\n    }\n  }, \"Ph\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"circle is-it\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"is-it\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 15\n    }\n  }, \"It\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"circle is-ca\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"is-ca\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 15\n    }\n  }, \"Ca\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"circle is-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"is-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 15\n    }\n  }, \"Id\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"circle is-mm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"is-mm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 15\n    }\n  }, \"Mm\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: `select ${colorMode}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    style: {\n      animationDelay: '0.4s'\n    },\n    onChange: event => {\n      setColorMode(event.target.value);\n    },\n    defaultValue: colorMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"genders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 15\n    }\n  }, \"Genders\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"transmission\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 15\n    }\n  }, \"Transmission\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"nationality\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 15\n    }\n  }, \"Nationality\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header fadeInUp\",\n    style: {\n      animationDelay: '0.3s'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 11\n    }\n  }, \"Demographics\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: `deep-dive ${message || filteredPatients.length === 0 ? 'disabled' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }\n  }, \"Expand\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: scaleMode,\n    disabled: message || filteredPatients.length === 0,\n    onChange: event => {\n      setScaleMode(!scaleMode);\n    },\n    className: \"switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"disclaimer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }\n  }, \"Some of the data provided might be missing/unknown as the details have not been shared by the state/central governments\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reminder fadeInUp\",\n    style: {\n      animationDelay: '1s',\n      display: showReminder ? '' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Icon.XCircle, {\n    onClick: () => {\n      setShowReminder(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 9\n    }\n  }, \"It is important that we do not think of these as just tiny boxes, numbers, or just another part of statistics - among these are our neighbors, our teachers, our healthcare workers, our supermarket vendors, our friends, our co-workers, our children or our grandparents.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 11\n    }\n  }), \"Among these are our people.\")), fetched && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patientdb-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 9\n    }\n  }, loading ? ' ' : message ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"no-result\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 15\n    }\n  }, \"There were no new cases in\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 17\n    }\n  }, filters.detectedcity.length > 0 ? ` ${filters.detectedcity}, ` : '', filters.detecteddistrict.length > 0 ? ` ${filters.detecteddistrict}, ` : '', ' ' + filters.detectedstate), ' ', \"on \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 20\n    }\n  }, filters.dateannounced, \".\"))) : /*#__PURE__*/React.createElement(Patients, {\n    patients: filteredPatients,\n    colorMode: colorMode,\n    expand: scaleMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(DownloadBlock, {\n    patients: patients,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Demographics;","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/src/components/demographics.js"],"names":["DownloadBlock","Footer","Patients","RAW_DATA_PARTITIONS","axios","format","subDays","isWithinInterval","parse","React","useState","useEffect","useCallback","DatePicker","Icon","Helmet","useLocation","useLocalStorage","filterByObject","obj","filters","keys","Object","filter","p","every","key","length","Demographics","props","fetched","setFetched","patients","setPatients","filteredPatients","setFilteredPatients","pathname","colorMode","setColorMode","scaleMode","setScaleMode","filterDate","setFilterDate","Date","showReminder","setShowReminder","message","setMessage","loading","setLoading","setFilters","detectedstate","detecteddistrict","detectedcity","dateannounced","window","scrollTo","getPartition","chosenDate","v1","v2","v3","v4","get","then","response","data","raw_data","reverse","err","console","log","datePickers","document","querySelectorAll","forEach","el","setAttribute","handleFilters","label","value","f","newFilters","district","getElementById","city","style","display","selectedIndex","getSortedValues","setValues","Set","map","size","add","Array","from","sort","animationDelay","event","target","state","index","onkeydown","e","preventDefault","date","fomattedDate"],"mappings":"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","sourcesContent":["import DownloadBlock from './downloadblock';\r\nimport Footer from './footer';\r\nimport Patients from './patients';\r\n\r\nimport {RAW_DATA_PARTITIONS} from '../constants';\r\n\r\nimport axios from 'axios';\r\nimport {format, subDays, isWithinInterval, parse} from 'date-fns';\r\nimport React, {useState, useEffect, useCallback} from 'react';\r\nimport DatePicker from 'react-date-picker';\r\nimport * as Icon from 'react-feather';\r\nimport {Helmet} from 'react-helmet';\r\nimport {useLocation} from 'react-router-dom';\r\nimport {useLocalStorage} from 'react-use';\r\n\r\nfunction filterByObject(obj, filters) {\r\n  const keys = Object.keys(filters);\r\n  return obj.filter((p) => {\r\n    return keys.every((key) => {\r\n      if (!filters[key].length) return true;\r\n      return p[key] === filters[key];\r\n    });\r\n  });\r\n}\r\n\r\nfunction Demographics(props) {\r\n  const [fetched, setFetched] = useState(false);\r\n  const [patients, setPatients] = useState([]);\r\n  const [filteredPatients, setFilteredPatients] = useState([]);\r\n  const {pathname} = useLocation();\r\n  const [colorMode, setColorMode] = useState('genders');\r\n  const [scaleMode, setScaleMode] = useState(false);\r\n  const [filterDate, setFilterDate] = useState(subDays(new Date(), 1));\r\n  const [showReminder, setShowReminder] = useLocalStorage('showReminder', true);\r\n  const [message, setMessage] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [filters, setFilters] = useState({\r\n    detectedstate: '',\r\n    detecteddistrict: '',\r\n    detectedcity: '',\r\n    dateannounced: format(subDays(new Date(), 1), 'dd/MM/yyyy'),\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  const getPartition = useCallback(() => {\r\n    const chosenDate = parse(filters.dateannounced, 'dd/MM/yyyy', new Date());\r\n    if (isWithinInterval(chosenDate, RAW_DATA_PARTITIONS.v1)) {\r\n      return 1;\r\n    } else if (isWithinInterval(chosenDate, RAW_DATA_PARTITIONS.v2)) {\r\n      return 2;\r\n    } else if (isWithinInterval(chosenDate, RAW_DATA_PARTITIONS.v3)) {\r\n      return 3;\r\n    } else if (isWithinInterval(chosenDate, RAW_DATA_PARTITIONS.v4)) {\r\n      return 4;\r\n    }\r\n  }, [filters.dateannounced]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      axios\r\n        .get(`https://api.covid19india.org/raw_data${getPartition()}.json`)\r\n        .then((response) => {\r\n          setPatients(response.data.raw_data.reverse());\r\n          setFetched(true);\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }, [filters.dateannounced, getPartition]);\r\n\r\n  useEffect(() => {\r\n    const datePickers = document.querySelectorAll(\r\n      '.react-date-picker__inputGroup input'\r\n    );\r\n    datePickers.forEach((el) => el.setAttribute('readOnly', true));\r\n  }, []);\r\n\r\n  const handleFilters = (label, value) => {\r\n    setFilters((f) => {\r\n      // Create new object (deep copy)\r\n      const newFilters = {...f};\r\n      newFilters[label] = value;\r\n      if (label === 'detectedstate') {\r\n        const district = document.getElementById('district');\r\n        const city = document.getElementById('city');\r\n        // Hide boxes\r\n        if (value === '') district.style.display = 'none';\r\n        else district.style.display = 'inline';\r\n        city.style.display = 'none';\r\n        // Default to empty selection\r\n        district.selectedIndex = 0;\r\n        city.selectedIndex = 0;\r\n        newFilters['detecteddistrict'] = '';\r\n        newFilters['detectedcity'] = '';\r\n      } else if (label === 'detecteddistrict') {\r\n        const city = document.getElementById('city');\r\n        // Hide box\r\n        if (value === '') city.style.display = 'none';\r\n        else city.style.display = 'inline';\r\n        // Default to empty selection\r\n        city.selectedIndex = 0;\r\n        newFilters['detectedcity'] = '';\r\n      }\r\n      return newFilters;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (filterByObject(patients, filters).length > 0) {\r\n      setFilteredPatients(filterByObject(patients, filters));\r\n      setMessage(false);\r\n      setLoading(false);\r\n    } else {\r\n      setMessage(true);\r\n    }\r\n  }, [patients, filters]);\r\n\r\n  function getSortedValues(obj, key) {\r\n    const setValues = new Set(obj.map((p) => p[key]));\r\n    if (setValues.size > 1) setValues.add('');\r\n    if (key === 'dateannounced') return Array.from(setValues);\r\n    return Array.from(setValues).sort();\r\n  }\r\n\r\n  return (\r\n    <div className=\"Demographics\">\r\n      <Helmet>\r\n        <title>Demographics - covid19india.org</title>\r\n        <meta name=\"title\" content={`Demographics - covid19india.org`} />\r\n        <meta\r\n          name=\"description\"\r\n          content=\"A demographical overview of the Indian population affected by the coronavirus.\"\r\n        />\r\n      </Helmet>\r\n\r\n      <div className=\"filters fadeInUp\" style={{animationDelay: '0.2s'}}>\r\n        <div className=\"filters-left\">\r\n          <div className=\"select\">\r\n            <select\r\n              style={{animationDelay: '0.3s'}}\r\n              id=\"state\"\r\n              onChange={(event) => {\r\n                handleFilters('detectedstate', event.target.value);\r\n              }}\r\n              defaultValue={filters.detectedstate}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select State\r\n              </option>\r\n              {getSortedValues(patients, 'detectedstate').map(\r\n                (state, index) => {\r\n                  return (\r\n                    <option key={index} value={state}>\r\n                      {state === '' ? 'All' : state}\r\n                    </option>\r\n                  );\r\n                }\r\n              )}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"select\">\r\n            <select\r\n              style={{animationDelay: '0.4s', display: 'none'}}\r\n              id=\"district\"\r\n              onChange={(event) => {\r\n                handleFilters('detecteddistrict', event.target.value);\r\n              }}\r\n              defaultValue={filters.detecteddistrict}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select District\r\n              </option>\r\n              {getSortedValues(\r\n                filterByObject(patients, {\r\n                  detectedstate: filters.detectedstate,\r\n                }),\r\n                'detecteddistrict'\r\n              ).map((district, index) => {\r\n                return (\r\n                  <option key={index} value={district}>\r\n                    {district === '' ? 'All' : district}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"select\">\r\n            <select\r\n              style={{animationDelay: '0.4s', display: 'none'}}\r\n              id=\"city\"\r\n              onChange={(event) => {\r\n                handleFilters('detectedcity', event.target.value);\r\n              }}\r\n              defaultValue={filters.detectedcity}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select City\r\n              </option>\r\n              {getSortedValues(\r\n                filterByObject(patients, {\r\n                  detectedstate: filters.detectedstate,\r\n                  detecteddistrict: filters.detecteddistrict,\r\n                }),\r\n                'detectedcity'\r\n              ).map((city, index) => {\r\n                return (\r\n                  <option key={index} value={city}>\r\n                    {city === '' ? 'All' : city}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"select\">\r\n            <select\r\n              style={{animationDelay: '0.4s', display: 'none'}}\r\n              id=\"city\"\r\n              onChange={(event) => {\r\n                handleFilters('detectedcity', event.target.value);\r\n              }}\r\n              defaultValue={filters.detectedcity}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select City\r\n              </option>\r\n              {getSortedValues(\r\n                filterByObject(patients, {\r\n                  detectedstate: filters.detectedstate,\r\n                  detecteddistrict: filters.detecteddistrict,\r\n                }),\r\n                'detectedcity'\r\n              ).map((city, index) => {\r\n                return (\r\n                  <option key={index} value={city}>\r\n                    {city === '' ? 'All' : city}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"select\">\r\n            <DatePicker\r\n              value={filterDate}\r\n              minDate={new Date('30-Jan-2020')}\r\n              maxDate={subDays(new Date(), 1)}\r\n              format=\"dd/MM/y\"\r\n              calendarIcon={<Icon.Calendar />}\r\n              inputProps={\r\n                (onkeydown = (e) => {\r\n                  e.preventDefault();\r\n                })\r\n              }\r\n              clearIcon={<Icon.XCircle />}\r\n              onChange={(date) => {\r\n                setFilterDate(date);\r\n                const fomattedDate = !!date ? format(date, 'dd/MM/yyyy') : '';\r\n                handleFilters('dateannounced', fomattedDate);\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          {/* <div className=\"select\">\r\n            <select\r\n              style={{animationDelay: '0.4s'}}\r\n              onChange={(event) => {\r\n                handleFilters('dateannounced', event.target.value);\r\n              }}\r\n            >\r\n              {Array.from(new Set(patients.map((p) => p.dateannounced))).map(\r\n                (date, index) => {\r\n                  return (\r\n                    <option key={index} value={date}>\r\n                      {date}\r\n                    </option>\r\n                  );\r\n                }\r\n              )}\r\n            </select>\r\n          </div>*/}\r\n        </div>\r\n\r\n        <div className=\"legend\">\r\n          {colorMode === 'genders' && (\r\n            <div className=\"legend-left\">\r\n              <div className=\"circle is-female\"></div>\r\n              <h5 className=\"is-female\">Female</h5>\r\n              <div className=\"circle is-male\"></div>\r\n              <h5 className=\"is-male\">Male</h5>\r\n              <div className=\"circle\"></div>\r\n              <h5 className=\"\">Unknown</h5>\r\n            </div>\r\n          )}\r\n\r\n          {colorMode === 'transmission' && (\r\n            <div className=\"legend-left\">\r\n              <div className=\"circle is-local\"></div>\r\n              <h5 className=\"is-local\">Local</h5>\r\n              <div className=\"circle is-imported\"></div>\r\n              <h5 className=\"is-imported\">Imported</h5>\r\n              <div className=\"circle\"></div>\r\n              <h5 className=\"\">Unknown</h5>\r\n            </div>\r\n          )}\r\n\r\n          {colorMode === 'nationality' && (\r\n            <div className=\"legend-left nationality\">\r\n              <div className=\"circle is-in\"></div>\r\n              <h5 className=\"is-in\">In</h5>\r\n              <div className=\"circle is-uk\"></div>\r\n              <h5 className=\"is-uk\">Uk</h5>\r\n              <div className=\"circle is-us\"></div>\r\n              <h5 className=\"is-us\">Us</h5>\r\n              <div className=\"circle is-th\"></div>\r\n              <h5 className=\"is-thailand\">Th</h5>\r\n              <div className=\"circle is-ph\"></div>\r\n              <h5 className=\"is-ph\">Ph</h5>\r\n              <div className=\"circle is-it\"></div>\r\n              <h5 className=\"is-it\">It</h5>\r\n              <div className=\"circle is-ca\"></div>\r\n              <h5 className=\"is-ca\">Ca</h5>\r\n              <div className=\"circle is-id\"></div>\r\n              <h5 className=\"is-id\">Id</h5>\r\n              <div className=\"circle is-mm\"></div>\r\n              <h5 className=\"is-mm\">Mm</h5>\r\n            </div>\r\n          )}\r\n\r\n          <div className={`select ${colorMode}`}>\r\n            <select\r\n              style={{animationDelay: '0.4s'}}\r\n              onChange={(event) => {\r\n                setColorMode(event.target.value);\r\n              }}\r\n              defaultValue={colorMode}\r\n            >\r\n              {/* <option value=\"\" disabled>\r\n                Color modes\r\n              </option> */}\r\n              <option value=\"genders\">Genders</option>\r\n              <option value=\"transmission\">Transmission</option>\r\n              <option value=\"nationality\">Nationality</option>\r\n              {/* <option value=\"age\">Age</option>*/}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"header fadeInUp\" style={{animationDelay: '0.3s'}}>\r\n        <div>\r\n          <h1>Demographics</h1>\r\n\r\n          <div\r\n            className={`deep-dive ${\r\n              message || filteredPatients.length === 0 ? 'disabled' : ''\r\n            }`}\r\n          >\r\n            <h5>Expand</h5>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={scaleMode}\r\n              disabled={message || filteredPatients.length === 0}\r\n              onChange={(event) => {\r\n                setScaleMode(!scaleMode);\r\n              }}\r\n              className=\"switch\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <h6 className=\"disclaimer\">\r\n          Some of the data provided might be missing/unknown as the details have\r\n          not been shared by the state/central governments\r\n        </h6>\r\n      </div>\r\n\r\n      <div\r\n        className=\"reminder fadeInUp\"\r\n        style={{animationDelay: '1s', display: showReminder ? '' : 'none'}}\r\n      >\r\n        <Icon.XCircle\r\n          onClick={() => {\r\n            setShowReminder(false);\r\n          }}\r\n        />\r\n        <p>\r\n          It is important that we do not think of these as just tiny boxes,\r\n          numbers, or just another part of statistics - among these are our\r\n          neighbors, our teachers, our healthcare workers, our supermarket\r\n          vendors, our friends, our co-workers, our children or our\r\n          grandparents.\r\n          <br />\r\n          <br />\r\n          Among these are our people.\r\n        </p>\r\n      </div>\r\n\r\n      {fetched && (\r\n        <div className=\"patientdb-wrapper\">\r\n          {loading ? (\r\n            ' '\r\n          ) : message ? (\r\n            <div className=\"no-result\">\r\n              <h5>\r\n                There were no new cases in\r\n                <span>\r\n                  {filters.detectedcity.length > 0\r\n                    ? ` ${filters.detectedcity}, `\r\n                    : ''}\r\n                  {filters.detecteddistrict.length > 0\r\n                    ? ` ${filters.detecteddistrict}, `\r\n                    : ''}\r\n                  {' ' + filters.detectedstate}\r\n                </span>{' '}\r\n                on <span>{filters.dateannounced}.</span>\r\n              </h5>\r\n            </div>\r\n          ) : (\r\n            <Patients\r\n              patients={filteredPatients}\r\n              colorMode={colorMode}\r\n              expand={scaleMode}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      <DownloadBlock patients={patients} />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Demographics;\r\n"]},"metadata":{},"sourceType":"module"}
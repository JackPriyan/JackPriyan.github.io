{"ast":null,"code":"import { useEffect, useCallback } from 'react'; // adapted from details-menu web component https://github.com/github/details-menu-element\n\nfunction useKeyboardNav(details, open, setOpen) {\n  var handleKeyDown = useCallback(function (event) {\n    var closeDetails = function closeDetails() {\n      setOpen(false);\n      var summary = details.current.querySelector('summary');\n      if (summary) summary.focus();\n    };\n\n    var openDetails = function openDetails() {\n      setOpen(true);\n    };\n\n    var focusItem = function focusItem(next) {\n      var options = Array.from(details.current.querySelectorAll('[role^=\"menuitem\"]:not([hidden]):not([disabled]):not([aria-disabled=\"true\"])'));\n      var selected = document.activeElement;\n      var index = options.indexOf(selected);\n      var found = next ? options[index + 1] : options[index - 1];\n      var def = next ? options[0] : options[options.length - 1];\n      return found || def;\n    };\n\n    var isMenuItem = function isMenuItem(el) {\n      var role = el.getAttribute('role');\n      return role === 'menuitem' || role === 'menuitemcheckbox' || role === 'menuitemradio';\n    };\n\n    if (!(event instanceof KeyboardEvent)) return;\n    var isSummaryFocused = event.target instanceof Element && event.target.tagName === 'SUMMARY';\n\n    switch (event.key) {\n      case 'Escape':\n        if (open) {\n          closeDetails(details);\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        break;\n\n      case 'ArrowDown':\n        {\n          if (isSummaryFocused && !open) {\n            openDetails(details);\n          }\n\n          var target = focusItem(true);\n          if (target) target.focus();\n          event.preventDefault();\n        }\n        break;\n\n      case 'ArrowUp':\n        {\n          if (isSummaryFocused && !open) {\n            openDetails();\n          }\n\n          var _target = focusItem(false);\n\n          if (_target) _target.focus();\n          event.preventDefault();\n        }\n        break;\n\n      case ' ':\n      case 'Enter':\n        {\n          var selected = document.activeElement;\n\n          if (selected && isMenuItem(selected) && selected.closest('details') === details) {\n            event.preventDefault();\n            event.stopPropagation();\n            selected.click();\n          }\n        }\n        break;\n    }\n  }, [details, open, setOpen]);\n  useEffect(function () {\n    var current = details.current;\n    if (!current) return;\n    current.addEventListener('keydown', handleKeyDown);\n    return function () {\n      current.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [details, handleKeyDown]);\n}\n\nexport default useKeyboardNav;","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/node_modules/@primer/components/lib-esm/SelectMenu/hooks/useKeyboardNav.js"],"names":["useEffect","useCallback","useKeyboardNav","details","open","setOpen","handleKeyDown","event","closeDetails","summary","current","querySelector","focus","openDetails","focusItem","next","options","Array","from","querySelectorAll","selected","document","activeElement","index","indexOf","found","def","length","isMenuItem","el","role","getAttribute","KeyboardEvent","isSummaryFocused","target","Element","tagName","key","preventDefault","stopPropagation","_target","closest","click","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import { useEffect, useCallback } from 'react'; // adapted from details-menu web component https://github.com/github/details-menu-element\n\nfunction useKeyboardNav(details, open, setOpen) {\n  var handleKeyDown = useCallback(function (event) {\n    var closeDetails = function closeDetails() {\n      setOpen(false);\n      var summary = details.current.querySelector('summary');\n      if (summary) summary.focus();\n    };\n\n    var openDetails = function openDetails() {\n      setOpen(true);\n    };\n\n    var focusItem = function focusItem(next) {\n      var options = Array.from(details.current.querySelectorAll('[role^=\"menuitem\"]:not([hidden]):not([disabled]):not([aria-disabled=\"true\"])'));\n      var selected = document.activeElement;\n      var index = options.indexOf(selected);\n      var found = next ? options[index + 1] : options[index - 1];\n      var def = next ? options[0] : options[options.length - 1];\n      return found || def;\n    };\n\n    var isMenuItem = function isMenuItem(el) {\n      var role = el.getAttribute('role');\n      return role === 'menuitem' || role === 'menuitemcheckbox' || role === 'menuitemradio';\n    };\n\n    if (!(event instanceof KeyboardEvent)) return;\n    var isSummaryFocused = event.target instanceof Element && event.target.tagName === 'SUMMARY';\n\n    switch (event.key) {\n      case 'Escape':\n        if (open) {\n          closeDetails(details);\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        break;\n\n      case 'ArrowDown':\n        {\n          if (isSummaryFocused && !open) {\n            openDetails(details);\n          }\n\n          var target = focusItem(true);\n          if (target) target.focus();\n          event.preventDefault();\n        }\n        break;\n\n      case 'ArrowUp':\n        {\n          if (isSummaryFocused && !open) {\n            openDetails();\n          }\n\n          var _target = focusItem(false);\n\n          if (_target) _target.focus();\n          event.preventDefault();\n        }\n        break;\n\n      case ' ':\n      case 'Enter':\n        {\n          var selected = document.activeElement;\n\n          if (selected && isMenuItem(selected) && selected.closest('details') === details) {\n            event.preventDefault();\n            event.stopPropagation();\n            selected.click();\n          }\n        }\n        break;\n    }\n  }, [details, open, setOpen]);\n  useEffect(function () {\n    var current = details.current;\n    if (!current) return;\n    current.addEventListener('keydown', handleKeyDown);\n    return function () {\n      current.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [details, handleKeyDown]);\n}\n\nexport default useKeyboardNav;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import{defaultOptions,xAxisDefaults,formatNumber}from'./chart-defaults';import deepmerge from'deepmerge';import React from'react';import{Bar}from'react-chartjs-2';function AgeChart(props){var ages=Array(10).fill(0);if(!props.data||props.data.length===0){return/*#__PURE__*/React.createElement(\"div\",null);}props.data.forEach(function(patient){if(patient.agebracket){var age=parseInt(patient.agebracket);for(var i=0;i<10;i++){if(age>i*10&&age<=(i+1)*10){ages[i]++;}}}});var chartData={labels:['0-10','11-20','21-30','31-40','41-50','51-60','61-70','71-80','81-90','91-100'],datasets:[{data:ages,label:'Cases',backgroundColor:'#bc79c9'}]};var chartOptions=deepmerge(defaultOptions,{legend:{display:false},scales:{xAxes:[deepmerge(xAxisDefaults,{stacked:true})],yAxes:[{stacked:true}]},events:['mousemove','mouseout','touchstart','touchmove','touchend'],responsive:true,maintainAspectRatio:false,tooltips:{mode:'index'}});var sampleSize=ages.reduce(function(a,b){return a+b;},0);return/*#__PURE__*/React.createElement(\"div\",{className:\"charts-header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"chart-title\"},props.title),/*#__PURE__*/React.createElement(\"div\",{className:\"chart-content doughnut\"},/*#__PURE__*/React.createElement(Bar,{data:chartData,options:chartOptions})),/*#__PURE__*/React.createElement(\"div\",{className:\"chart-note\"},\"Sample Size: \",formatNumber(sampleSize),\" patients\"));}export default AgeChart;","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/src/components/Charts/agechart.js"],"names":["defaultOptions","xAxisDefaults","formatNumber","deepmerge","React","Bar","AgeChart","props","ages","Array","fill","data","length","forEach","patient","agebracket","age","parseInt","i","chartData","labels","datasets","label","backgroundColor","chartOptions","legend","display","scales","xAxes","stacked","yAxes","events","responsive","maintainAspectRatio","tooltips","mode","sampleSize","reduce","a","b","title"],"mappings":"AAAA,OAAQA,cAAR,CAAwBC,aAAxB,CAAuCC,YAAvC,KAA0D,kBAA1D,CAEA,MAAOC,CAAAA,SAAP,KAAsB,WAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,GAAR,KAAkB,iBAAlB,CAEA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CACvB,GAAMC,CAAAA,IAAI,CAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe,CAAf,CAAb,CACA,GAAI,CAACH,KAAK,CAACI,IAAP,EAAeJ,KAAK,CAACI,IAAN,CAAWC,MAAX,GAAsB,CAAzC,CAA4C,CAC1C,mBAAO,+BAAP,CACD,CAEDL,KAAK,CAACI,IAAN,CAAWE,OAAX,CAAmB,SAACC,OAAD,CAAa,CAC9B,GAAIA,OAAO,CAACC,UAAZ,CAAwB,CACtB,GAAMC,CAAAA,GAAG,CAAGC,QAAQ,CAACH,OAAO,CAACC,UAAT,CAApB,CACA,IAAK,GAAIG,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,EAApB,CAAwBA,CAAC,EAAzB,CAA6B,CAC3B,GAAIF,GAAG,CAAGE,CAAC,CAAG,EAAV,EAAgBF,GAAG,EAAI,CAACE,CAAC,CAAG,CAAL,EAAU,EAArC,CAAyC,CACvCV,IAAI,CAACU,CAAD,CAAJ,GACD,CACF,CACF,CACF,CATD,EAWA,GAAMC,CAAAA,SAAS,CAAG,CAChBC,MAAM,CAAE,CACN,MADM,CAEN,OAFM,CAGN,OAHM,CAIN,OAJM,CAKN,OALM,CAMN,OANM,CAON,OAPM,CAQN,OARM,CASN,OATM,CAUN,QAVM,CADQ,CAahBC,QAAQ,CAAE,CACR,CACEV,IAAI,CAAEH,IADR,CAEEc,KAAK,CAAE,OAFT,CAGEC,eAAe,CAAE,SAHnB,CADQ,CAbM,CAAlB,CAsBA,GAAMC,CAAAA,YAAY,CAAGrB,SAAS,CAACH,cAAD,CAAiB,CAC7CyB,MAAM,CAAE,CACNC,OAAO,CAAE,KADH,CADqC,CAI7CC,MAAM,CAAE,CACNC,KAAK,CAAE,CACLzB,SAAS,CAACF,aAAD,CAAgB,CACvB4B,OAAO,CAAE,IADc,CAAhB,CADJ,CADD,CAMNC,KAAK,CAAE,CACL,CACED,OAAO,CAAE,IADX,CADK,CAND,CAJqC,CAgB7CE,MAAM,CAAE,CAAC,WAAD,CAAc,UAAd,CAA0B,YAA1B,CAAwC,WAAxC,CAAqD,UAArD,CAhBqC,CAiB7CC,UAAU,CAAE,IAjBiC,CAkB7CC,mBAAmB,CAAE,KAlBwB,CAmB7CC,QAAQ,CAAE,CACRC,IAAI,CAAE,OADE,CAnBmC,CAAjB,CAA9B,CAwBA,GAAMC,CAAAA,UAAU,CAAG5B,IAAI,CAAC6B,MAAL,CAAY,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAAGC,CAAd,EAAZ,CAA6B,CAA7B,CAAnB,CAEA,mBACE,2BAAK,SAAS,CAAC,eAAf,eACE,2BAAK,SAAS,CAAC,aAAf,EAA8BhC,KAAK,CAACiC,KAApC,CADF,cAEE,2BAAK,SAAS,CAAC,wBAAf,eACE,oBAAC,GAAD,EAAK,IAAI,CAAErB,SAAX,CAAsB,OAAO,CAAEK,YAA/B,EADF,CAFF,cAKE,2BAAK,SAAS,CAAC,YAAf,kBACgBtB,YAAY,CAACkC,UAAD,CAD5B,aALF,CADF,CAWD,CAED,cAAe9B,CAAAA,QAAf","sourcesContent":["import {defaultOptions, xAxisDefaults, formatNumber} from './chart-defaults';\r\n\r\nimport deepmerge from 'deepmerge';\r\nimport React from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nfunction AgeChart(props) {\r\n  const ages = Array(10).fill(0);\r\n  if (!props.data || props.data.length === 0) {\r\n    return <div></div>;\r\n  }\r\n\r\n  props.data.forEach((patient) => {\r\n    if (patient.agebracket) {\r\n      const age = parseInt(patient.agebracket);\r\n      for (let i = 0; i < 10; i++) {\r\n        if (age > i * 10 && age <= (i + 1) * 10) {\r\n          ages[i]++;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const chartData = {\r\n    labels: [\r\n      '0-10',\r\n      '11-20',\r\n      '21-30',\r\n      '31-40',\r\n      '41-50',\r\n      '51-60',\r\n      '61-70',\r\n      '71-80',\r\n      '81-90',\r\n      '91-100',\r\n    ],\r\n    datasets: [\r\n      {\r\n        data: ages,\r\n        label: 'Cases',\r\n        backgroundColor: '#bc79c9',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = deepmerge(defaultOptions, {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        deepmerge(xAxisDefaults, {\r\n          stacked: true,\r\n        }),\r\n      ],\r\n      yAxes: [\r\n        {\r\n          stacked: true,\r\n        },\r\n      ],\r\n    },\r\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n      mode: 'index',\r\n    },\r\n  });\r\n\r\n  const sampleSize = ages.reduce((a, b) => a + b, 0);\r\n\r\n  return (\r\n    <div className=\"charts-header\">\r\n      <div className=\"chart-title\">{props.title}</div>\r\n      <div className=\"chart-content doughnut\">\r\n        <Bar data={chartData} options={chartOptions} />\r\n      </div>\r\n      <div className=\"chart-note\">\r\n        Sample Size: {formatNumber(sampleSize)} patients\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AgeChart;\r\n"]},"metadata":{},"sourceType":"module"}
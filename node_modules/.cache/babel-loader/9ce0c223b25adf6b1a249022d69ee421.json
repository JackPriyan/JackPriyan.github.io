{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectSpread from\"C:\\\\Users\\\\Jakith\\\\JackPriyan.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import ChoroplethMap from'./choropleth';import{testedToolTip}from'./tooltips';import{MAP_META,MAP_STATISTICS,MAP_TYPES,MAP_VIEWS,STATE_CODES_REVERSE,STATE_POPULATIONS}from'../constants';import{formatDate,formatNumber,formatDayMonth,formatLastUpdated}from'../utils/commonfunctions';import{parse}from'date-fns';import equal from'fast-deep-equal';import React,{useState,useEffect,useMemo,useCallback}from'react';import ReactDOM from'react-dom';import*as Icon from'react-feather';import{useTranslation}from'react-i18next';import{Link}from'react-router-dom';var isEqual=function isEqual(prevProps,currProps){if(!equal(prevProps.regionHighlighted,currProps.regionHighlighted)){return false;}if(!equal(prevProps.mapOption,currProps.mapOption)){return false;}if(!equal(prevProps.anchor,currProps.anchor)){return false;}return true;};var getRegionFromState=function getRegionFromState(state){if(!state)return;var region=_objectSpread({},state);return region;};var getRegionFromDistrict=function getRegionFromDistrict(districtData,name){if(!districtData)return;var region=_objectSpread({},districtData);return region;};function MapExplorer(_ref){var _testObj$totaltested;var mapName=_ref.mapName,states=_ref.states,districts=_ref.districts,zones=_ref.zones,stateTestData=_ref.stateTestData,regionHighlighted=_ref.regionHighlighted,setRegionHighlighted=_ref.setRegionHighlighted,anchor=_ref.anchor,setAnchor=_ref.setAnchor,mapOption=_ref.mapOption,setMapOption=_ref.setMapOption,_ref$isCountryLoaded=_ref.isCountryLoaded,isCountryLoaded=_ref$isCountryLoaded===void 0?true:_ref$isCountryLoaded;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState({name:mapName,stat:MAP_STATISTICS.TOTAL,view:MAP_META[mapName].mapType===MAP_TYPES.COUNTRY?MAP_VIEWS.STATES:MAP_VIEWS.DISTRICTS}),_useState2=_slicedToArray(_useState,2),currentMap=_useState2[0],setCurrentMap=_useState2[1];var currentMapMeta=MAP_META[currentMap.name];var _useMemo=useMemo(function(){var currentMapData={};var statistic={};if(currentMap.stat===MAP_STATISTICS.ZONE){var dataTypes=['Red','Orange','Green'];statistic=dataTypes.reduce(function(acc,dtype){acc[dtype]=0;return acc;},{});if(currentMapMeta.mapType===MAP_TYPES.COUNTRY){currentMapData=Object.keys(zones).reduce(function(acc1,state){acc1[state]=Object.keys(zones[state]).reduce(function(acc2,district){var zone=zones[state][district].zone;if(zone){acc2[district]=zone;statistic[zone]+=1;}return acc2;},{});return acc1;},{});}else if(currentMapMeta.mapType===MAP_TYPES.STATE){var state=currentMap.name;currentMapData[state]=Object.keys(zones[state]).reduce(function(acc,district){var zone=zones[state][district].zone;if(zone){acc[district]=zone;statistic[zone]+=1;}return acc;},{});}}else{var _dataTypes=['confirmed','active','recovered','deceased'];statistic=_dataTypes.reduce(function(acc,dtype){acc[dtype]={total:0,max:0};return acc;},{});if(currentMapMeta.mapType===MAP_TYPES.COUNTRY){if(currentMap.view===MAP_VIEWS.STATES){currentMapData=states.reduce(function(acc,state){acc[state.state]={};_dataTypes.forEach(function(dtype){var typeCount=parseInt(state[dtype!=='deceased'?dtype:'deaths'])||0;if(currentMap.stat===MAP_STATISTICS.PER_MILLION)typeCount=1e6*typeCount/STATE_POPULATIONS[state.state];if(state.state!=='Total'){statistic[dtype].total+=typeCount;if(typeCount>statistic[dtype].max){statistic[dtype].max=typeCount;}}acc[state.state][dtype]=typeCount;});return acc;},{});}else{currentMapData=Object.keys(districts).reduce(function(acc1,state){var districtWiseData=(districts[state]||{districtData:{}}).districtData;acc1[state]=Object.keys(districtWiseData).reduce(function(acc2,district){acc2[district]={};_dataTypes.forEach(function(dtype){var typeCount=parseInt(districtWiseData[district][dtype]);statistic[dtype].total+=typeCount;if(typeCount>statistic[dtype].max){statistic[dtype].max=typeCount;}acc2[district][dtype]=typeCount;});return acc2;},{});return acc1;},{});}}else if(currentMapMeta.mapType===MAP_TYPES.STATE){var districtWiseData=(districts[currentMap.name]||{districtData:{}}).districtData;currentMapData[currentMap.name]=Object.keys(districtWiseData).reduce(function(acc,district){acc[district]={};_dataTypes.forEach(function(dtype){var typeCount=parseInt(districtWiseData[district][dtype]);statistic[dtype].total+=typeCount;if(typeCount>statistic[dtype].max){statistic[dtype].max=typeCount;}acc[district][dtype]=typeCount;});return acc;},{});currentMapData[currentMap.name].Total=states.find(function(state){return currentMap.name===state.state;});}}return[statistic,currentMapData];},[currentMap,currentMapMeta.mapType,districts,zones,states]),_useMemo2=_slicedToArray(_useMemo,2),statistic=_useMemo2[0],currentMapData=_useMemo2[1];var _useMemo3=useMemo(function(){if(!regionHighlighted.district){var state=getRegionFromState(states.find(function(state){return regionHighlighted.state===state.state;}));return[state,state];}else{var stateDistrictObj=districts[regionHighlighted.state]||{districtData:{}};var districtData=stateDistrictObj.districtData[regionHighlighted.district]||{confirmed:0,active:0,recovered:0,deaths:0};var district=getRegionFromDistrict(districtData,regionHighlighted.district);var _state=getRegionFromState(states.find(function(state){return state.state===regionHighlighted.state;}));district.district=regionHighlighted.district;district.state=_state.state;if(currentMapMeta.mapType===MAP_TYPES.COUNTRY)_state=states.find(function(state){return state.state==='Total';});return[district,_state];}},[states,districts,currentMapMeta.mapType,regionHighlighted.state,regionHighlighted.district]),_useMemo4=_slicedToArray(_useMemo3,2),hoveredRegion=_useMemo4[0],panelRegion=_useMemo4[1];useEffect(function(){if(regionHighlighted.district){if(currentMap.name!==regionHighlighted.state&&!(currentMapMeta.mapType===MAP_TYPES.COUNTRY&&currentMap.view===MAP_VIEWS.DISTRICTS)){var state=regionHighlighted.state;var newMapMeta=MAP_META[state];if(!newMapMeta){return;}setCurrentMap({name:state,view:MAP_VIEWS.DISTRICTS,stat:currentMap.stat===MAP_STATISTICS.PER_MILLION?MAP_STATISTICS.TOTAL:currentMap.stat});}}else if(isCountryLoaded&&currentMapMeta.mapType===MAP_TYPES.STATE){setCurrentMap({name:'India',view:currentMap.stat===MAP_STATISTICS.ZONE?MAP_VIEWS.DISTRICTS:MAP_VIEWS.STATES,stat:currentMap.stat});}},[isCountryLoaded,regionHighlighted.state,regionHighlighted.district,currentMap,currentMapMeta.mapType]);var switchMapToState=useCallback(function(state){var newMapMeta=MAP_META[state];if(!newMapMeta){return;}if(newMapMeta.mapType===MAP_TYPES.STATE){var _ref2=districts[state]||{districtData:{}},districtData=_ref2.districtData;var topDistrict=Object.keys(districtData).filter(function(state){return state!=='Unknown';}).sort(function(a,b){return districtData[b].confirmed-districtData[a].confirmed;})[0];ReactDOM.unstable_batchedUpdates(function(){setRegionHighlighted({district:topDistrict,state:state});setCurrentMap({name:state,view:MAP_VIEWS.DISTRICTS,stat:currentMap.stat===MAP_STATISTICS.PER_MILLION?MAP_STATISTICS.TOTAL:currentMap.stat});});}else{ReactDOM.unstable_batchedUpdates(function(){setCurrentMap({name:'India',view:currentMap.stat===MAP_STATISTICS.ZONE?MAP_VIEWS.DISTRICTS:MAP_VIEWS.STATES,stat:currentMap.stat});setRegionHighlighted({state:'Total'});});}},[currentMap.stat,districts,setRegionHighlighted]);var testObj=stateTestData[panelRegion.state];var hoveredRegionCount;var hoveredRegionZone;if(currentMap.stat!==MAP_STATISTICS.ZONE){var data=hoveredRegion.district&&currentMapData[hoveredRegion.state]?currentMapData[hoveredRegion.state][hoveredRegion.district]:hoveredRegion.state!==currentMap.name?currentMapData[hoveredRegion.state]:currentMapData[hoveredRegion.state].Total;hoveredRegionCount=data?currentMap.stat===MAP_STATISTICS.PER_MILLION?Number(parseFloat(data[mapOption]).toFixed(2)):data[mapOption]:0;}else{hoveredRegionZone=zones[hoveredRegion.state]&&zones[hoveredRegion.state][hoveredRegion.district]?zones[hoveredRegion.state][hoveredRegion.district].zone:'';}return/*#__PURE__*/React.createElement(\"div\",{className:\"MapExplorer fadeInUp \".concat(anchor==='mapexplorer'?'stickied':''),style:{animationDelay:'1.5s',display:anchor==='timeseries'?'none':''}},window.innerWidth>769&&/*#__PURE__*/React.createElement(\"div\",{className:\"anchor \".concat(anchor==='mapexplorer'?'stickied':''),onClick:function onClick(){setAnchor(anchor==='mapexplorer'?null:'mapexplorer');}},/*#__PURE__*/React.createElement(Icon.Anchor,null)),/*#__PURE__*/React.createElement(\"div\",{className:\"header\"},/*#__PURE__*/React.createElement(\"h1\",null,t(currentMap.name),\" \",t('Map')),/*#__PURE__*/React.createElement(\"h6\",null,t('{{action}} over a {{mapType}} for more details',{action:t(window.innerWidth<=769?'Tap':'Hover'),mapType:t(currentMapMeta.mapType===MAP_TYPES.COUNTRY?'state/UT':'District')}))),/*#__PURE__*/React.createElement(\"div\",{className:\"map-stats\"},/*#__PURE__*/React.createElement(\"div\",{className:\"stats fadeInUp \".concat(mapOption==='confirmed'?'focused':''),style:{animationDelay:'2s'},onClick:function onClick(){return setMapOption('confirmed');}},/*#__PURE__*/React.createElement(\"h5\",null,window.innerWidth<=769?t('Cnfmd'):t('Confirmed')),/*#__PURE__*/React.createElement(\"div\",{className:\"stats-bottom\"},/*#__PURE__*/React.createElement(\"h1\",null,formatNumber(panelRegion.confirmed)),/*#__PURE__*/React.createElement(\"h6\",null,\"+\".concat(formatNumber(panelRegion.deltaconfirmed))))),/*#__PURE__*/React.createElement(\"div\",{className:\"stats is-blue fadeInUp \".concat(mapOption==='active'?'focused':''),style:{animationDelay:'2.1s'},onClick:function onClick(){return setMapOption('active');}},/*#__PURE__*/React.createElement(\"h5\",null,window.innerWidth<=769?t('Actv'):t('Active')),/*#__PURE__*/React.createElement(\"div\",{className:\"stats-bottom\"},/*#__PURE__*/React.createElement(\"h1\",null,formatNumber(panelRegion.active)),/*#__PURE__*/React.createElement(\"h6\",null,\" \"))),/*#__PURE__*/React.createElement(\"div\",{className:\"stats is-green fadeInUp \".concat(mapOption==='recovered'?'focused':''),style:{animationDelay:'2.2s'},onClick:function onClick(){return setMapOption('recovered');}},/*#__PURE__*/React.createElement(\"h5\",null,window.innerWidth<=769?t('Rcvrd'):t('Recovered')),/*#__PURE__*/React.createElement(\"div\",{className:\"stats-bottom\"},/*#__PURE__*/React.createElement(\"h1\",null,formatNumber(panelRegion.recovered)),/*#__PURE__*/React.createElement(\"h6\",null,\"+\".concat(formatNumber(panelRegion.deltarecovered))))),/*#__PURE__*/React.createElement(\"div\",{className:\"stats is-gray fadeInUp \".concat(mapOption==='deceased'?'focused':''),style:{animationDelay:'2.3s'},onClick:function onClick(){return setMapOption('deceased');}},/*#__PURE__*/React.createElement(\"h5\",null,window.innerWidth<=769?t('Dcsd'):t('Deceased')),/*#__PURE__*/React.createElement(\"div\",{className:\"stats-bottom\"},/*#__PURE__*/React.createElement(\"h1\",null,formatNumber(panelRegion.deaths)),/*#__PURE__*/React.createElement(\"h6\",null,\"+\".concat(formatNumber(panelRegion.deltadeaths))))),/*#__PURE__*/React.createElement(\"div\",{className:\"stats is-purple tested fadeInUp\",style:{animationDelay:'2.4s'}},/*#__PURE__*/React.createElement(\"h5\",null,t('Tested')),/*#__PURE__*/React.createElement(\"div\",{className:\"stats-bottom\"},/*#__PURE__*/React.createElement(\"h1\",null,formatNumber(testObj===null||testObj===void 0?void 0:testObj.totaltested))),/*#__PURE__*/React.createElement(\"h6\",{className:\"timestamp\"},!isNaN(parse(testObj===null||testObj===void 0?void 0:testObj.updatedon,'dd/MM/yyyy',new Date()))?t('As of {{date}}',{date:formatDayMonth(testObj===null||testObj===void 0?void 0:testObj.updatedon)}):''),(testObj===null||testObj===void 0?void 0:(_testObj$totaltested=testObj.totaltested)===null||_testObj$totaltested===void 0?void 0:_testObj$totaltested.length)>1&&/*#__PURE__*/React.createElement(\"a\",{href:testObj.source,target:\"_noblank\"},/*#__PURE__*/React.createElement(Icon.Link,null)),panelRegion.state==='Total'?testedToolTip:'')),/*#__PURE__*/React.createElement(\"div\",{className:\"meta fadeInUp\",style:{animationDelay:'2.4s'}},/*#__PURE__*/React.createElement(\"h2\",{className:\"\".concat(currentMap.stat!==MAP_STATISTICS.ZONE?mapOption!=='confirmed'?mapOption:'':hoveredRegionZone)},hoveredRegion.district?t(hoveredRegion.district)+(hoveredRegion.district==='Unknown'?\" (\".concat(t(hoveredRegion.state),\")\"):''):t(hoveredRegion.state)),currentMapMeta.mapType!==MAP_TYPES.STATE&&panelRegion.lastupdatedtime&&/*#__PURE__*/React.createElement(\"div\",{className:\"last-update\"},/*#__PURE__*/React.createElement(\"h6\",null,t('Last updated')),/*#__PURE__*/React.createElement(\"h3\",null,isNaN(Date.parse(formatDate(panelRegion.lastupdatedtime)))?'':formatLastUpdated(panelRegion.lastupdatedtime)+' '+t('ago'))),currentMapMeta.mapType===MAP_TYPES.STATE?/*#__PURE__*/React.createElement(Link,{to:\"state/\".concat(STATE_CODES_REVERSE[panelRegion.state])},/*#__PURE__*/React.createElement(\"div\",{className:\"button state-page-button\"},/*#__PURE__*/React.createElement(\"abbr\",null,t('Visit state page')),/*#__PURE__*/React.createElement(Icon.ArrowRightCircle,null))):null,currentMap.stat!==MAP_STATISTICS.ZONE&&(currentMapMeta.mapType===MAP_TYPES.STATE||currentMapMeta.mapType===MAP_TYPES.COUNTRY&&currentMap.stat!==MAP_STATISTICS.TOTAL)&&(currentMap.stat!==MAP_STATISTICS.HOTSPOTS||(hoveredRegion===null||hoveredRegion===void 0?void 0:hoveredRegion.district))?/*#__PURE__*/React.createElement(\"h1\",{className:\"district \".concat(mapOption!=='confirmed'?mapOption:'')},hoveredRegionCount,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",null,t(mapOption),' ',currentMap.stat===MAP_STATISTICS.PER_MILLION?\" \".concat(t('per million')):'')):null,currentMapMeta.mapType===MAP_TYPES.STATE?/*#__PURE__*/React.createElement(\"div\",{className:\"button back-button\",onClick:function onClick(){return switchMapToState('India');}},t('Back')):null,currentMapMeta.mapType===MAP_TYPES.STATE&&currentMapData.Unknown&&currentMapData.Unknown[mapOption]>0?/*#__PURE__*/React.createElement(\"h4\",{className:\"unknown\"},t('Districts unknown for'),\" \",currentMapData.Unknown[mapOption],' ',t('people')):null),/*#__PURE__*/React.createElement(\"div\",null,mapOption&&/*#__PURE__*/React.createElement(ChoroplethMap,{statistic:statistic,currentMap:currentMap,mapData:currentMapData,regionHighlighted:regionHighlighted,setRegionHighlighted:setRegionHighlighted,changeMap:switchMapToState,mapOption:mapOption,isCountryLoaded:isCountryLoaded})),/*#__PURE__*/React.createElement(\"div\",{className:\"tabs-map\"},/*#__PURE__*/React.createElement(\"div\",{className:\"tab \".concat(currentMap.stat===MAP_STATISTICS.TOTAL?'focused':''),onClick:function onClick(){setCurrentMap({name:currentMap.name,view:currentMapMeta.mapType===MAP_TYPES.COUNTRY?MAP_VIEWS.STATES:MAP_VIEWS.DISTRICTS,stat:MAP_STATISTICS.TOTAL});if(currentMapMeta.mapType===MAP_TYPES.COUNTRY)setRegionHighlighted({state:regionHighlighted.state});}},/*#__PURE__*/React.createElement(\"h4\",null,t('Total Cases'))),isCountryLoaded&&/*#__PURE__*/React.createElement(\"div\",{className:\"tab \".concat(currentMap.stat===MAP_STATISTICS.PER_MILLION?'focused':''),onClick:function onClick(){if(currentMapMeta.mapType===MAP_TYPES.STATE)return;setCurrentMap({name:currentMap.name,view:MAP_VIEWS.STATES,stat:MAP_STATISTICS.PER_MILLION});setRegionHighlighted({state:regionHighlighted.state});}},/*#__PURE__*/React.createElement(\"h4\",null,t('Cases per million'),/*#__PURE__*/React.createElement(\"sup\",null,\"\\u2020\"))),isCountryLoaded&&/*#__PURE__*/React.createElement(\"div\",{className:\"tab \".concat(currentMap.stat===MAP_STATISTICS.HOTSPOTS?'focused':''),onClick:function onClick(){if(currentMapMeta.mapType===MAP_TYPES.STATE)return;setCurrentMap({name:currentMap.name,view:MAP_VIEWS.DISTRICTS,stat:MAP_STATISTICS.HOTSPOTS});}},/*#__PURE__*/React.createElement(\"h4\",null,t('Hotspots'))),/*#__PURE__*/React.createElement(\"div\",{className:\"tab \".concat(currentMap.stat===MAP_STATISTICS.ZONE?'focused':''),onClick:function onClick(){setCurrentMap({name:currentMap.name,view:MAP_VIEWS.DISTRICTS,stat:MAP_STATISTICS.ZONE});if(currentMapMeta.mapType===MAP_TYPES.COUNTRY)setRegionHighlighted({state:'Total'});}},/*#__PURE__*/React.createElement(\"h4\",null,t('Zones')))),/*#__PURE__*/React.createElement(\"h6\",{className:\"footnote table-fineprint\"},\"\\u2020 \",t('Based on 2019 population projection by NCP')+' (',/*#__PURE__*/React.createElement(\"a\",{href:\"https://nhm.gov.in/New_Updates_2018/Report_Population_Projection_2019.pdf\",target:\"_noblank\",style:{color:'#6c757d'}},t('source')),\")\"));}export default React.memo(MapExplorer,isEqual);","map":{"version":3,"sources":["C:/Users/Jakith/JackPriyan.github.io/src/components/mapexplorer.js"],"names":["ChoroplethMap","testedToolTip","MAP_META","MAP_STATISTICS","MAP_TYPES","MAP_VIEWS","STATE_CODES_REVERSE","STATE_POPULATIONS","formatDate","formatNumber","formatDayMonth","formatLastUpdated","parse","equal","React","useState","useEffect","useMemo","useCallback","ReactDOM","Icon","useTranslation","Link","isEqual","prevProps","currProps","regionHighlighted","mapOption","anchor","getRegionFromState","state","region","getRegionFromDistrict","districtData","name","MapExplorer","mapName","states","districts","zones","stateTestData","setRegionHighlighted","setAnchor","setMapOption","isCountryLoaded","t","stat","TOTAL","view","mapType","COUNTRY","STATES","DISTRICTS","currentMap","setCurrentMap","currentMapMeta","currentMapData","statistic","ZONE","dataTypes","reduce","acc","dtype","Object","keys","acc1","acc2","district","zone","STATE","total","max","forEach","typeCount","parseInt","PER_MILLION","districtWiseData","Total","find","stateDistrictObj","confirmed","active","recovered","deaths","hoveredRegion","panelRegion","newMapMeta","switchMapToState","topDistrict","filter","sort","a","b","unstable_batchedUpdates","testObj","hoveredRegionCount","hoveredRegionZone","data","Number","parseFloat","toFixed","animationDelay","display","window","innerWidth","action","deltaconfirmed","deltarecovered","deltadeaths","totaltested","isNaN","updatedon","Date","date","length","source","lastupdatedtime","HOTSPOTS","Unknown","color","memo"],"mappings":"qUAAA,MAAOA,CAAAA,aAAP,KAA0B,cAA1B,CACA,OAAQC,aAAR,KAA4B,YAA5B,CAEA,OACEC,QADF,CAEEC,cAFF,CAGEC,SAHF,CAIEC,SAJF,CAKEC,mBALF,CAMEC,iBANF,KAOO,cAPP,CAQA,OACEC,UADF,CAEEC,YAFF,CAGEC,cAHF,CAIEC,iBAJF,KAKO,0BALP,CAOA,OAAQC,KAAR,KAAoB,UAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,iBAAlB,CACA,MAAOC,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,CAAoCC,OAApC,CAA6CC,WAA7C,KAA+D,OAA/D,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,GAAKC,CAAAA,IAAZ,KAAsB,eAAtB,CACA,OAAQC,cAAR,KAA6B,eAA7B,CACA,OAAQC,IAAR,KAAmB,kBAAnB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,SAAD,CAAYC,SAAZ,CAA0B,CACxC,GAAI,CAACZ,KAAK,CAACW,SAAS,CAACE,iBAAX,CAA8BD,SAAS,CAACC,iBAAxC,CAAV,CAAsE,CACpE,MAAO,MAAP,CACD,CACD,GAAI,CAACb,KAAK,CAACW,SAAS,CAACG,SAAX,CAAsBF,SAAS,CAACE,SAAhC,CAAV,CAAsD,CACpD,MAAO,MAAP,CACD,CACD,GAAI,CAACd,KAAK,CAACW,SAAS,CAACI,MAAX,CAAmBH,SAAS,CAACG,MAA7B,CAAV,CAAgD,CAC9C,MAAO,MAAP,CACD,CACD,MAAO,KAAP,CACD,CAXD,CAaA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAW,CACpC,GAAI,CAACA,KAAL,CAAY,OACZ,GAAMC,CAAAA,MAAM,kBAAOD,KAAP,CAAZ,CACA,MAAOC,CAAAA,MAAP,CACD,CAJD,CAMA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,YAAD,CAAeC,IAAf,CAAwB,CACpD,GAAI,CAACD,YAAL,CAAmB,OACnB,GAAMF,CAAAA,MAAM,kBAAOE,YAAP,CAAZ,CACA,MAAOF,CAAAA,MAAP,CACD,CAJD,CAMA,QAASI,CAAAA,WAAT,MAaG,6BAZDC,CAAAA,OAYC,MAZDA,OAYC,CAXDC,MAWC,MAXDA,MAWC,CAVDC,SAUC,MAVDA,SAUC,CATDC,KASC,MATDA,KASC,CARDC,aAQC,MARDA,aAQC,CAPDd,iBAOC,MAPDA,iBAOC,CANDe,oBAMC,MANDA,oBAMC,CALDb,MAKC,MALDA,MAKC,CAJDc,SAIC,MAJDA,SAIC,CAHDf,SAGC,MAHDA,SAGC,CAFDgB,YAEC,MAFDA,YAEC,2BADDC,eACC,CADDA,eACC,+BADiB,IACjB,0CACWvB,cAAc,EADzB,CACMwB,CADN,iBACMA,CADN,eAEmC9B,QAAQ,CAAC,CAC3CmB,IAAI,CAAEE,OADqC,CAE3CU,IAAI,CAAE3C,cAAc,CAAC4C,KAFsB,CAG3CC,IAAI,CACF9C,QAAQ,CAACkC,OAAD,CAAR,CAAkBa,OAAlB,GAA8B7C,SAAS,CAAC8C,OAAxC,CACI7C,SAAS,CAAC8C,MADd,CAEI9C,SAAS,CAAC+C,SAN2B,CAAD,CAF3C,wCAEMC,UAFN,eAEkBC,aAFlB,eAUD,GAAMC,CAAAA,cAAc,CAAGrD,QAAQ,CAACmD,UAAU,CAACnB,IAAZ,CAA/B,CAVC,aAYmCjB,OAAO,CAAC,UAAM,CAChD,GAAIuC,CAAAA,cAAc,CAAG,EAArB,CACA,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAIJ,UAAU,CAACP,IAAX,GAAoB3C,cAAc,CAACuD,IAAvC,CAA6C,CAC3C,GAAMC,CAAAA,SAAS,CAAG,CAAC,KAAD,CAAQ,QAAR,CAAkB,OAAlB,CAAlB,CACAF,SAAS,CAAGE,SAAS,CAACC,MAAV,CAAiB,SAACC,GAAD,CAAMC,KAAN,CAAgB,CAC3CD,GAAG,CAACC,KAAD,CAAH,CAAa,CAAb,CACA,MAAOD,CAAAA,GAAP,CACD,CAHW,CAGT,EAHS,CAAZ,CAIA,GAAIN,cAAc,CAACN,OAAf,GAA2B7C,SAAS,CAAC8C,OAAzC,CAAkD,CAChDM,cAAc,CAAGO,MAAM,CAACC,IAAP,CAAYzB,KAAZ,EAAmBqB,MAAnB,CAA0B,SAACK,IAAD,CAAOnC,KAAP,CAAiB,CAC1DmC,IAAI,CAACnC,KAAD,CAAJ,CAAciC,MAAM,CAACC,IAAP,CAAYzB,KAAK,CAACT,KAAD,CAAjB,EAA0B8B,MAA1B,CAAiC,SAACM,IAAD,CAAOC,QAAP,CAAoB,CACjE,GAAMC,CAAAA,IAAI,CAAG7B,KAAK,CAACT,KAAD,CAAL,CAAaqC,QAAb,EAAuBC,IAApC,CACA,GAAIA,IAAJ,CAAU,CACRF,IAAI,CAACC,QAAD,CAAJ,CAAiBC,IAAjB,CACAX,SAAS,CAACW,IAAD,CAAT,EAAmB,CAAnB,CACD,CACD,MAAOF,CAAAA,IAAP,CACD,CAPa,CAOX,EAPW,CAAd,CAQA,MAAOD,CAAAA,IAAP,CACD,CAVgB,CAUd,EAVc,CAAjB,CAWD,CAZD,IAYO,IAAIV,cAAc,CAACN,OAAf,GAA2B7C,SAAS,CAACiE,KAAzC,CAAgD,CACrD,GAAMvC,CAAAA,KAAK,CAAGuB,UAAU,CAACnB,IAAzB,CACAsB,cAAc,CAAC1B,KAAD,CAAd,CAAwBiC,MAAM,CAACC,IAAP,CAAYzB,KAAK,CAACT,KAAD,CAAjB,EAA0B8B,MAA1B,CACtB,SAACC,GAAD,CAAMM,QAAN,CAAmB,CACjB,GAAMC,CAAAA,IAAI,CAAG7B,KAAK,CAACT,KAAD,CAAL,CAAaqC,QAAb,EAAuBC,IAApC,CACA,GAAIA,IAAJ,CAAU,CACRP,GAAG,CAACM,QAAD,CAAH,CAAgBC,IAAhB,CACAX,SAAS,CAACW,IAAD,CAAT,EAAmB,CAAnB,CACD,CACD,MAAOP,CAAAA,GAAP,CACD,CARqB,CAStB,EATsB,CAAxB,CAWD,CACF,CAhCD,IAgCO,CACL,GAAMF,CAAAA,UAAS,CAAG,CAAC,WAAD,CAAc,QAAd,CAAwB,WAAxB,CAAqC,UAArC,CAAlB,CACAF,SAAS,CAAGE,UAAS,CAACC,MAAV,CAAiB,SAACC,GAAD,CAAMC,KAAN,CAAgB,CAC3CD,GAAG,CAACC,KAAD,CAAH,CAAa,CAACQ,KAAK,CAAE,CAAR,CAAWC,GAAG,CAAE,CAAhB,CAAb,CACA,MAAOV,CAAAA,GAAP,CACD,CAHW,CAGT,EAHS,CAAZ,CAIA,GAAIN,cAAc,CAACN,OAAf,GAA2B7C,SAAS,CAAC8C,OAAzC,CAAkD,CAChD,GAAIG,UAAU,CAACL,IAAX,GAAoB3C,SAAS,CAAC8C,MAAlC,CAA0C,CACxCK,cAAc,CAAGnB,MAAM,CAACuB,MAAP,CAAc,SAACC,GAAD,CAAM/B,KAAN,CAAgB,CAC7C+B,GAAG,CAAC/B,KAAK,CAACA,KAAP,CAAH,CAAmB,EAAnB,CACA6B,UAAS,CAACa,OAAV,CAAkB,SAACV,KAAD,CAAW,CAC3B,GAAIW,CAAAA,SAAS,CACXC,QAAQ,CAAC5C,KAAK,CAACgC,KAAK,GAAK,UAAV,CAAuBA,KAAvB,CAA+B,QAAhC,CAAN,CAAR,EAA4D,CAD9D,CAEA,GAAIT,UAAU,CAACP,IAAX,GAAoB3C,cAAc,CAACwE,WAAvC,CACEF,SAAS,CAAI,IAAMA,SAAP,CAAoBlE,iBAAiB,CAACuB,KAAK,CAACA,KAAP,CAAjD,CACF,GAAIA,KAAK,CAACA,KAAN,GAAgB,OAApB,CAA6B,CAC3B2B,SAAS,CAACK,KAAD,CAAT,CAAiBQ,KAAjB,EAA0BG,SAA1B,CACA,GAAIA,SAAS,CAAGhB,SAAS,CAACK,KAAD,CAAT,CAAiBS,GAAjC,CAAsC,CACpCd,SAAS,CAACK,KAAD,CAAT,CAAiBS,GAAjB,CAAuBE,SAAvB,CACD,CACF,CACDZ,GAAG,CAAC/B,KAAK,CAACA,KAAP,CAAH,CAAiBgC,KAAjB,EAA0BW,SAA1B,CACD,CAZD,EAaA,MAAOZ,CAAAA,GAAP,CACD,CAhBgB,CAgBd,EAhBc,CAAjB,CAiBD,CAlBD,IAkBO,CACLL,cAAc,CAAGO,MAAM,CAACC,IAAP,CAAY1B,SAAZ,EAAuBsB,MAAvB,CAA8B,SAACK,IAAD,CAAOnC,KAAP,CAAiB,CAC9D,GAAM8C,CAAAA,gBAAgB,CAAG,CAACtC,SAAS,CAACR,KAAD,CAAT,EAAoB,CAACG,YAAY,CAAE,EAAf,CAArB,EACtBA,YADH,CAEAgC,IAAI,CAACnC,KAAD,CAAJ,CAAciC,MAAM,CAACC,IAAP,CAAYY,gBAAZ,EAA8BhB,MAA9B,CACZ,SAACM,IAAD,CAAOC,QAAP,CAAoB,CAClBD,IAAI,CAACC,QAAD,CAAJ,CAAiB,EAAjB,CACAR,UAAS,CAACa,OAAV,CAAkB,SAACV,KAAD,CAAW,CAC3B,GAAMW,CAAAA,SAAS,CAAGC,QAAQ,CAACE,gBAAgB,CAACT,QAAD,CAAhB,CAA2BL,KAA3B,CAAD,CAA1B,CACAL,SAAS,CAACK,KAAD,CAAT,CAAiBQ,KAAjB,EAA0BG,SAA1B,CACA,GAAIA,SAAS,CAAGhB,SAAS,CAACK,KAAD,CAAT,CAAiBS,GAAjC,CAAsC,CACpCd,SAAS,CAACK,KAAD,CAAT,CAAiBS,GAAjB,CAAuBE,SAAvB,CACD,CACDP,IAAI,CAACC,QAAD,CAAJ,CAAeL,KAAf,EAAwBW,SAAxB,CACD,CAPD,EAQA,MAAOP,CAAAA,IAAP,CACD,CAZW,CAaZ,EAbY,CAAd,CAeA,MAAOD,CAAAA,IAAP,CACD,CAnBgB,CAmBd,EAnBc,CAAjB,CAoBD,CACF,CAzCD,IAyCO,IAAIV,cAAc,CAACN,OAAf,GAA2B7C,SAAS,CAACiE,KAAzC,CAAgD,CACrD,GAAMO,CAAAA,gBAAgB,CAAG,CACvBtC,SAAS,CAACe,UAAU,CAACnB,IAAZ,CAAT,EAA8B,CAACD,YAAY,CAAE,EAAf,CADP,EAEvBA,YAFF,CAGAuB,cAAc,CAACH,UAAU,CAACnB,IAAZ,CAAd,CAAkC6B,MAAM,CAACC,IAAP,CAAYY,gBAAZ,EAA8BhB,MAA9B,CAChC,SAACC,GAAD,CAAMM,QAAN,CAAmB,CACjBN,GAAG,CAACM,QAAD,CAAH,CAAgB,EAAhB,CACAR,UAAS,CAACa,OAAV,CAAkB,SAACV,KAAD,CAAW,CAC3B,GAAMW,CAAAA,SAAS,CAAGC,QAAQ,CAACE,gBAAgB,CAACT,QAAD,CAAhB,CAA2BL,KAA3B,CAAD,CAA1B,CACAL,SAAS,CAACK,KAAD,CAAT,CAAiBQ,KAAjB,EAA0BG,SAA1B,CACA,GAAIA,SAAS,CAAGhB,SAAS,CAACK,KAAD,CAAT,CAAiBS,GAAjC,CAAsC,CACpCd,SAAS,CAACK,KAAD,CAAT,CAAiBS,GAAjB,CAAuBE,SAAvB,CACD,CACDZ,GAAG,CAACM,QAAD,CAAH,CAAcL,KAAd,EAAuBW,SAAvB,CACD,CAPD,EAQA,MAAOZ,CAAAA,GAAP,CACD,CAZ+B,CAahC,EAbgC,CAAlC,CAeAL,cAAc,CAACH,UAAU,CAACnB,IAAZ,CAAd,CAAgC2C,KAAhC,CAAwCxC,MAAM,CAACyC,IAAP,CACtC,SAAChD,KAAD,QAAWuB,CAAAA,UAAU,CAACnB,IAAX,GAAoBJ,KAAK,CAACA,KAArC,EADsC,CAAxC,CAGD,CACF,CACD,MAAO,CAAC2B,SAAD,CAAYD,cAAZ,CAAP,CACD,CA3G0C,CA2GxC,CAACH,UAAD,CAAaE,cAAc,CAACN,OAA5B,CAAqCX,SAArC,CAAgDC,KAAhD,CAAuDF,MAAvD,CA3GwC,CAZ1C,sCAYMoB,SAZN,cAYiBD,cAZjB,4BAyHoCvC,OAAO,CAAC,UAAM,CACjD,GAAI,CAACS,iBAAiB,CAACyC,QAAvB,CAAiC,CAC/B,GAAMrC,CAAAA,KAAK,CAAGD,kBAAkB,CAC9BQ,MAAM,CAACyC,IAAP,CAAY,SAAChD,KAAD,QAAWJ,CAAAA,iBAAiB,CAACI,KAAlB,GAA4BA,KAAK,CAACA,KAA7C,EAAZ,CAD8B,CAAhC,CAGA,MAAO,CAACA,KAAD,CAAQA,KAAR,CAAP,CACD,CALD,IAKO,CACL,GAAMiD,CAAAA,gBAAgB,CAAGzC,SAAS,CAACZ,iBAAiB,CAACI,KAAnB,CAAT,EAAsC,CAC7DG,YAAY,CAAE,EAD+C,CAA/D,CAGA,GAAMA,CAAAA,YAAY,CAAG8C,gBAAgB,CAAC9C,YAAjB,CACnBP,iBAAiB,CAACyC,QADC,GAEhB,CACHa,SAAS,CAAE,CADR,CAEHC,MAAM,CAAE,CAFL,CAGHC,SAAS,CAAE,CAHR,CAIHC,MAAM,CAAE,CAJL,CAFL,CAQA,GAAMhB,CAAAA,QAAQ,CAAGnC,qBAAqB,CACpCC,YADoC,CAEpCP,iBAAiB,CAACyC,QAFkB,CAAtC,CAIA,GAAIrC,CAAAA,MAAK,CAAGD,kBAAkB,CAC5BQ,MAAM,CAACyC,IAAP,CAAY,SAAChD,KAAD,QAAWA,CAAAA,KAAK,CAACA,KAAN,GAAgBJ,iBAAiB,CAACI,KAA7C,EAAZ,CAD4B,CAA9B,CAGAqC,QAAQ,CAACA,QAAT,CAAoBzC,iBAAiB,CAACyC,QAAtC,CACAA,QAAQ,CAACrC,KAAT,CAAiBA,MAAK,CAACA,KAAvB,CACA,GAAIyB,cAAc,CAACN,OAAf,GAA2B7C,SAAS,CAAC8C,OAAzC,CACEpB,MAAK,CAAGO,MAAM,CAACyC,IAAP,CAAY,SAAChD,KAAD,QAAWA,CAAAA,KAAK,CAACA,KAAN,GAAgB,OAA3B,EAAZ,CAAR,CACF,MAAO,CAACqC,QAAD,CAAWrC,MAAX,CAAP,CACD,CACF,CA/B2C,CA+BzC,CACDO,MADC,CAEDC,SAFC,CAGDiB,cAAc,CAACN,OAHd,CAIDvB,iBAAiB,CAACI,KAJjB,CAKDJ,iBAAiB,CAACyC,QALjB,CA/ByC,CAzH3C,uCAyHMiB,aAzHN,cAyHqBC,WAzHrB,cAgKDrE,SAAS,CAAC,UAAM,CACd,GAAIU,iBAAiB,CAACyC,QAAtB,CAAgC,CAC9B,GACEd,UAAU,CAACnB,IAAX,GAAoBR,iBAAiB,CAACI,KAAtC,EACA,EACEyB,cAAc,CAACN,OAAf,GAA2B7C,SAAS,CAAC8C,OAArC,EACAG,UAAU,CAACL,IAAX,GAAoB3C,SAAS,CAAC+C,SAFhC,CAFF,CAME,CACA,GAAMtB,CAAAA,KAAK,CAAGJ,iBAAiB,CAACI,KAAhC,CACA,GAAMwD,CAAAA,UAAU,CAAGpF,QAAQ,CAAC4B,KAAD,CAA3B,CACA,GAAI,CAACwD,UAAL,CAAiB,CACf,OACD,CACDhC,aAAa,CAAC,CACZpB,IAAI,CAAEJ,KADM,CAEZkB,IAAI,CAAE3C,SAAS,CAAC+C,SAFJ,CAGZN,IAAI,CACFO,UAAU,CAACP,IAAX,GAAoB3C,cAAc,CAACwE,WAAnC,CACIxE,cAAc,CAAC4C,KADnB,CAEIM,UAAU,CAACP,IANL,CAAD,CAAb,CAQD,CACF,CAtBD,IAsBO,IAAIF,eAAe,EAAIW,cAAc,CAACN,OAAf,GAA2B7C,SAAS,CAACiE,KAA5D,CAAmE,CACxEf,aAAa,CAAC,CACZpB,IAAI,CAAE,OADM,CAEZc,IAAI,CACFK,UAAU,CAACP,IAAX,GAAoB3C,cAAc,CAACuD,IAAnC,CACIrD,SAAS,CAAC+C,SADd,CAEI/C,SAAS,CAAC8C,MALJ,CAMZL,IAAI,CAAEO,UAAU,CAACP,IANL,CAAD,CAAb,CAQD,CACF,CAjCQ,CAiCN,CACDF,eADC,CAEDlB,iBAAiB,CAACI,KAFjB,CAGDJ,iBAAiB,CAACyC,QAHjB,CAIDd,UAJC,CAKDE,cAAc,CAACN,OALd,CAjCM,CAAT,CAyCA,GAAMsC,CAAAA,gBAAgB,CAAGrE,WAAW,CAClC,SAACY,KAAD,CAAW,CACT,GAAMwD,CAAAA,UAAU,CAAGpF,QAAQ,CAAC4B,KAAD,CAA3B,CACA,GAAI,CAACwD,UAAL,CAAiB,CACf,OACD,CACD,GAAIA,UAAU,CAACrC,OAAX,GAAuB7C,SAAS,CAACiE,KAArC,CAA4C,WACnB/B,SAAS,CAACR,KAAD,CAAT,EAAoB,CACzCG,YAAY,CAAE,EAD2B,CADD,CACnCA,YADmC,OACnCA,YADmC,CAI1C,GAAMuD,CAAAA,WAAW,CAAGzB,MAAM,CAACC,IAAP,CAAY/B,YAAZ,EACjBwD,MADiB,CACV,SAAC3D,KAAD,QAAWA,CAAAA,KAAK,GAAK,SAArB,EADU,EAEjB4D,IAFiB,CAEZ,SAACC,CAAD,CAAIC,CAAJ,CAAU,CACd,MAAO3D,CAAAA,YAAY,CAAC2D,CAAD,CAAZ,CAAgBZ,SAAhB,CAA4B/C,YAAY,CAAC0D,CAAD,CAAZ,CAAgBX,SAAnD,CACD,CAJiB,EAIf,CAJe,CAApB,CAKA7D,QAAQ,CAAC0E,uBAAT,CAAiC,UAAM,CACrCpD,oBAAoB,CAAC,CACnB0B,QAAQ,CAAEqB,WADS,CAEnB1D,KAAK,CAAEA,KAFY,CAAD,CAApB,CAIAwB,aAAa,CAAC,CACZpB,IAAI,CAAEJ,KADM,CAEZkB,IAAI,CAAE3C,SAAS,CAAC+C,SAFJ,CAGZN,IAAI,CACFO,UAAU,CAACP,IAAX,GAAoB3C,cAAc,CAACwE,WAAnC,CACIxE,cAAc,CAAC4C,KADnB,CAEIM,UAAU,CAACP,IANL,CAAD,CAAb,CAQD,CAbD,EAcD,CAvBD,IAuBO,CACL3B,QAAQ,CAAC0E,uBAAT,CAAiC,UAAM,CACrCvC,aAAa,CAAC,CACZpB,IAAI,CAAE,OADM,CAEZc,IAAI,CACFK,UAAU,CAACP,IAAX,GAAoB3C,cAAc,CAACuD,IAAnC,CACIrD,SAAS,CAAC+C,SADd,CAEI/C,SAAS,CAAC8C,MALJ,CAMZL,IAAI,CAAEO,UAAU,CAACP,IANL,CAAD,CAAb,CAQAL,oBAAoB,CAAC,CACnBX,KAAK,CAAE,OADY,CAAD,CAApB,CAGD,CAZD,EAaD,CACF,CA5CiC,CA6ClC,CAACuB,UAAU,CAACP,IAAZ,CAAkBR,SAAlB,CAA6BG,oBAA7B,CA7CkC,CAApC,CAgDA,GAAMqD,CAAAA,OAAO,CAAGtD,aAAa,CAAC6C,WAAW,CAACvD,KAAb,CAA7B,CAEA,GAAIiE,CAAAA,kBAAJ,CACA,GAAIC,CAAAA,iBAAJ,CACA,GAAI3C,UAAU,CAACP,IAAX,GAAoB3C,cAAc,CAACuD,IAAvC,CAA6C,CAC3C,GAAMuC,CAAAA,IAAI,CACRb,aAAa,CAACjB,QAAd,EAA0BX,cAAc,CAAC4B,aAAa,CAACtD,KAAf,CAAxC,CACI0B,cAAc,CAAC4B,aAAa,CAACtD,KAAf,CAAd,CAAoCsD,aAAa,CAACjB,QAAlD,CADJ,CAEIiB,aAAa,CAACtD,KAAd,GAAwBuB,UAAU,CAACnB,IAAnC,CACAsB,cAAc,CAAC4B,aAAa,CAACtD,KAAf,CADd,CAEA0B,cAAc,CAAC4B,aAAa,CAACtD,KAAf,CAAd,CAAoC+C,KAL1C,CAMAkB,kBAAkB,CAAGE,IAAI,CACrB5C,UAAU,CAACP,IAAX,GAAoB3C,cAAc,CAACwE,WAAnC,CACEuB,MAAM,CAACC,UAAU,CAACF,IAAI,CAACtE,SAAD,CAAL,CAAV,CAA4ByE,OAA5B,CAAoC,CAApC,CAAD,CADR,CAEEH,IAAI,CAACtE,SAAD,CAHe,CAIrB,CAJJ,CAKD,CAZD,IAYO,CACLqE,iBAAiB,CACfzD,KAAK,CAAC6C,aAAa,CAACtD,KAAf,CAAL,EACAS,KAAK,CAAC6C,aAAa,CAACtD,KAAf,CAAL,CAA2BsD,aAAa,CAACjB,QAAzC,CADA,CAEI5B,KAAK,CAAC6C,aAAa,CAACtD,KAAf,CAAL,CAA2BsD,aAAa,CAACjB,QAAzC,EAAmDC,IAFvD,CAGI,EAJN,CAKD,CAED,mBACE,2BACE,SAAS,gCACPxC,MAAM,GAAK,aAAX,CAA2B,UAA3B,CAAwC,EADjC,CADX,CAIE,KAAK,CAAE,CACLyE,cAAc,CAAE,MADX,CAELC,OAAO,CAAE1E,MAAM,GAAK,YAAX,CAA0B,MAA1B,CAAmC,EAFvC,CAJT,EASG2E,MAAM,CAACC,UAAP,CAAoB,GAApB,eACC,2BACE,SAAS,kBAAY5E,MAAM,GAAK,aAAX,CAA2B,UAA3B,CAAwC,EAApD,CADX,CAEE,OAAO,CAAE,kBAAM,CACbc,SAAS,CAACd,MAAM,GAAK,aAAX,CAA2B,IAA3B,CAAkC,aAAnC,CAAT,CACD,CAJH,eAME,oBAAC,IAAD,CAAM,MAAN,MANF,CAVJ,cAmBE,2BAAK,SAAS,CAAC,QAAf,eACE,8BACGiB,CAAC,CAACQ,UAAU,CAACnB,IAAZ,CADJ,KACwBW,CAAC,CAAC,KAAD,CADzB,CADF,cAIE,8BACGA,CAAC,CAAC,gDAAD,CAAmD,CACnD4D,MAAM,CAAE5D,CAAC,CAAC0D,MAAM,CAACC,UAAP,EAAqB,GAArB,CAA2B,KAA3B,CAAmC,OAApC,CAD0C,CAEnDvD,OAAO,CAAEJ,CAAC,CACRU,cAAc,CAACN,OAAf,GAA2B7C,SAAS,CAAC8C,OAArC,CACI,UADJ,CAEI,UAHI,CAFyC,CAAnD,CADJ,CAJF,CAnBF,cAmCE,2BAAK,SAAS,CAAC,WAAf,eACE,2BACE,SAAS,0BACPvB,SAAS,GAAK,WAAd,CAA4B,SAA5B,CAAwC,EADjC,CADX,CAIE,KAAK,CAAE,CAAC0E,cAAc,CAAE,IAAjB,CAJT,CAKE,OAAO,CAAE,yBAAM1D,CAAAA,YAAY,CAAC,WAAD,CAAlB,EALX,eAOE,8BAAK4D,MAAM,CAACC,UAAP,EAAqB,GAArB,CAA2B3D,CAAC,CAAC,OAAD,CAA5B,CAAwCA,CAAC,CAAC,WAAD,CAA9C,CAPF,cAQE,2BAAK,SAAS,CAAC,cAAf,eACE,8BAAKpC,YAAY,CAAC4E,WAAW,CAACL,SAAb,CAAjB,CADF,cAEE,yCAASvE,YAAY,CAAC4E,WAAW,CAACqB,cAAb,CAArB,EAFF,CARF,CADF,cAeE,2BACE,SAAS,kCACP/E,SAAS,GAAK,QAAd,CAAyB,SAAzB,CAAqC,EAD9B,CADX,CAIE,KAAK,CAAE,CAAC0E,cAAc,CAAE,MAAjB,CAJT,CAKE,OAAO,CAAE,yBAAM1D,CAAAA,YAAY,CAAC,QAAD,CAAlB,EALX,eAOE,8BAAK4D,MAAM,CAACC,UAAP,EAAqB,GAArB,CAA2B3D,CAAC,CAAC,MAAD,CAA5B,CAAuCA,CAAC,CAAC,QAAD,CAA7C,CAPF,cAQE,2BAAK,SAAS,CAAC,cAAf,eACE,8BAAKpC,YAAY,CAAC4E,WAAW,CAACJ,MAAb,CAAjB,CADF,cAEE,kCAFF,CARF,CAfF,cA6BE,2BACE,SAAS,mCACPtD,SAAS,GAAK,WAAd,CAA4B,SAA5B,CAAwC,EADjC,CADX,CAIE,KAAK,CAAE,CAAC0E,cAAc,CAAE,MAAjB,CAJT,CAKE,OAAO,CAAE,yBAAM1D,CAAAA,YAAY,CAAC,WAAD,CAAlB,EALX,eAOE,8BAAK4D,MAAM,CAACC,UAAP,EAAqB,GAArB,CAA2B3D,CAAC,CAAC,OAAD,CAA5B,CAAwCA,CAAC,CAAC,WAAD,CAA9C,CAPF,cAQE,2BAAK,SAAS,CAAC,cAAf,eACE,8BAAKpC,YAAY,CAAC4E,WAAW,CAACH,SAAb,CAAjB,CADF,cAEE,yCAASzE,YAAY,CAAC4E,WAAW,CAACsB,cAAb,CAArB,EAFF,CARF,CA7BF,cA2CE,2BACE,SAAS,kCACPhF,SAAS,GAAK,UAAd,CAA2B,SAA3B,CAAuC,EADhC,CADX,CAIE,KAAK,CAAE,CAAC0E,cAAc,CAAE,MAAjB,CAJT,CAKE,OAAO,CAAE,yBAAM1D,CAAAA,YAAY,CAAC,UAAD,CAAlB,EALX,eAOE,8BAAK4D,MAAM,CAACC,UAAP,EAAqB,GAArB,CAA2B3D,CAAC,CAAC,MAAD,CAA5B,CAAuCA,CAAC,CAAC,UAAD,CAA7C,CAPF,cAQE,2BAAK,SAAS,CAAC,cAAf,eACE,8BAAKpC,YAAY,CAAC4E,WAAW,CAACF,MAAb,CAAjB,CADF,cAEE,yCAAS1E,YAAY,CAAC4E,WAAW,CAACuB,WAAb,CAArB,EAFF,CARF,CA3CF,cAyDE,2BACE,SAAS,CAAC,iCADZ,CAEE,KAAK,CAAE,CAACP,cAAc,CAAE,MAAjB,CAFT,eAIE,8BAAKxD,CAAC,CAAC,QAAD,CAAN,CAJF,cAKE,2BAAK,SAAS,CAAC,cAAf,eACE,8BAAKpC,YAAY,CAACqF,OAAD,SAACA,OAAD,iBAACA,OAAO,CAAEe,WAAV,CAAjB,CADF,CALF,cAQE,0BAAI,SAAS,CAAC,WAAd,EACG,CAACC,KAAK,CAAClG,KAAK,CAACkF,OAAD,SAACA,OAAD,iBAACA,OAAO,CAAEiB,SAAV,CAAqB,YAArB,CAAmC,GAAIC,CAAAA,IAAJ,EAAnC,CAAN,CAAN,CACGnE,CAAC,CAAC,gBAAD,CAAmB,CAClBoE,IAAI,CAAEvG,cAAc,CAACoF,OAAD,SAACA,OAAD,iBAACA,OAAO,CAAEiB,SAAV,CADF,CAAnB,CADJ,CAIG,EALN,CARF,CAeG,CAAAjB,OAAO,OAAP,EAAAA,OAAO,SAAP,8BAAAA,OAAO,CAAEe,WAAT,oEAAsBK,MAAtB,EAA+B,CAA/B,eACC,yBAAG,IAAI,CAAEpB,OAAO,CAACqB,MAAjB,CAAyB,MAAM,CAAC,UAAhC,eACE,oBAAC,IAAD,CAAM,IAAN,MADF,CAhBJ,CAoBG9B,WAAW,CAACvD,KAAZ,GAAsB,OAAtB,CAAgC7B,aAAhC,CAAgD,EApBnD,CAzDF,CAnCF,cAoHE,2BAAK,SAAS,CAAC,eAAf,CAA+B,KAAK,CAAE,CAACoG,cAAc,CAAE,MAAjB,CAAtC,eACE,0BACE,SAAS,WACPhD,UAAU,CAACP,IAAX,GAAoB3C,cAAc,CAACuD,IAAnC,CACI/B,SAAS,GAAK,WAAd,CACEA,SADF,CAEE,EAHN,CAIIqE,iBALG,CADX,EASGZ,aAAa,CAACjB,QAAd,CACGtB,CAAC,CAACuC,aAAa,CAACjB,QAAf,CAAD,EACCiB,aAAa,CAACjB,QAAd,GAA2B,SAA3B,aACQtB,CAAC,CAACuC,aAAa,CAACtD,KAAf,CADT,MAEG,EAHJ,CADH,CAKGe,CAAC,CAACuC,aAAa,CAACtD,KAAf,CAdP,CADF,CAkBGyB,cAAc,CAACN,OAAf,GAA2B7C,SAAS,CAACiE,KAArC,EACCgB,WAAW,CAAC+B,eADb,eAEG,2BAAK,SAAS,CAAC,aAAf,eACE,8BAAKvE,CAAC,CAAC,cAAD,CAAN,CADF,cAEE,8BACGiE,KAAK,CAACE,IAAI,CAACpG,KAAL,CAAWJ,UAAU,CAAC6E,WAAW,CAAC+B,eAAb,CAArB,CAAD,CAAL,CACG,EADH,CAEGzG,iBAAiB,CAAC0E,WAAW,CAAC+B,eAAb,CAAjB,CACA,GADA,CAEAvE,CAAC,CAAC,KAAD,CALP,CAFF,CApBN,CAgCGU,cAAc,CAACN,OAAf,GAA2B7C,SAAS,CAACiE,KAArC,cACC,oBAAC,IAAD,EAAM,EAAE,iBAAW/D,mBAAmB,CAAC+E,WAAW,CAACvD,KAAb,CAA9B,CAAR,eACE,2BAAK,SAAS,CAAC,0BAAf,eACE,gCAAOe,CAAC,CAAC,kBAAD,CAAR,CADF,cAEE,oBAAC,IAAD,CAAM,gBAAN,MAFF,CADF,CADD,CAOG,IAvCN,CAyCGQ,UAAU,CAACP,IAAX,GAAoB3C,cAAc,CAACuD,IAAnC,GACAH,cAAc,CAACN,OAAf,GAA2B7C,SAAS,CAACiE,KAArC,EACEd,cAAc,CAACN,OAAf,GAA2B7C,SAAS,CAAC8C,OAArC,EACCG,UAAU,CAACP,IAAX,GAAoB3C,cAAc,CAAC4C,KAHtC,IAIAM,UAAU,CAACP,IAAX,GAAoB3C,cAAc,CAACkH,QAAnC,GACCjC,aADD,SACCA,aADD,iBACCA,aAAa,CAAEjB,QADhB,CAJA,eAMC,0BACE,SAAS,oBAAcxC,SAAS,GAAK,WAAd,CAA4BA,SAA5B,CAAwC,EAAtD,CADX,EAGGoE,kBAHH,cAIE,8BAJF,cAKE,gCACGlD,CAAC,CAAClB,SAAD,CADJ,CACiB,GADjB,CAEG0B,UAAU,CAACP,IAAX,GAAoB3C,cAAc,CAACwE,WAAnC,YACO9B,CAAC,CAAC,aAAD,CADR,EAEG,EAJN,CALF,CAND,CAkBG,IA3DN,CA6DGU,cAAc,CAACN,OAAf,GAA2B7C,SAAS,CAACiE,KAArC,cACC,2BACE,SAAS,CAAC,oBADZ,CAEE,OAAO,CAAE,yBAAMkB,CAAAA,gBAAgB,CAAC,OAAD,CAAtB,EAFX,EAIG1C,CAAC,CAAC,MAAD,CAJJ,CADD,CAOG,IApEN,CAsEGU,cAAc,CAACN,OAAf,GAA2B7C,SAAS,CAACiE,KAArC,EACDb,cAAc,CAAC8D,OADd,EAED9D,cAAc,CAAC8D,OAAf,CAAuB3F,SAAvB,EAAoC,CAFnC,cAGC,0BAAI,SAAS,CAAC,SAAd,EACGkB,CAAC,CAAC,uBAAD,CADJ,KACgCW,cAAc,CAAC8D,OAAf,CAAuB3F,SAAvB,CADhC,CACmE,GADnE,CAEGkB,CAAC,CAAC,QAAD,CAFJ,CAHD,CAOG,IA7EN,CApHF,cAoME,+BACGlB,SAAS,eACR,oBAAC,aAAD,EACE,SAAS,CAAE8B,SADb,CAEE,UAAU,CAAEJ,UAFd,CAGE,OAAO,CAAEG,cAHX,CAIE,iBAAiB,CAAE9B,iBAJrB,CAKE,oBAAoB,CAAEe,oBALxB,CAME,SAAS,CAAE8C,gBANb,CAOE,SAAS,CAAE5D,SAPb,CAQE,eAAe,CAAEiB,eARnB,EAFJ,CApMF,cAmNE,2BAAK,SAAS,CAAC,UAAf,eACE,2BACE,SAAS,eACPS,UAAU,CAACP,IAAX,GAAoB3C,cAAc,CAAC4C,KAAnC,CAA2C,SAA3C,CAAuD,EADhD,CADX,CAIE,OAAO,CAAE,kBAAM,CACbO,aAAa,CAAC,CACZpB,IAAI,CAAEmB,UAAU,CAACnB,IADL,CAEZc,IAAI,CACFO,cAAc,CAACN,OAAf,GAA2B7C,SAAS,CAAC8C,OAArC,CACI7C,SAAS,CAAC8C,MADd,CAEI9C,SAAS,CAAC+C,SALJ,CAMZN,IAAI,CAAE3C,cAAc,CAAC4C,KANT,CAAD,CAAb,CAQA,GAAIQ,cAAc,CAACN,OAAf,GAA2B7C,SAAS,CAAC8C,OAAzC,CACET,oBAAoB,CAAC,CACnBX,KAAK,CAAEJ,iBAAiB,CAACI,KADN,CAAD,CAApB,CAGH,CAjBH,eAmBE,8BAAKe,CAAC,CAAC,aAAD,CAAN,CAnBF,CADF,CAsBGD,eAAe,eACd,2BACE,SAAS,eACPS,UAAU,CAACP,IAAX,GAAoB3C,cAAc,CAACwE,WAAnC,CAAiD,SAAjD,CAA6D,EADtD,CADX,CAIE,OAAO,CAAE,kBAAM,CACb,GAAIpB,cAAc,CAACN,OAAf,GAA2B7C,SAAS,CAACiE,KAAzC,CAAgD,OAChDf,aAAa,CAAC,CACZpB,IAAI,CAAEmB,UAAU,CAACnB,IADL,CAEZc,IAAI,CAAE3C,SAAS,CAAC8C,MAFJ,CAGZL,IAAI,CAAE3C,cAAc,CAACwE,WAHT,CAAD,CAAb,CAKAlC,oBAAoB,CAAC,CACnBX,KAAK,CAAEJ,iBAAiB,CAACI,KADN,CAAD,CAApB,CAGD,CAdH,eAgBE,8BACGe,CAAC,CAAC,mBAAD,CADJ,cAEE,wCAFF,CAhBF,CAvBJ,CA6CGD,eAAe,eACd,2BACE,SAAS,eACPS,UAAU,CAACP,IAAX,GAAoB3C,cAAc,CAACkH,QAAnC,CAA8C,SAA9C,CAA0D,EADnD,CADX,CAIE,OAAO,CAAE,kBAAM,CACb,GAAI9D,cAAc,CAACN,OAAf,GAA2B7C,SAAS,CAACiE,KAAzC,CAAgD,OAChDf,aAAa,CAAC,CACZpB,IAAI,CAAEmB,UAAU,CAACnB,IADL,CAEZc,IAAI,CAAE3C,SAAS,CAAC+C,SAFJ,CAGZN,IAAI,CAAE3C,cAAc,CAACkH,QAHT,CAAD,CAAb,CAKD,CAXH,eAaE,8BAAKxE,CAAC,CAAC,UAAD,CAAN,CAbF,CA9CJ,cA8DE,2BACE,SAAS,eACPQ,UAAU,CAACP,IAAX,GAAoB3C,cAAc,CAACuD,IAAnC,CAA0C,SAA1C,CAAsD,EAD/C,CADX,CAIE,OAAO,CAAE,kBAAM,CACbJ,aAAa,CAAC,CACZpB,IAAI,CAAEmB,UAAU,CAACnB,IADL,CAEZc,IAAI,CAAE3C,SAAS,CAAC+C,SAFJ,CAGZN,IAAI,CAAE3C,cAAc,CAACuD,IAHT,CAAD,CAAb,CAKA,GAAIH,cAAc,CAACN,OAAf,GAA2B7C,SAAS,CAAC8C,OAAzC,CACET,oBAAoB,CAAC,CACnBX,KAAK,CAAE,OADY,CAAD,CAApB,CAGH,CAdH,eAgBE,8BAAKe,CAAC,CAAC,OAAD,CAAN,CAhBF,CA9DF,CAnNF,cAqSE,0BAAI,SAAS,CAAC,0BAAd,YACYA,CAAC,CAAC,4CAAD,CAAD,CAAkD,IAD9D,cAEE,yBACE,IAAI,CAAC,2EADP,CAEE,MAAM,CAAC,UAFT,CAGE,KAAK,CAAE,CAAC0E,KAAK,CAAE,SAAR,CAHT,EAKG1E,CAAC,CAAC,QAAD,CALJ,CAFF,KArSF,CADF,CAmTD,CAED,cAAe/B,CAAAA,KAAK,CAAC0G,IAAN,CAAWrF,WAAX,CAAwBZ,OAAxB,CAAf","sourcesContent":["import ChoroplethMap from './choropleth';\r\nimport {testedToolTip} from './tooltips';\r\n\r\nimport {\r\n  MAP_META,\r\n  MAP_STATISTICS,\r\n  MAP_TYPES,\r\n  MAP_VIEWS,\r\n  STATE_CODES_REVERSE,\r\n  STATE_POPULATIONS,\r\n} from '../constants';\r\nimport {\r\n  formatDate,\r\n  formatNumber,\r\n  formatDayMonth,\r\n  formatLastUpdated,\r\n} from '../utils/commonfunctions';\r\n\r\nimport {parse} from 'date-fns';\r\nimport equal from 'fast-deep-equal';\r\nimport React, {useState, useEffect, useMemo, useCallback} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Icon from 'react-feather';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst isEqual = (prevProps, currProps) => {\r\n  if (!equal(prevProps.regionHighlighted, currProps.regionHighlighted)) {\r\n    return false;\r\n  }\r\n  if (!equal(prevProps.mapOption, currProps.mapOption)) {\r\n    return false;\r\n  }\r\n  if (!equal(prevProps.anchor, currProps.anchor)) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst getRegionFromState = (state) => {\r\n  if (!state) return;\r\n  const region = {...state};\r\n  return region;\r\n};\r\n\r\nconst getRegionFromDistrict = (districtData, name) => {\r\n  if (!districtData) return;\r\n  const region = {...districtData};\r\n  return region;\r\n};\r\n\r\nfunction MapExplorer({\r\n  mapName,\r\n  states,\r\n  districts,\r\n  zones,\r\n  stateTestData,\r\n  regionHighlighted,\r\n  setRegionHighlighted,\r\n  anchor,\r\n  setAnchor,\r\n  mapOption,\r\n  setMapOption,\r\n  isCountryLoaded = true,\r\n}) {\r\n  const {t} = useTranslation();\r\n  const [currentMap, setCurrentMap] = useState({\r\n    name: mapName,\r\n    stat: MAP_STATISTICS.TOTAL,\r\n    view:\r\n      MAP_META[mapName].mapType === MAP_TYPES.COUNTRY\r\n        ? MAP_VIEWS.STATES\r\n        : MAP_VIEWS.DISTRICTS,\r\n  });\r\n  const currentMapMeta = MAP_META[currentMap.name];\r\n\r\n  const [statistic, currentMapData] = useMemo(() => {\r\n    let currentMapData = {};\r\n    let statistic = {};\r\n    if (currentMap.stat === MAP_STATISTICS.ZONE) {\r\n      const dataTypes = ['Red', 'Orange', 'Green'];\r\n      statistic = dataTypes.reduce((acc, dtype) => {\r\n        acc[dtype] = 0;\r\n        return acc;\r\n      }, {});\r\n      if (currentMapMeta.mapType === MAP_TYPES.COUNTRY) {\r\n        currentMapData = Object.keys(zones).reduce((acc1, state) => {\r\n          acc1[state] = Object.keys(zones[state]).reduce((acc2, district) => {\r\n            const zone = zones[state][district].zone;\r\n            if (zone) {\r\n              acc2[district] = zone;\r\n              statistic[zone] += 1;\r\n            }\r\n            return acc2;\r\n          }, {});\r\n          return acc1;\r\n        }, {});\r\n      } else if (currentMapMeta.mapType === MAP_TYPES.STATE) {\r\n        const state = currentMap.name;\r\n        currentMapData[state] = Object.keys(zones[state]).reduce(\r\n          (acc, district) => {\r\n            const zone = zones[state][district].zone;\r\n            if (zone) {\r\n              acc[district] = zone;\r\n              statistic[zone] += 1;\r\n            }\r\n            return acc;\r\n          },\r\n          {}\r\n        );\r\n      }\r\n    } else {\r\n      const dataTypes = ['confirmed', 'active', 'recovered', 'deceased'];\r\n      statistic = dataTypes.reduce((acc, dtype) => {\r\n        acc[dtype] = {total: 0, max: 0};\r\n        return acc;\r\n      }, {});\r\n      if (currentMapMeta.mapType === MAP_TYPES.COUNTRY) {\r\n        if (currentMap.view === MAP_VIEWS.STATES) {\r\n          currentMapData = states.reduce((acc, state) => {\r\n            acc[state.state] = {};\r\n            dataTypes.forEach((dtype) => {\r\n              let typeCount =\r\n                parseInt(state[dtype !== 'deceased' ? dtype : 'deaths']) || 0;\r\n              if (currentMap.stat === MAP_STATISTICS.PER_MILLION)\r\n                typeCount = (1e6 * typeCount) / STATE_POPULATIONS[state.state];\r\n              if (state.state !== 'Total') {\r\n                statistic[dtype].total += typeCount;\r\n                if (typeCount > statistic[dtype].max) {\r\n                  statistic[dtype].max = typeCount;\r\n                }\r\n              }\r\n              acc[state.state][dtype] = typeCount;\r\n            });\r\n            return acc;\r\n          }, {});\r\n        } else {\r\n          currentMapData = Object.keys(districts).reduce((acc1, state) => {\r\n            const districtWiseData = (districts[state] || {districtData: {}})\r\n              .districtData;\r\n            acc1[state] = Object.keys(districtWiseData).reduce(\r\n              (acc2, district) => {\r\n                acc2[district] = {};\r\n                dataTypes.forEach((dtype) => {\r\n                  const typeCount = parseInt(districtWiseData[district][dtype]);\r\n                  statistic[dtype].total += typeCount;\r\n                  if (typeCount > statistic[dtype].max) {\r\n                    statistic[dtype].max = typeCount;\r\n                  }\r\n                  acc2[district][dtype] = typeCount;\r\n                });\r\n                return acc2;\r\n              },\r\n              {}\r\n            );\r\n            return acc1;\r\n          }, {});\r\n        }\r\n      } else if (currentMapMeta.mapType === MAP_TYPES.STATE) {\r\n        const districtWiseData = (\r\n          districts[currentMap.name] || {districtData: {}}\r\n        ).districtData;\r\n        currentMapData[currentMap.name] = Object.keys(districtWiseData).reduce(\r\n          (acc, district) => {\r\n            acc[district] = {};\r\n            dataTypes.forEach((dtype) => {\r\n              const typeCount = parseInt(districtWiseData[district][dtype]);\r\n              statistic[dtype].total += typeCount;\r\n              if (typeCount > statistic[dtype].max) {\r\n                statistic[dtype].max = typeCount;\r\n              }\r\n              acc[district][dtype] = typeCount;\r\n            });\r\n            return acc;\r\n          },\r\n          {}\r\n        );\r\n        currentMapData[currentMap.name].Total = states.find(\r\n          (state) => currentMap.name === state.state\r\n        );\r\n      }\r\n    }\r\n    return [statistic, currentMapData];\r\n  }, [currentMap, currentMapMeta.mapType, districts, zones, states]);\r\n\r\n  const [hoveredRegion, panelRegion] = useMemo(() => {\r\n    if (!regionHighlighted.district) {\r\n      const state = getRegionFromState(\r\n        states.find((state) => regionHighlighted.state === state.state)\r\n      );\r\n      return [state, state];\r\n    } else {\r\n      const stateDistrictObj = districts[regionHighlighted.state] || {\r\n        districtData: {},\r\n      };\r\n      const districtData = stateDistrictObj.districtData[\r\n        regionHighlighted.district\r\n      ] || {\r\n        confirmed: 0,\r\n        active: 0,\r\n        recovered: 0,\r\n        deaths: 0,\r\n      };\r\n      const district = getRegionFromDistrict(\r\n        districtData,\r\n        regionHighlighted.district\r\n      );\r\n      let state = getRegionFromState(\r\n        states.find((state) => state.state === regionHighlighted.state)\r\n      );\r\n      district.district = regionHighlighted.district;\r\n      district.state = state.state;\r\n      if (currentMapMeta.mapType === MAP_TYPES.COUNTRY)\r\n        state = states.find((state) => state.state === 'Total');\r\n      return [district, state];\r\n    }\r\n  }, [\r\n    states,\r\n    districts,\r\n    currentMapMeta.mapType,\r\n    regionHighlighted.state,\r\n    regionHighlighted.district,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (regionHighlighted.district) {\r\n      if (\r\n        currentMap.name !== regionHighlighted.state &&\r\n        !(\r\n          currentMapMeta.mapType === MAP_TYPES.COUNTRY &&\r\n          currentMap.view === MAP_VIEWS.DISTRICTS\r\n        )\r\n      ) {\r\n        const state = regionHighlighted.state;\r\n        const newMapMeta = MAP_META[state];\r\n        if (!newMapMeta) {\r\n          return;\r\n        }\r\n        setCurrentMap({\r\n          name: state,\r\n          view: MAP_VIEWS.DISTRICTS,\r\n          stat:\r\n            currentMap.stat === MAP_STATISTICS.PER_MILLION\r\n              ? MAP_STATISTICS.TOTAL\r\n              : currentMap.stat,\r\n        });\r\n      }\r\n    } else if (isCountryLoaded && currentMapMeta.mapType === MAP_TYPES.STATE) {\r\n      setCurrentMap({\r\n        name: 'India',\r\n        view:\r\n          currentMap.stat === MAP_STATISTICS.ZONE\r\n            ? MAP_VIEWS.DISTRICTS\r\n            : MAP_VIEWS.STATES,\r\n        stat: currentMap.stat,\r\n      });\r\n    }\r\n  }, [\r\n    isCountryLoaded,\r\n    regionHighlighted.state,\r\n    regionHighlighted.district,\r\n    currentMap,\r\n    currentMapMeta.mapType,\r\n  ]);\r\n\r\n  const switchMapToState = useCallback(\r\n    (state) => {\r\n      const newMapMeta = MAP_META[state];\r\n      if (!newMapMeta) {\r\n        return;\r\n      }\r\n      if (newMapMeta.mapType === MAP_TYPES.STATE) {\r\n        const {districtData} = districts[state] || {\r\n          districtData: {},\r\n        };\r\n        const topDistrict = Object.keys(districtData)\r\n          .filter((state) => state !== 'Unknown')\r\n          .sort((a, b) => {\r\n            return districtData[b].confirmed - districtData[a].confirmed;\r\n          })[0];\r\n        ReactDOM.unstable_batchedUpdates(() => {\r\n          setRegionHighlighted({\r\n            district: topDistrict,\r\n            state: state,\r\n          });\r\n          setCurrentMap({\r\n            name: state,\r\n            view: MAP_VIEWS.DISTRICTS,\r\n            stat:\r\n              currentMap.stat === MAP_STATISTICS.PER_MILLION\r\n                ? MAP_STATISTICS.TOTAL\r\n                : currentMap.stat,\r\n          });\r\n        });\r\n      } else {\r\n        ReactDOM.unstable_batchedUpdates(() => {\r\n          setCurrentMap({\r\n            name: 'India',\r\n            view:\r\n              currentMap.stat === MAP_STATISTICS.ZONE\r\n                ? MAP_VIEWS.DISTRICTS\r\n                : MAP_VIEWS.STATES,\r\n            stat: currentMap.stat,\r\n          });\r\n          setRegionHighlighted({\r\n            state: 'Total',\r\n          });\r\n        });\r\n      }\r\n    },\r\n    [currentMap.stat, districts, setRegionHighlighted]\r\n  );\r\n\r\n  const testObj = stateTestData[panelRegion.state];\r\n\r\n  let hoveredRegionCount;\r\n  let hoveredRegionZone;\r\n  if (currentMap.stat !== MAP_STATISTICS.ZONE) {\r\n    const data =\r\n      hoveredRegion.district && currentMapData[hoveredRegion.state]\r\n        ? currentMapData[hoveredRegion.state][hoveredRegion.district]\r\n        : hoveredRegion.state !== currentMap.name\r\n        ? currentMapData[hoveredRegion.state]\r\n        : currentMapData[hoveredRegion.state].Total;\r\n    hoveredRegionCount = data\r\n      ? currentMap.stat === MAP_STATISTICS.PER_MILLION\r\n        ? Number(parseFloat(data[mapOption]).toFixed(2))\r\n        : data[mapOption]\r\n      : 0;\r\n  } else {\r\n    hoveredRegionZone =\r\n      zones[hoveredRegion.state] &&\r\n      zones[hoveredRegion.state][hoveredRegion.district]\r\n        ? zones[hoveredRegion.state][hoveredRegion.district].zone\r\n        : '';\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`MapExplorer fadeInUp ${\r\n        anchor === 'mapexplorer' ? 'stickied' : ''\r\n      }`}\r\n      style={{\r\n        animationDelay: '1.5s',\r\n        display: anchor === 'timeseries' ? 'none' : '',\r\n      }}\r\n    >\r\n      {window.innerWidth > 769 && (\r\n        <div\r\n          className={`anchor ${anchor === 'mapexplorer' ? 'stickied' : ''}`}\r\n          onClick={() => {\r\n            setAnchor(anchor === 'mapexplorer' ? null : 'mapexplorer');\r\n          }}\r\n        >\r\n          <Icon.Anchor />\r\n        </div>\r\n      )}\r\n      <div className=\"header\">\r\n        <h1>\r\n          {t(currentMap.name)} {t('Map')}\r\n        </h1>\r\n        <h6>\r\n          {t('{{action}} over a {{mapType}} for more details', {\r\n            action: t(window.innerWidth <= 769 ? 'Tap' : 'Hover'),\r\n            mapType: t(\r\n              currentMapMeta.mapType === MAP_TYPES.COUNTRY\r\n                ? 'state/UT'\r\n                : 'District'\r\n            ),\r\n          })}\r\n        </h6>\r\n      </div>\r\n\r\n      <div className=\"map-stats\">\r\n        <div\r\n          className={`stats fadeInUp ${\r\n            mapOption === 'confirmed' ? 'focused' : ''\r\n          }`}\r\n          style={{animationDelay: '2s'}}\r\n          onClick={() => setMapOption('confirmed')}\r\n        >\r\n          <h5>{window.innerWidth <= 769 ? t('Cnfmd') : t('Confirmed')}</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{formatNumber(panelRegion.confirmed)}</h1>\r\n            <h6>{`+${formatNumber(panelRegion.deltaconfirmed)}`}</h6>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={`stats is-blue fadeInUp ${\r\n            mapOption === 'active' ? 'focused' : ''\r\n          }`}\r\n          style={{animationDelay: '2.1s'}}\r\n          onClick={() => setMapOption('active')}\r\n        >\r\n          <h5>{window.innerWidth <= 769 ? t('Actv') : t('Active')}</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{formatNumber(panelRegion.active)}</h1>\r\n            <h6>{` `}</h6>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={`stats is-green fadeInUp ${\r\n            mapOption === 'recovered' ? 'focused' : ''\r\n          }`}\r\n          style={{animationDelay: '2.2s'}}\r\n          onClick={() => setMapOption('recovered')}\r\n        >\r\n          <h5>{window.innerWidth <= 769 ? t('Rcvrd') : t('Recovered')}</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{formatNumber(panelRegion.recovered)}</h1>\r\n            <h6>{`+${formatNumber(panelRegion.deltarecovered)}`}</h6>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={`stats is-gray fadeInUp ${\r\n            mapOption === 'deceased' ? 'focused' : ''\r\n          }`}\r\n          style={{animationDelay: '2.3s'}}\r\n          onClick={() => setMapOption('deceased')}\r\n        >\r\n          <h5>{window.innerWidth <= 769 ? t('Dcsd') : t('Deceased')}</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{formatNumber(panelRegion.deaths)}</h1>\r\n            <h6>{`+${formatNumber(panelRegion.deltadeaths)}`}</h6>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"stats is-purple tested fadeInUp\"\r\n          style={{animationDelay: '2.4s'}}\r\n        >\r\n          <h5>{t('Tested')}</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{formatNumber(testObj?.totaltested)}</h1>\r\n          </div>\r\n          <h6 className=\"timestamp\">\r\n            {!isNaN(parse(testObj?.updatedon, 'dd/MM/yyyy', new Date()))\r\n              ? t('As of {{date}}', {\r\n                  date: formatDayMonth(testObj?.updatedon),\r\n                })\r\n              : ''}\r\n          </h6>\r\n          {testObj?.totaltested?.length > 1 && (\r\n            <a href={testObj.source} target=\"_noblank\">\r\n              <Icon.Link />\r\n            </a>\r\n          )}\r\n          {panelRegion.state === 'Total' ? testedToolTip : ''}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"meta fadeInUp\" style={{animationDelay: '2.4s'}}>\r\n        <h2\r\n          className={`${\r\n            currentMap.stat !== MAP_STATISTICS.ZONE\r\n              ? mapOption !== 'confirmed'\r\n                ? mapOption\r\n                : ''\r\n              : hoveredRegionZone\r\n          }`}\r\n        >\r\n          {hoveredRegion.district\r\n            ? t(hoveredRegion.district) +\r\n              (hoveredRegion.district === 'Unknown'\r\n                ? ` (${t(hoveredRegion.state)})`\r\n                : '')\r\n            : t(hoveredRegion.state)}\r\n        </h2>\r\n\r\n        {currentMapMeta.mapType !== MAP_TYPES.STATE &&\r\n          panelRegion.lastupdatedtime && (\r\n            <div className=\"last-update\">\r\n              <h6>{t('Last updated')}</h6>\r\n              <h3>\r\n                {isNaN(Date.parse(formatDate(panelRegion.lastupdatedtime)))\r\n                  ? ''\r\n                  : formatLastUpdated(panelRegion.lastupdatedtime) +\r\n                    ' ' +\r\n                    t('ago')}\r\n              </h3>\r\n            </div>\r\n          )}\r\n\r\n        {currentMapMeta.mapType === MAP_TYPES.STATE ? (\r\n          <Link to={`state/${STATE_CODES_REVERSE[panelRegion.state]}`}>\r\n            <div className=\"button state-page-button\">\r\n              <abbr>{t('Visit state page')}</abbr>\r\n              <Icon.ArrowRightCircle />\r\n            </div>\r\n          </Link>\r\n        ) : null}\r\n\r\n        {currentMap.stat !== MAP_STATISTICS.ZONE &&\r\n        (currentMapMeta.mapType === MAP_TYPES.STATE ||\r\n          (currentMapMeta.mapType === MAP_TYPES.COUNTRY &&\r\n            currentMap.stat !== MAP_STATISTICS.TOTAL)) &&\r\n        (currentMap.stat !== MAP_STATISTICS.HOTSPOTS ||\r\n          hoveredRegion?.district) ? (\r\n          <h1\r\n            className={`district ${mapOption !== 'confirmed' ? mapOption : ''}`}\r\n          >\r\n            {hoveredRegionCount}\r\n            <br />\r\n            <span>\r\n              {t(mapOption)}{' '}\r\n              {currentMap.stat === MAP_STATISTICS.PER_MILLION\r\n                ? ` ${t('per million')}`\r\n                : ''}\r\n            </span>\r\n          </h1>\r\n        ) : null}\r\n\r\n        {currentMapMeta.mapType === MAP_TYPES.STATE ? (\r\n          <div\r\n            className=\"button back-button\"\r\n            onClick={() => switchMapToState('India')}\r\n          >\r\n            {t('Back')}\r\n          </div>\r\n        ) : null}\r\n\r\n        {currentMapMeta.mapType === MAP_TYPES.STATE &&\r\n        currentMapData.Unknown &&\r\n        currentMapData.Unknown[mapOption] > 0 ? (\r\n          <h4 className=\"unknown\">\r\n            {t('Districts unknown for')} {currentMapData.Unknown[mapOption]}{' '}\r\n            {t('people')}\r\n          </h4>\r\n        ) : null}\r\n      </div>\r\n\r\n      <div>\r\n        {mapOption && (\r\n          <ChoroplethMap\r\n            statistic={statistic}\r\n            currentMap={currentMap}\r\n            mapData={currentMapData}\r\n            regionHighlighted={regionHighlighted}\r\n            setRegionHighlighted={setRegionHighlighted}\r\n            changeMap={switchMapToState}\r\n            mapOption={mapOption}\r\n            isCountryLoaded={isCountryLoaded}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"tabs-map\">\r\n        <div\r\n          className={`tab ${\r\n            currentMap.stat === MAP_STATISTICS.TOTAL ? 'focused' : ''\r\n          }`}\r\n          onClick={() => {\r\n            setCurrentMap({\r\n              name: currentMap.name,\r\n              view:\r\n                currentMapMeta.mapType === MAP_TYPES.COUNTRY\r\n                  ? MAP_VIEWS.STATES\r\n                  : MAP_VIEWS.DISTRICTS,\r\n              stat: MAP_STATISTICS.TOTAL,\r\n            });\r\n            if (currentMapMeta.mapType === MAP_TYPES.COUNTRY)\r\n              setRegionHighlighted({\r\n                state: regionHighlighted.state,\r\n              });\r\n          }}\r\n        >\r\n          <h4>{t('Total Cases')}</h4>\r\n        </div>\r\n        {isCountryLoaded && (\r\n          <div\r\n            className={`tab ${\r\n              currentMap.stat === MAP_STATISTICS.PER_MILLION ? 'focused' : ''\r\n            }`}\r\n            onClick={() => {\r\n              if (currentMapMeta.mapType === MAP_TYPES.STATE) return;\r\n              setCurrentMap({\r\n                name: currentMap.name,\r\n                view: MAP_VIEWS.STATES,\r\n                stat: MAP_STATISTICS.PER_MILLION,\r\n              });\r\n              setRegionHighlighted({\r\n                state: regionHighlighted.state,\r\n              });\r\n            }}\r\n          >\r\n            <h4>\r\n              {t('Cases per million')}\r\n              <sup>&dagger;</sup>\r\n            </h4>\r\n          </div>\r\n        )}\r\n        {isCountryLoaded && (\r\n          <div\r\n            className={`tab ${\r\n              currentMap.stat === MAP_STATISTICS.HOTSPOTS ? 'focused' : ''\r\n            }`}\r\n            onClick={() => {\r\n              if (currentMapMeta.mapType === MAP_TYPES.STATE) return;\r\n              setCurrentMap({\r\n                name: currentMap.name,\r\n                view: MAP_VIEWS.DISTRICTS,\r\n                stat: MAP_STATISTICS.HOTSPOTS,\r\n              });\r\n            }}\r\n          >\r\n            <h4>{t('Hotspots')}</h4>\r\n          </div>\r\n        )}\r\n        <div\r\n          className={`tab ${\r\n            currentMap.stat === MAP_STATISTICS.ZONE ? 'focused' : ''\r\n          }`}\r\n          onClick={() => {\r\n            setCurrentMap({\r\n              name: currentMap.name,\r\n              view: MAP_VIEWS.DISTRICTS,\r\n              stat: MAP_STATISTICS.ZONE,\r\n            });\r\n            if (currentMapMeta.mapType === MAP_TYPES.COUNTRY)\r\n              setRegionHighlighted({\r\n                state: 'Total',\r\n              });\r\n          }}\r\n        >\r\n          <h4>{t('Zones')}</h4>\r\n        </div>\r\n      </div>\r\n\r\n      <h6 className=\"footnote table-fineprint\">\r\n        &dagger; {t('Based on 2019 population projection by NCP') + ' ('}\r\n        <a\r\n          href=\"https://nhm.gov.in/New_Updates_2018/Report_Population_Projection_2019.pdf\"\r\n          target=\"_noblank\"\r\n          style={{color: '#6c757d'}}\r\n        >\r\n          {t('source')}\r\n        </a>\r\n        )\r\n      </h6>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(MapExplorer, isEqual);\r\n"]},"metadata":{},"sourceType":"module"}